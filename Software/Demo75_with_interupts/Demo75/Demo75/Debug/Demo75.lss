
Demo75.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000013a  00800100  0000108c  00001120  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000108c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000011d  0080023a  0080023a  0000125a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000125a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  000012f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000147c  00000000  00000000  00001490  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ca2  00000000  00000000  0000290c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000172b  00000000  00000000  000035ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000040c  00000000  00000000  00004cdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000104d5  00000000  00000000  000050e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000941  00000000  00000000  000155bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00015efe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003ef0  00000000  00000000  0001604e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5c c0       	rjmp	.+184    	; 0xba <__ctors_end>
       2:	00 00       	nop
       4:	75 c0       	rjmp	.+234    	; 0xf0 <__bad_interrupt>
       6:	00 00       	nop
       8:	73 c0       	rjmp	.+230    	; 0xf0 <__bad_interrupt>
       a:	00 00       	nop
       c:	71 c0       	rjmp	.+226    	; 0xf0 <__bad_interrupt>
       e:	00 00       	nop
      10:	6f c0       	rjmp	.+222    	; 0xf0 <__bad_interrupt>
      12:	00 00       	nop
      14:	6d c0       	rjmp	.+218    	; 0xf0 <__bad_interrupt>
      16:	00 00       	nop
      18:	6b c0       	rjmp	.+214    	; 0xf0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	69 c0       	rjmp	.+210    	; 0xf0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	67 c0       	rjmp	.+206    	; 0xf0 <__bad_interrupt>
      22:	00 00       	nop
      24:	65 c0       	rjmp	.+202    	; 0xf0 <__bad_interrupt>
      26:	00 00       	nop
      28:	63 c0       	rjmp	.+198    	; 0xf0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	61 c0       	rjmp	.+194    	; 0xf0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	5f c0       	rjmp	.+190    	; 0xf0 <__bad_interrupt>
      32:	00 00       	nop
      34:	5d c0       	rjmp	.+186    	; 0xf0 <__bad_interrupt>
      36:	00 00       	nop
      38:	5b c0       	rjmp	.+182    	; 0xf0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	59 c0       	rjmp	.+178    	; 0xf0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	1a c3       	rjmp	.+1588   	; 0x676 <__vector_16>
      42:	00 00       	nop
      44:	55 c0       	rjmp	.+170    	; 0xf0 <__bad_interrupt>
      46:	00 00       	nop
      48:	53 c0       	rjmp	.+166    	; 0xf0 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	51 c0       	rjmp	.+162    	; 0xf0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	85 c0       	rjmp	.+266    	; 0x15c <__vector_20>
      52:	00 00       	nop
      54:	4d c0       	rjmp	.+154    	; 0xf0 <__bad_interrupt>
      56:	00 00       	nop
      58:	4b c0       	rjmp	.+150    	; 0xf0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	49 c0       	rjmp	.+146    	; 0xf0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	47 c0       	rjmp	.+142    	; 0xf0 <__bad_interrupt>
      62:	00 00       	nop
      64:	45 c0       	rjmp	.+138    	; 0xf0 <__bad_interrupt>
      66:	00 00       	nop
      68:	43 c0       	rjmp	.+134    	; 0xf0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	41 c0       	rjmp	.+130    	; 0xf0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	3f c0       	rjmp	.+126    	; 0xf0 <__bad_interrupt>
      72:	00 00       	nop
      74:	3d c0       	rjmp	.+122    	; 0xf0 <__bad_interrupt>
      76:	00 00       	nop
      78:	3b c0       	rjmp	.+118    	; 0xf0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	7c 02       	muls	r23, r28
      7e:	7f 02       	muls	r23, r31
      80:	82 02       	muls	r24, r18
      82:	85 02       	muls	r24, r21
      84:	88 02       	muls	r24, r24
      86:	8b 02       	muls	r24, r27
      88:	8e 02       	muls	r24, r30
      8a:	91 02       	muls	r25, r17
      8c:	49 04       	cpc	r4, r9
      8e:	09 05       	cpc	r16, r9
      90:	09 05       	cpc	r16, r9
      92:	a9 04       	cpc	r10, r9
      94:	8d 04       	cpc	r8, r13
      96:	09 05       	cpc	r16, r9
      98:	09 05       	cpc	r16, r9
      9a:	09 05       	cpc	r16, r9
      9c:	c4 04       	cpc	r12, r4
      9e:	e0 04       	cpc	r14, r0
      a0:	fc 04       	cpc	r15, r12
      a2:	ee 04       	cpc	r14, r14
      a4:	d2 04       	cpc	r13, r2
      a6:	09 05       	cpc	r16, r9
      a8:	09 05       	cpc	r16, r9
      aa:	09 05       	cpc	r16, r9
      ac:	39 04       	cpc	r3, r9
      ae:	09 05       	cpc	r16, r9
      b0:	73 04       	cpc	r7, r3
      b2:	09 05       	cpc	r16, r9
      b4:	09 05       	cpc	r16, r9
      b6:	09 05       	cpc	r16, r9
      b8:	59 04       	cpc	r5, r9

000000ba <__ctors_end>:
      ba:	11 24       	eor	r1, r1
      bc:	1f be       	out	0x3f, r1	; 63
      be:	cf ef       	ldi	r28, 0xFF	; 255
      c0:	d8 e0       	ldi	r29, 0x08	; 8
      c2:	de bf       	out	0x3e, r29	; 62
      c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
      c6:	12 e0       	ldi	r17, 0x02	; 2
      c8:	a0 e0       	ldi	r26, 0x00	; 0
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	ec e8       	ldi	r30, 0x8C	; 140
      ce:	f0 e1       	ldi	r31, 0x10	; 16
      d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x10>
      d2:	05 90       	lpm	r0, Z+
      d4:	0d 92       	st	X+, r0
      d6:	aa 33       	cpi	r26, 0x3A	; 58
      d8:	b1 07       	cpc	r27, r17
      da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0xc>

000000dc <__do_clear_bss>:
      dc:	23 e0       	ldi	r18, 0x03	; 3
      de:	aa e3       	ldi	r26, 0x3A	; 58
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
      e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
      e6:	a7 35       	cpi	r26, 0x57	; 87
      e8:	b2 07       	cpc	r27, r18
      ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>
      ec:	7f d3       	rcall	.+1790   	; 0x7ec <main>
      ee:	cc c7       	rjmp	.+3992   	; 0x1088 <_exit>

000000f0 <__bad_interrupt>:
      f0:	87 cf       	rjmp	.-242    	; 0x0 <__vectors>

000000f2 <uart_init>:
		sprintf (buffer, "Received: '\\0'(0)\n");
	} else {
		sprintf (buffer, "Received: %c(%d)\n", data, data);
	}
	send_str(buffer);
}
      f2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
      f6:	83 e3       	ldi	r24, 0x33	; 51
      f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
      fc:	a1 ec       	ldi	r26, 0xC1	; 193
      fe:	b0 e0       	ldi	r27, 0x00	; 0
     100:	88 e1       	ldi	r24, 0x18	; 24
     102:	8c 93       	st	X, r24
     104:	e2 ec       	ldi	r30, 0xC2	; 194
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	8e e0       	ldi	r24, 0x0E	; 14
     10a:	80 83       	st	Z, r24
     10c:	88 e9       	ldi	r24, 0x98	; 152
     10e:	8c 93       	st	X, r24
     110:	86 e0       	ldi	r24, 0x06	; 6
     112:	80 83       	st	Z, r24
     114:	08 95       	ret

00000116 <send_str>:
     116:	cf 93       	push	r28
     118:	df 93       	push	r29
     11a:	dc 01       	movw	r26, r24
     11c:	9c 91       	ld	r25, X
     11e:	99 23       	and	r25, r25
     120:	69 f0       	breq	.+26     	; 0x13c <send_str+0x26>
     122:	11 96       	adiw	r26, 0x01	; 1
     124:	e0 ec       	ldi	r30, 0xC0	; 192
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	c6 ec       	ldi	r28, 0xC6	; 198
     12a:	d0 e0       	ldi	r29, 0x00	; 0
     12c:	29 2f       	mov	r18, r25
     12e:	90 81       	ld	r25, Z
     130:	95 ff       	sbrs	r25, 5
     132:	fd cf       	rjmp	.-6      	; 0x12e <send_str+0x18>
     134:	28 83       	st	Y, r18
     136:	9d 91       	ld	r25, X+
     138:	91 11       	cpse	r25, r1
     13a:	f8 cf       	rjmp	.-16     	; 0x12c <send_str+0x16>
     13c:	e0 ec       	ldi	r30, 0xC0	; 192
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	80 81       	ld	r24, Z
     142:	85 ff       	sbrs	r24, 5
     144:	fd cf       	rjmp	.-6      	; 0x140 <send_str+0x2a>
     146:	8d e0       	ldi	r24, 0x0D	; 13
     148:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     14c:	df 91       	pop	r29
     14e:	cf 91       	pop	r28
     150:	08 95       	ret

00000152 <get_char>:
 *
 * \retval Next data byte in receive buffer
 */
static inline uint8_t uart_getchar(void)
{
		unsigned char temp = value;
     152:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <value>
		value = '\0';
     156:	10 92 4a 03 	sts	0x034A, r1	; 0x80034a <value>
extern uint8_t get_char(void)
{	
	uint8_t data = '\0';
	data = uart_getchar();
	return data;
}
     15a:	08 95       	ret

0000015c <__vector_20>:

ISR (USART0_RX_vect)
{
     15c:	1f 92       	push	r1
     15e:	0f 92       	push	r0
     160:	0f b6       	in	r0, 0x3f	; 63
     162:	0f 92       	push	r0
     164:	11 24       	eor	r1, r1
     166:	8f 93       	push	r24
	/* Put data into buffer, sends the data */
	value = UDR0;
     168:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     16c:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <value>
     170:	8f 91       	pop	r24
     172:	0f 90       	pop	r0
     174:	0f be       	out	0x3f, r0	; 63
     176:	0f 90       	pop	r0
     178:	1f 90       	pop	r1
     17a:	18 95       	reti

0000017c <setPD>:
static int PB3_sta = 0;
static int PB4_sta = 0;

void setPD(int _PD2_state, int _PD3_state){

	if (_PD2_state == 0){
     17c:	89 2b       	or	r24, r25
     17e:	39 f4       	brne	.+14     	; 0x18e <setPD+0x12>
		if (_PD3_state == 0) {
     180:	67 2b       	or	r22, r23
     182:	11 f4       	brne	.+4      	; 0x188 <setPD+0xc>
			PORTD = 0b0000;
     184:	1b b8       	out	0x0b, r1	; 11
     186:	08 95       	ret
		}
		else {
			PORTD = 0b1000;
     188:	88 e0       	ldi	r24, 0x08	; 8
     18a:	8b b9       	out	0x0b, r24	; 11
     18c:	08 95       	ret
		}
	}

	else {
		if (_PD3_state == 0) {
     18e:	67 2b       	or	r22, r23
     190:	19 f4       	brne	.+6      	; 0x198 <setPD+0x1c>
			PORTD = 0b0100;
     192:	84 e0       	ldi	r24, 0x04	; 4
     194:	8b b9       	out	0x0b, r24	; 11
     196:	08 95       	ret
		}
		else {
			PORTD = 0b1100;
     198:	8c e0       	ldi	r24, 0x0C	; 12
     19a:	8b b9       	out	0x0b, r24	; 11
     19c:	08 95       	ret

0000019e <setPB>:
}


void setPB(int _PB3_state, int _PB4_state){

	if (_PB3_state == 0){
     19e:	89 2b       	or	r24, r25
     1a0:	39 f4       	brne	.+14     	; 0x1b0 <setPB+0x12>
		if (_PB4_state == 0) {
     1a2:	67 2b       	or	r22, r23
     1a4:	11 f4       	brne	.+4      	; 0x1aa <setPB+0xc>
			PORTB = 0b0000;
     1a6:	15 b8       	out	0x05, r1	; 5
     1a8:	08 95       	ret
		}
		else {
			PORTB = 0b10000;
     1aa:	80 e1       	ldi	r24, 0x10	; 16
     1ac:	85 b9       	out	0x05, r24	; 5
     1ae:	08 95       	ret
		}
	}

	else {
		if (_PB4_state == 0) {
     1b0:	67 2b       	or	r22, r23
     1b2:	19 f4       	brne	.+6      	; 0x1ba <setPB+0x1c>
			PORTB = 0b01000;
     1b4:	88 e0       	ldi	r24, 0x08	; 8
     1b6:	85 b9       	out	0x05, r24	; 5
     1b8:	08 95       	ret
		}
		else {
			PORTB = 0b11000;
     1ba:	88 e1       	ldi	r24, 0x18	; 24
     1bc:	85 b9       	out	0x05, r24	; 5
     1be:	08 95       	ret

000001c0 <motorRfwd>:
{
	
	//OCR0B = 255-pwm;
	
	//PORTD |=  (1<<PORTD2);
	PB3_sta = 0;
     1c0:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <PB3_sta+0x1>
     1c4:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <PB3_sta>
	setPB(PB3_sta, PB4_sta);
     1c8:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <__data_end>
     1cc:	70 91 3b 02 	lds	r23, 0x023B	; 0x80023b <__data_end+0x1>
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	e4 df       	rcall	.-56     	; 0x19e <setPB>
	PD2_sta = 1;
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <PD2_sta+0x1>
     1de:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <PD2_sta>
	setPD(PD2_sta, PD3_sta);
     1e2:	60 91 3e 02 	lds	r22, 0x023E	; 0x80023e <PD3_sta>
     1e6:	70 91 3f 02 	lds	r23, 0x023F	; 0x80023f <PD3_sta+0x1>
     1ea:	c8 cf       	rjmp	.-112    	; 0x17c <setPD>
     1ec:	08 95       	ret

000001ee <motorLfwd>:
void motorLfwd(uint16_t pwm)
{

	//OCR0A = 255-pwm;
	//PORTD |= (1<<PORTD3);
	PB4_sta = 0;
     1ee:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <__data_end+0x1>
     1f2:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <__data_end>
	setPB(PB3_sta, PB4_sta);
     1f6:	60 e0       	ldi	r22, 0x00	; 0
     1f8:	70 e0       	ldi	r23, 0x00	; 0
     1fa:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <PB3_sta>
     1fe:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <PB3_sta+0x1>
     202:	cd df       	rcall	.-102    	; 0x19e <setPB>
	PD3_sta = 1;
     204:	81 e0       	ldi	r24, 0x01	; 1
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <PD3_sta+0x1>
     20c:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <PD3_sta>
	setPD(PD2_sta, PD3_sta);
     210:	61 e0       	ldi	r22, 0x01	; 1
     212:	70 e0       	ldi	r23, 0x00	; 0
     214:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <PD2_sta>
     218:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <PD2_sta+0x1>
     21c:	af cf       	rjmp	.-162    	; 0x17c <setPD>
     21e:	08 95       	ret

00000220 <motorRbwd>:
{
	
	//OCR0B = pwm;
	
	//PORTD &=  !(1<<PORTD2);
	PB3_sta = 1;
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <PB3_sta+0x1>
     228:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <PB3_sta>
	setPB(PB3_sta, PB4_sta);
     22c:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <__data_end>
     230:	70 91 3b 02 	lds	r23, 0x023B	; 0x80023b <__data_end+0x1>
     234:	b4 df       	rcall	.-152    	; 0x19e <setPB>
	PD2_sta = 0;
     236:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <PD2_sta+0x1>
     23a:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <PD2_sta>
	setPD(PD2_sta, PD3_sta);
     23e:	60 91 3e 02 	lds	r22, 0x023E	; 0x80023e <PD3_sta>
     242:	70 91 3f 02 	lds	r23, 0x023F	; 0x80023f <PD3_sta+0x1>
     246:	80 e0       	ldi	r24, 0x00	; 0
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	98 cf       	rjmp	.-208    	; 0x17c <setPD>
     24c:	08 95       	ret

0000024e <motorLbwd>:
{

	//OCR0A = pwm;

	//PORTD &= !(1<<PORTD3);
	PB4_sta = 1;
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <__data_end+0x1>
     256:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <__data_end>
	setPB(PB3_sta, PB4_sta);
     25a:	61 e0       	ldi	r22, 0x01	; 1
     25c:	70 e0       	ldi	r23, 0x00	; 0
     25e:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <PB3_sta>
     262:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <PB3_sta+0x1>
     266:	9b df       	rcall	.-202    	; 0x19e <setPB>
	PD3_sta = 0;
     268:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <PD3_sta+0x1>
     26c:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <PD3_sta>
	setPD(PD2_sta, PD3_sta);
     270:	60 e0       	ldi	r22, 0x00	; 0
     272:	70 e0       	ldi	r23, 0x00	; 0
     274:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <PD2_sta>
     278:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <PD2_sta+0x1>
     27c:	7f cf       	rjmp	.-258    	; 0x17c <setPD>
     27e:	08 95       	ret

00000280 <motorR_stop>:

void motorR_stop(void){
	
	//OCR0B = 0;
	//PORTD &= !(1<<PORTD2);
	PB3_sta = 0;
     280:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <PB3_sta+0x1>
     284:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <PB3_sta>
	setPB(PB3_sta, PB4_sta);
     288:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <__data_end>
     28c:	70 91 3b 02 	lds	r23, 0x023B	; 0x80023b <__data_end+0x1>
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	84 df       	rcall	.-248    	; 0x19e <setPB>
	PD2_sta = 0;
     296:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <PD2_sta+0x1>
     29a:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <PD2_sta>
	setPD(PD2_sta, PD3_sta);
     29e:	60 91 3e 02 	lds	r22, 0x023E	; 0x80023e <PD3_sta>
     2a2:	70 91 3f 02 	lds	r23, 0x023F	; 0x80023f <PD3_sta+0x1>
     2a6:	80 e0       	ldi	r24, 0x00	; 0
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	68 cf       	rjmp	.-304    	; 0x17c <setPD>
     2ac:	08 95       	ret

000002ae <motorL_stop>:

void motorL_stop(void){
	
	//OCR0A = 0;
	
	PB4_sta = 0;
     2ae:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <__data_end+0x1>
     2b2:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <__data_end>
	setPB(PB3_sta, PB4_sta);//PORTD &= !(1<<PORTD3);
     2b6:	60 e0       	ldi	r22, 0x00	; 0
     2b8:	70 e0       	ldi	r23, 0x00	; 0
     2ba:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <PB3_sta>
     2be:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <PB3_sta+0x1>
     2c2:	6d df       	rcall	.-294    	; 0x19e <setPB>
	PD3_sta = 0;
     2c4:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <PD3_sta+0x1>
     2c8:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <PD3_sta>
	setPD(PD2_sta, PD3_sta);
     2cc:	60 e0       	ldi	r22, 0x00	; 0
     2ce:	70 e0       	ldi	r23, 0x00	; 0
     2d0:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <PD2_sta>
     2d4:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <PD2_sta+0x1>
     2d8:	51 cf       	rjmp	.-350    	; 0x17c <setPD>
     2da:	08 95       	ret

000002dc <motor_init>:
	// initialize all PWMs to 0% duty cycle (braking)
	//OCR0A =  0;
	//OCR0B  = 0;
	// set PWM pins as digital outputs (the PWM signals will not
	// appear on the lines if they are digital inputs)
	DDRB |= (1 << PORTB3) | (1 << PORTB4);
     2dc:	84 b1       	in	r24, 0x04	; 4
     2de:	88 61       	ori	r24, 0x18	; 24
     2e0:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1 << PORTD2) | (1 << PORTD3);
     2e2:	8a b1       	in	r24, 0x0a	; 10
     2e4:	8c 60       	ori	r24, 0x0C	; 12
     2e6:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b11111111;
     2e8:	8f ef       	ldi	r24, 0xFF	; 255
     2ea:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b11111111;
     2ec:	8a b9       	out	0x0a, r24	; 10
     2ee:	08 95       	ret

000002f0 <move_servo1>:
// Motor Control Functions -- pwm is an 16-bit value

void move_servo1(uint16_t angle)
{
	//OCR1A = /*(2500/180)**/angle;
	OCR1A = (int) (((249-125) / 180 ) * angle + 125);
     2f0:	8d e7       	ldi	r24, 0x7D	; 125
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     2f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     2fc:	08 95       	ret

000002fe <move_servo2>:
}

void move_servo2(uint16_t angle)
{	
	//OCR1B = /*(2500/180)**/angle;
	OCR1B = (int) (((249-125) / 180 ) * angle + 125);	
     2fe:	8d e7       	ldi	r24, 0x7D	; 125
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     306:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     30a:	08 95       	ret

0000030c <servo_init>:
// Motor Initialization routine -- this function must be called
//  before you use any of the above functions
void servo_init()
{	
	//Configure TIMER1
	TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);        //NON Inverted PWM
     30c:	e0 e8       	ldi	r30, 0x80	; 128
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	80 81       	ld	r24, Z
     312:	82 6a       	ori	r24, 0xA2	; 162
     314:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //PRESCALER=64 MODE 14(FAST PWM)
     316:	e1 e8       	ldi	r30, 0x81	; 129
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	80 81       	ld	r24, Z
     31c:	8b 61       	ori	r24, 0x1B	; 27
     31e:	80 83       	st	Z, r24
	ICR1=2499;  //fPWM=50Hz (Period = 20ms Standard).
     320:	83 ec       	ldi	r24, 0xC3	; 195
     322:	99 e0       	ldi	r25, 0x09	; 9
     324:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     328:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>

	// set PWM pins as digital outputs (the PWM signals will not
	// appear on the lines if they are digital inputs)
	DDRD |= (1 << PORTD5)|(1<<PORTD4);
     32c:	8a b1       	in	r24, 0x0a	; 10
     32e:	80 63       	ori	r24, 0x30	; 48
     330:	8a b9       	out	0x0a, r24	; 10
     332:	08 95       	ret

00000334 <stepper_init>:
	PORTC &= ~(1<<r3);

	//sprintf(buffer, "stepperDirection: %d\tcurrentPosition: %d\tr0: %d\tr1: %d\tr2: %d\tr3: %d\n", stepperDirection, currentPosition, r0, r1, r2, r3);
	sprintf(buffer, "step: %d\n", currentPosition);
	send_str(buffer);
}
     334:	87 b1       	in	r24, 0x07	; 7
     336:	8c 63       	ori	r24, 0x3C	; 60
     338:	87 b9       	out	0x07, r24	; 7
     33a:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <currentPosition+0x1>
     33e:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <currentPosition>
     342:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <stepperDirection+0x1>
     346:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <stepperDirection>
     34a:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <stepperQueue>
     34e:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <stepperQueue+0x1>
     352:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <stepperQueue+0x2>
     356:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <stepperQueue+0x3>
     35a:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <stepperQueue+0x4>
     35e:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <stepperQueue+0x5>
     362:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <stepperQueue+0x6>
     366:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <stepperQueue+0x7>
     36a:	08 95       	ret

0000036c <forward_stepper>:
     36c:	af 92       	push	r10
     36e:	bf 92       	push	r11
     370:	cf 92       	push	r12
     372:	df 92       	push	r13
     374:	ef 92       	push	r14
     376:	ff 92       	push	r15
     378:	0f 93       	push	r16
     37a:	1f 93       	push	r17
     37c:	39 2f       	mov	r19, r25
     37e:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <stepperDirection>
     382:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <stepperDirection+0x1>
     386:	45 2b       	or	r20, r21
     388:	b1 f4       	brne	.+44     	; 0x3b6 <forward_stepper+0x4a>
     38a:	41 e0       	ldi	r20, 0x01	; 1
     38c:	50 e0       	ldi	r21, 0x00	; 0
     38e:	50 93 4e 03 	sts	0x034E, r21	; 0x80034e <stepperDirection+0x1>
     392:	40 93 4d 03 	sts	0x034D, r20	; 0x80034d <stepperDirection>
     396:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <stepperQueue>
     39a:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <stepperQueue+0x1>
     39e:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <stepperQueue+0x2>
     3a2:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <stepperQueue+0x3>
     3a6:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <stepperQueue+0x4>
     3aa:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <stepperQueue+0x5>
     3ae:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <stepperQueue+0x6>
     3b2:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <stepperQueue+0x7>
     3b6:	a0 90 4f 03 	lds	r10, 0x034F	; 0x80034f <stepperQueue>
     3ba:	b0 90 50 03 	lds	r11, 0x0350	; 0x800350 <stepperQueue+0x1>
     3be:	c0 90 51 03 	lds	r12, 0x0351	; 0x800351 <stepperQueue+0x2>
     3c2:	d0 90 52 03 	lds	r13, 0x0352	; 0x800352 <stepperQueue+0x3>
     3c6:	e0 90 53 03 	lds	r14, 0x0353	; 0x800353 <stepperQueue+0x4>
     3ca:	f0 90 54 03 	lds	r15, 0x0354	; 0x800354 <stepperQueue+0x5>
     3ce:	00 91 55 03 	lds	r16, 0x0355	; 0x800355 <stepperQueue+0x6>
     3d2:	10 91 56 03 	lds	r17, 0x0356	; 0x800356 <stepperQueue+0x7>
     3d6:	28 2f       	mov	r18, r24
     3d8:	93 2f       	mov	r25, r19
     3da:	99 0f       	add	r25, r25
     3dc:	99 0b       	sbc	r25, r25
     3de:	49 2f       	mov	r20, r25
     3e0:	59 2f       	mov	r21, r25
     3e2:	69 2f       	mov	r22, r25
     3e4:	79 2f       	mov	r23, r25
     3e6:	89 2f       	mov	r24, r25
     3e8:	56 d3       	rcall	.+1708   	; 0xa96 <__adddi3>
     3ea:	20 93 4f 03 	sts	0x034F, r18	; 0x80034f <stepperQueue>
     3ee:	30 93 50 03 	sts	0x0350, r19	; 0x800350 <stepperQueue+0x1>
     3f2:	40 93 51 03 	sts	0x0351, r20	; 0x800351 <stepperQueue+0x2>
     3f6:	50 93 52 03 	sts	0x0352, r21	; 0x800352 <stepperQueue+0x3>
     3fa:	60 93 53 03 	sts	0x0353, r22	; 0x800353 <stepperQueue+0x4>
     3fe:	70 93 54 03 	sts	0x0354, r23	; 0x800354 <stepperQueue+0x5>
     402:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <stepperQueue+0x6>
     406:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <stepperQueue+0x7>
     40a:	1f 91       	pop	r17
     40c:	0f 91       	pop	r16
     40e:	ff 90       	pop	r15
     410:	ef 90       	pop	r14
     412:	df 90       	pop	r13
     414:	cf 90       	pop	r12
     416:	bf 90       	pop	r11
     418:	af 90       	pop	r10
     41a:	08 95       	ret

0000041c <backward_stepper>:
     41c:	af 92       	push	r10
     41e:	bf 92       	push	r11
     420:	cf 92       	push	r12
     422:	df 92       	push	r13
     424:	ef 92       	push	r14
     426:	ff 92       	push	r15
     428:	0f 93       	push	r16
     42a:	1f 93       	push	r17
     42c:	39 2f       	mov	r19, r25
     42e:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <stepperDirection>
     432:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <stepperDirection+0x1>
     436:	41 30       	cpi	r20, 0x01	; 1
     438:	51 05       	cpc	r21, r1
     43a:	a1 f4       	brne	.+40     	; 0x464 <backward_stepper+0x48>
     43c:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <stepperDirection+0x1>
     440:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <stepperDirection>
     444:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <stepperQueue>
     448:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <stepperQueue+0x1>
     44c:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <stepperQueue+0x2>
     450:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <stepperQueue+0x3>
     454:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <stepperQueue+0x4>
     458:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <stepperQueue+0x5>
     45c:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <stepperQueue+0x6>
     460:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <stepperQueue+0x7>
     464:	a0 90 4f 03 	lds	r10, 0x034F	; 0x80034f <stepperQueue>
     468:	b0 90 50 03 	lds	r11, 0x0350	; 0x800350 <stepperQueue+0x1>
     46c:	c0 90 51 03 	lds	r12, 0x0351	; 0x800351 <stepperQueue+0x2>
     470:	d0 90 52 03 	lds	r13, 0x0352	; 0x800352 <stepperQueue+0x3>
     474:	e0 90 53 03 	lds	r14, 0x0353	; 0x800353 <stepperQueue+0x4>
     478:	f0 90 54 03 	lds	r15, 0x0354	; 0x800354 <stepperQueue+0x5>
     47c:	00 91 55 03 	lds	r16, 0x0355	; 0x800355 <stepperQueue+0x6>
     480:	10 91 56 03 	lds	r17, 0x0356	; 0x800356 <stepperQueue+0x7>
     484:	28 2f       	mov	r18, r24
     486:	93 2f       	mov	r25, r19
     488:	99 0f       	add	r25, r25
     48a:	99 0b       	sbc	r25, r25
     48c:	49 2f       	mov	r20, r25
     48e:	59 2f       	mov	r21, r25
     490:	69 2f       	mov	r22, r25
     492:	79 2f       	mov	r23, r25
     494:	89 2f       	mov	r24, r25
     496:	ff d2       	rcall	.+1534   	; 0xa96 <__adddi3>
     498:	20 93 4f 03 	sts	0x034F, r18	; 0x80034f <stepperQueue>
     49c:	30 93 50 03 	sts	0x0350, r19	; 0x800350 <stepperQueue+0x1>
     4a0:	40 93 51 03 	sts	0x0351, r20	; 0x800351 <stepperQueue+0x2>
     4a4:	50 93 52 03 	sts	0x0352, r21	; 0x800352 <stepperQueue+0x3>
     4a8:	60 93 53 03 	sts	0x0353, r22	; 0x800353 <stepperQueue+0x4>
     4ac:	70 93 54 03 	sts	0x0354, r23	; 0x800354 <stepperQueue+0x5>
     4b0:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <stepperQueue+0x6>
     4b4:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <stepperQueue+0x7>
     4b8:	1f 91       	pop	r17
     4ba:	0f 91       	pop	r16
     4bc:	ff 90       	pop	r15
     4be:	ef 90       	pop	r14
     4c0:	df 90       	pop	r13
     4c2:	cf 90       	pop	r12
     4c4:	bf 90       	pop	r11
     4c6:	af 90       	pop	r10
     4c8:	08 95       	ret

000004ca <stepBinary>:

void stepBinary(void) {
     4ca:	0f 93       	push	r16
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	cd b7       	in	r28, 0x3d	; 61
     4d4:	de b7       	in	r29, 0x3e	; 62
     4d6:	cb 54       	subi	r28, 0x4B	; 75
     4d8:	d1 09       	sbc	r29, r1
     4da:	0f b6       	in	r0, 0x3f	; 63
     4dc:	f8 94       	cli
     4de:	de bf       	out	0x3e, r29	; 62
     4e0:	0f be       	out	0x3f, r0	; 63
     4e2:	cd bf       	out	0x3d, r28	; 61
	char buffer[75];
	
	switch(currentPosition) {
     4e4:	e0 91 4b 03 	lds	r30, 0x034B	; 0x80034b <currentPosition>
     4e8:	f0 91 4c 03 	lds	r31, 0x034C	; 0x80034c <currentPosition+0x1>
     4ec:	e8 30       	cpi	r30, 0x08	; 8
     4ee:	f1 05       	cpc	r31, r1
     4f0:	d0 f4       	brcc	.+52     	; 0x526 <stepBinary+0x5c>
     4f2:	e2 5c       	subi	r30, 0xC2	; 194
     4f4:	ff 4f       	sbci	r31, 0xFF	; 255
     4f6:	c9 c2       	rjmp	.+1426   	; 0xa8a <__tablejump2__>
	case 0:
		PORTC = 0b00000100;
     4f8:	84 e0       	ldi	r24, 0x04	; 4
     4fa:	88 b9       	out	0x08, r24	; 8
		break;
     4fc:	14 c0       	rjmp	.+40     	; 0x526 <stepBinary+0x5c>
	case 1:
		PORTC = 0b00001100;
     4fe:	8c e0       	ldi	r24, 0x0C	; 12
     500:	88 b9       	out	0x08, r24	; 8
		break;
     502:	11 c0       	rjmp	.+34     	; 0x526 <stepBinary+0x5c>
	case 2:
		PORTC = 0b00001000;
     504:	88 e0       	ldi	r24, 0x08	; 8
     506:	88 b9       	out	0x08, r24	; 8
		break;
     508:	0e c0       	rjmp	.+28     	; 0x526 <stepBinary+0x5c>
	case 3:
		PORTC = 0b00011000;
     50a:	88 e1       	ldi	r24, 0x18	; 24
     50c:	88 b9       	out	0x08, r24	; 8
		break;
     50e:	0b c0       	rjmp	.+22     	; 0x526 <stepBinary+0x5c>
	case 4:
		PORTC = 0b00010000;
     510:	80 e1       	ldi	r24, 0x10	; 16
     512:	88 b9       	out	0x08, r24	; 8
		break;
     514:	08 c0       	rjmp	.+16     	; 0x526 <stepBinary+0x5c>
	case 5:
		PORTC = 0b00110000;
     516:	80 e3       	ldi	r24, 0x30	; 48
     518:	88 b9       	out	0x08, r24	; 8
		break;
     51a:	05 c0       	rjmp	.+10     	; 0x526 <stepBinary+0x5c>
	case 6:
		PORTC = 0b00100000;
     51c:	80 e2       	ldi	r24, 0x20	; 32
     51e:	88 b9       	out	0x08, r24	; 8
		break;
     520:	02 c0       	rjmp	.+4      	; 0x526 <stepBinary+0x5c>
	case 7:
		PORTC = 0b001001000;
     522:	88 e4       	ldi	r24, 0x48	; 72
     524:	88 b9       	out	0x08, r24	; 8
		break;
	}
	sprintf(buffer, "step: %d\n", stepperQueue);
     526:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <stepperQueue>
     52a:	90 91 50 03 	lds	r25, 0x0350	; 0x800350 <stepperQueue+0x1>
     52e:	20 91 51 03 	lds	r18, 0x0351	; 0x800351 <stepperQueue+0x2>
     532:	30 91 52 03 	lds	r19, 0x0352	; 0x800352 <stepperQueue+0x3>
     536:	40 91 53 03 	lds	r20, 0x0353	; 0x800353 <stepperQueue+0x4>
     53a:	50 91 54 03 	lds	r21, 0x0354	; 0x800354 <stepperQueue+0x5>
     53e:	60 91 55 03 	lds	r22, 0x0355	; 0x800355 <stepperQueue+0x6>
     542:	70 91 56 03 	lds	r23, 0x0356	; 0x800356 <stepperQueue+0x7>
     546:	7f 93       	push	r23
     548:	6f 93       	push	r22
     54a:	5f 93       	push	r21
     54c:	4f 93       	push	r20
     54e:	3f 93       	push	r19
     550:	2f 93       	push	r18
     552:	9f 93       	push	r25
     554:	8f 93       	push	r24
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	9f 93       	push	r25
     55c:	8f 93       	push	r24
     55e:	8e 01       	movw	r16, r28
     560:	0f 5f       	subi	r16, 0xFF	; 255
     562:	1f 4f       	sbci	r17, 0xFF	; 255
     564:	1f 93       	push	r17
     566:	0f 93       	push	r16
	send_str(buffer);
     568:	b7 d2       	rcall	.+1390   	; 0xad8 <sprintf>
     56a:	c8 01       	movw	r24, r16
     56c:	d4 dd       	rcall	.-1112   	; 0x116 <send_str>
}
     56e:	0f b6       	in	r0, 0x3f	; 63
     570:	f8 94       	cli
     572:	de bf       	out	0x3e, r29	; 62
     574:	0f be       	out	0x3f, r0	; 63
     576:	cd bf       	out	0x3d, r28	; 61
     578:	c5 5b       	subi	r28, 0xB5	; 181
     57a:	df 4f       	sbci	r29, 0xFF	; 255
     57c:	0f b6       	in	r0, 0x3f	; 63
     57e:	f8 94       	cli
     580:	de bf       	out	0x3e, r29	; 62
     582:	0f be       	out	0x3f, r0	; 63
     584:	cd bf       	out	0x3d, r28	; 61
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	1f 91       	pop	r17
     58c:	0f 91       	pop	r16
     58e:	08 95       	ret

00000590 <move_stepper>:
	stepperDirection = 0;
	stepperQueue = 0;
}

void move_stepper(void) {
	if(stepperDirection) {
     590:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <stepperDirection>
     594:	90 91 4e 03 	lds	r25, 0x034E	; 0x80034e <stepperDirection+0x1>
     598:	89 2b       	or	r24, r25
     59a:	91 f0       	breq	.+36     	; 0x5c0 <move_stepper+0x30>
		currentPosition = (currentPosition + 1) % 8;
     59c:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <currentPosition>
     5a0:	90 91 4c 03 	lds	r25, 0x034C	; 0x80034c <currentPosition+0x1>
     5a4:	01 96       	adiw	r24, 0x01	; 1
     5a6:	87 70       	andi	r24, 0x07	; 7
     5a8:	90 78       	andi	r25, 0x80	; 128
     5aa:	99 23       	and	r25, r25
     5ac:	24 f4       	brge	.+8      	; 0x5b6 <move_stepper+0x26>
     5ae:	01 97       	sbiw	r24, 0x01	; 1
     5b0:	88 6f       	ori	r24, 0xF8	; 248
     5b2:	9f 6f       	ori	r25, 0xFF	; 255
     5b4:	01 96       	adiw	r24, 0x01	; 1
     5b6:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <currentPosition+0x1>
     5ba:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <currentPosition>
     5be:	1d c0       	rjmp	.+58     	; 0x5fa <move_stepper+0x6a>
	} else {
		currentPosition = (currentPosition - 1) % 8;
     5c0:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <currentPosition>
     5c4:	90 91 4c 03 	lds	r25, 0x034C	; 0x80034c <currentPosition+0x1>
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	87 70       	andi	r24, 0x07	; 7
     5cc:	90 78       	andi	r25, 0x80	; 128
     5ce:	99 23       	and	r25, r25
     5d0:	24 f4       	brge	.+8      	; 0x5da <move_stepper+0x4a>
     5d2:	01 97       	sbiw	r24, 0x01	; 1
     5d4:	88 6f       	ori	r24, 0xF8	; 248
     5d6:	9f 6f       	ori	r25, 0xFF	; 255
     5d8:	01 96       	adiw	r24, 0x01	; 1
     5da:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <currentPosition+0x1>
     5de:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <currentPosition>
		if(currentPosition == -1){
     5e2:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <currentPosition>
     5e6:	90 91 4c 03 	lds	r25, 0x034C	; 0x80034c <currentPosition+0x1>
     5ea:	01 96       	adiw	r24, 0x01	; 1
     5ec:	31 f4       	brne	.+12     	; 0x5fa <move_stepper+0x6a>
			currentPosition = 7;
     5ee:	87 e0       	ldi	r24, 0x07	; 7
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <currentPosition+0x1>
     5f6:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <currentPosition>
		}
	}
	stepperQueue = stepperQueue - 1;
     5fa:	20 91 4f 03 	lds	r18, 0x034F	; 0x80034f <stepperQueue>
     5fe:	30 91 50 03 	lds	r19, 0x0350	; 0x800350 <stepperQueue+0x1>
     602:	40 91 51 03 	lds	r20, 0x0351	; 0x800351 <stepperQueue+0x2>
     606:	50 91 52 03 	lds	r21, 0x0352	; 0x800352 <stepperQueue+0x3>
     60a:	60 91 53 03 	lds	r22, 0x0353	; 0x800353 <stepperQueue+0x4>
     60e:	70 91 54 03 	lds	r23, 0x0354	; 0x800354 <stepperQueue+0x5>
     612:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <stepperQueue+0x6>
     616:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <stepperQueue+0x7>
     61a:	af ef       	ldi	r26, 0xFF	; 255
     61c:	45 d2       	rcall	.+1162   	; 0xaa8 <__adddi3_s8>
     61e:	20 93 4f 03 	sts	0x034F, r18	; 0x80034f <stepperQueue>
     622:	30 93 50 03 	sts	0x0350, r19	; 0x800350 <stepperQueue+0x1>
     626:	40 93 51 03 	sts	0x0351, r20	; 0x800351 <stepperQueue+0x2>
     62a:	50 93 52 03 	sts	0x0352, r21	; 0x800352 <stepperQueue+0x3>
     62e:	60 93 53 03 	sts	0x0353, r22	; 0x800353 <stepperQueue+0x4>
     632:	70 93 54 03 	sts	0x0354, r23	; 0x800354 <stepperQueue+0x5>
     636:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <stepperQueue+0x6>
     63a:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <stepperQueue+0x7>

	stepBinary();
     63e:	45 cf       	rjmp	.-374    	; 0x4ca <stepBinary>
     640:	08 95       	ret

00000642 <timer_init>:
}
// Motor Initialization routine -- this function must be called
//  before you use any of the above functions
void timer_init()
{
	DDRA = 0xff;
     642:	8f ef       	ldi	r24, 0xFF	; 255
     644:	81 b9       	out	0x01, r24	; 1
	/* Reset clock tick count. L indicates a long (32 bit) 
	 * constant. 
	 */
	clock_ticks = 0L;
     646:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <clock_ticks>
     64a:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <clock_ticks+0x1>
     64e:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <clock_ticks+0x2>
     652:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <clock_ticks+0x3>
	
	/* Clear the timer */
	TCNT0 = 0;
     656:	16 bc       	out	0x26, r1	; 38

	/* Set the output compare value to be 124 */
	OCR0A = 124;
     658:	8c e7       	ldi	r24, 0x7C	; 124
     65a:	87 bd       	out	0x27, r24	; 39
	
	/* Set the timer to clear on compare match (CTC mode)
	 * and to divide the clock by 64. This starts the timer
	 * running.
	 */
	TCCR0A = (1<<WGM21);
     65c:	82 e0       	ldi	r24, 0x02	; 2
     65e:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS21)|(1<<CS20);
     660:	83 e0       	ldi	r24, 0x03	; 3
     662:	85 bd       	out	0x25, r24	; 37

	/* Enable an interrupt on output compare match. 
	 * Note that interrupts have to be enabled globally
	 * before the interrupts will fire.
	 */
	TIMSK0 |= (1<<OCIE2A);
     664:	ee e6       	ldi	r30, 0x6E	; 110
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	82 60       	ori	r24, 0x02	; 2
     66c:	80 83       	st	Z, r24
	
	/* Make sure the interrupt flag is cleared by writing a 
	 * 1 to it.
	 */
	TIFR0 &= (1<<OCF2A);
     66e:	85 b3       	in	r24, 0x15	; 21
     670:	82 70       	andi	r24, 0x02	; 2
     672:	85 bb       	out	0x15, r24	; 21
     674:	08 95       	ret

00000676 <__vector_16>:

}

ISR (TIMER0_COMPA_vect) {
     676:	1f 92       	push	r1
     678:	0f 92       	push	r0
     67a:	0f b6       	in	r0, 0x3f	; 63
     67c:	0f 92       	push	r0
     67e:	11 24       	eor	r1, r1
     680:	2f 93       	push	r18
     682:	3f 93       	push	r19
     684:	4f 93       	push	r20
     686:	5f 93       	push	r21
     688:	6f 93       	push	r22
     68a:	7f 93       	push	r23
     68c:	8f 93       	push	r24
     68e:	9f 93       	push	r25
     690:	af 93       	push	r26
     692:	bf 93       	push	r27
     694:	ef 93       	push	r30
     696:	ff 93       	push	r31
	clock_ticks++;
     698:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <clock_ticks>
     69c:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <clock_ticks+0x1>
     6a0:	a0 91 44 02 	lds	r26, 0x0244	; 0x800244 <clock_ticks+0x2>
     6a4:	b0 91 45 02 	lds	r27, 0x0245	; 0x800245 <clock_ticks+0x3>
     6a8:	01 96       	adiw	r24, 0x01	; 1
     6aa:	a1 1d       	adc	r26, r1
     6ac:	b1 1d       	adc	r27, r1
     6ae:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <clock_ticks>
     6b2:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <clock_ticks+0x1>
     6b6:	a0 93 44 02 	sts	0x0244, r26	; 0x800244 <clock_ticks+0x2>
     6ba:	b0 93 45 02 	sts	0x0245, r27	; 0x800245 <clock_ticks+0x3>
	if (clock_ticks%100 == 0) { // Periodically step if needed
     6be:	60 91 42 02 	lds	r22, 0x0242	; 0x800242 <clock_ticks>
     6c2:	70 91 43 02 	lds	r23, 0x0243	; 0x800243 <clock_ticks+0x1>
     6c6:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <clock_ticks+0x2>
     6ca:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <clock_ticks+0x3>
     6ce:	24 e6       	ldi	r18, 0x64	; 100
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	40 e0       	ldi	r20, 0x00	; 0
     6d4:	50 e0       	ldi	r21, 0x00	; 0
     6d6:	b7 d1       	rcall	.+878    	; 0xa46 <__udivmodsi4>
     6d8:	67 2b       	or	r22, r23
     6da:	68 2b       	or	r22, r24
     6dc:	69 2b       	or	r22, r25
     6de:	a1 f4       	brne	.+40     	; 0x708 <__vector_16+0x92>
		if (stepperQueue > 0) {
     6e0:	20 91 4f 03 	lds	r18, 0x034F	; 0x80034f <stepperQueue>
     6e4:	30 91 50 03 	lds	r19, 0x0350	; 0x800350 <stepperQueue+0x1>
     6e8:	40 91 51 03 	lds	r20, 0x0351	; 0x800351 <stepperQueue+0x2>
     6ec:	50 91 52 03 	lds	r21, 0x0352	; 0x800352 <stepperQueue+0x3>
     6f0:	60 91 53 03 	lds	r22, 0x0353	; 0x800353 <stepperQueue+0x4>
     6f4:	70 91 54 03 	lds	r23, 0x0354	; 0x800354 <stepperQueue+0x5>
     6f8:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <stepperQueue+0x6>
     6fc:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <stepperQueue+0x7>
     700:	a0 e0       	ldi	r26, 0x00	; 0
     702:	de d1       	rcall	.+956    	; 0xac0 <__cmpdi2_s8>
			move_stepper();
     704:	09 f0       	breq	.+2      	; 0x708 <__vector_16+0x92>
     706:	44 df       	rcall	.-376    	; 0x590 <move_stepper>
		}
	}

	if (clock_ticks%500 == 0) { // Status LED
     708:	60 91 42 02 	lds	r22, 0x0242	; 0x800242 <clock_ticks>
     70c:	70 91 43 02 	lds	r23, 0x0243	; 0x800243 <clock_ticks+0x1>
     710:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <clock_ticks+0x2>
     714:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <clock_ticks+0x3>
     718:	24 ef       	ldi	r18, 0xF4	; 244
     71a:	31 e0       	ldi	r19, 0x01	; 1
     71c:	40 e0       	ldi	r20, 0x00	; 0
     71e:	50 e0       	ldi	r21, 0x00	; 0
     720:	92 d1       	rcall	.+804    	; 0xa46 <__udivmodsi4>
     722:	67 2b       	or	r22, r23
     724:	68 2b       	or	r22, r24
     726:	69 2b       	or	r22, r25
     728:	21 f4       	brne	.+8      	; 0x732 <__vector_16+0xbc>
		PORTA ^= (1<<4);
     72a:	92 b1       	in	r25, 0x02	; 2
     72c:	80 e1       	ldi	r24, 0x10	; 16
     72e:	89 27       	eor	r24, r25
     730:	82 b9       	out	0x02, r24	; 2
	}
     732:	ff 91       	pop	r31
     734:	ef 91       	pop	r30
     736:	bf 91       	pop	r27
     738:	af 91       	pop	r26
     73a:	9f 91       	pop	r25
     73c:	8f 91       	pop	r24
     73e:	7f 91       	pop	r23
     740:	6f 91       	pop	r22
     742:	5f 91       	pop	r21
     744:	4f 91       	pop	r20
     746:	3f 91       	pop	r19
     748:	2f 91       	pop	r18
     74a:	0f 90       	pop	r0
     74c:	0f be       	out	0x3f, r0	; 63
     74e:	0f 90       	pop	r0
     750:	1f 90       	pop	r1
     752:	18 95       	reti

00000754 <forwards>:
void right(void);
void stop(void);
////////////////////////////////////////////////DC motors function

void forwards(void){
	 motorRfwd(0);
     754:	80 e0       	ldi	r24, 0x00	; 0
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	33 dd       	rcall	.-1434   	; 0x1c0 <motorRfwd>
	 motorLfwd(0);
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	47 dd       	rcall	.-1394   	; 0x1ee <motorLfwd>
	 sprintf(carStatus, "Forward");
     760:	88 e0       	ldi	r24, 0x08	; 8
     762:	ea e0       	ldi	r30, 0x0A	; 10
     764:	f1 e0       	ldi	r31, 0x01	; 1
     766:	a8 e7       	ldi	r26, 0x78	; 120
     768:	b2 e0       	ldi	r27, 0x02	; 2
     76a:	01 90       	ld	r0, Z+
     76c:	0d 92       	st	X+, r0
     76e:	8a 95       	dec	r24
     770:	e1 f7       	brne	.-8      	; 0x76a <forwards+0x16>
     772:	08 95       	ret

00000774 <reverse>:
}

void reverse(void){
	motorRbwd(0);
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	53 dd       	rcall	.-1370   	; 0x220 <motorRbwd>
	motorLbwd(0);
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	67 dd       	rcall	.-1330   	; 0x24e <motorLbwd>
	sprintf(carStatus, "Reverse");
     780:	88 e0       	ldi	r24, 0x08	; 8
     782:	e2 e1       	ldi	r30, 0x12	; 18
     784:	f1 e0       	ldi	r31, 0x01	; 1
     786:	a8 e7       	ldi	r26, 0x78	; 120
     788:	b2 e0       	ldi	r27, 0x02	; 2
     78a:	01 90       	ld	r0, Z+
     78c:	0d 92       	st	X+, r0
     78e:	8a 95       	dec	r24
     790:	e1 f7       	brne	.-8      	; 0x78a <reverse+0x16>
     792:	08 95       	ret

00000794 <left>:
}

void left(void){
	motorRfwd(0);
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	13 dd       	rcall	.-1498   	; 0x1c0 <motorRfwd>
	motorLbwd(0);
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	57 dd       	rcall	.-1362   	; 0x24e <motorLbwd>
	sprintf(carStatus, "Left");
     7a0:	85 e0       	ldi	r24, 0x05	; 5
     7a2:	ea e1       	ldi	r30, 0x1A	; 26
     7a4:	f1 e0       	ldi	r31, 0x01	; 1
     7a6:	a8 e7       	ldi	r26, 0x78	; 120
     7a8:	b2 e0       	ldi	r27, 0x02	; 2
     7aa:	01 90       	ld	r0, Z+
     7ac:	0d 92       	st	X+, r0
     7ae:	8a 95       	dec	r24
     7b0:	e1 f7       	brne	.-8      	; 0x7aa <left+0x16>
     7b2:	08 95       	ret

000007b4 <right>:
}
void right(void){
	motorRbwd(0);
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	33 dd       	rcall	.-1434   	; 0x220 <motorRbwd>
	motorLfwd(0);
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	17 dd       	rcall	.-1490   	; 0x1ee <motorLfwd>
	sprintf(carStatus, "Right");
     7c0:	86 e0       	ldi	r24, 0x06	; 6
     7c2:	ef e1       	ldi	r30, 0x1F	; 31
     7c4:	f1 e0       	ldi	r31, 0x01	; 1
     7c6:	a8 e7       	ldi	r26, 0x78	; 120
     7c8:	b2 e0       	ldi	r27, 0x02	; 2
     7ca:	01 90       	ld	r0, Z+
     7cc:	0d 92       	st	X+, r0
     7ce:	8a 95       	dec	r24
     7d0:	e1 f7       	brne	.-8      	; 0x7ca <right+0x16>
     7d2:	08 95       	ret

000007d4 <stop>:
}

void stop(void){
	motorL_stop();
	motorR_stop();
     7d4:	6c dd       	rcall	.-1320   	; 0x2ae <motorL_stop>
     7d6:	54 dd       	rcall	.-1368   	; 0x280 <motorR_stop>
	sprintf(carStatus, "Stopped");
     7d8:	88 e0       	ldi	r24, 0x08	; 8
     7da:	e5 e2       	ldi	r30, 0x25	; 37
     7dc:	f1 e0       	ldi	r31, 0x01	; 1
     7de:	a8 e7       	ldi	r26, 0x78	; 120
     7e0:	b2 e0       	ldi	r27, 0x02	; 2
     7e2:	01 90       	ld	r0, Z+
     7e4:	0d 92       	st	X+, r0
     7e6:	8a 95       	dec	r24
     7e8:	e1 f7       	brne	.-8      	; 0x7e2 <stop+0xe>
     7ea:	08 95       	ret

000007ec <main>:
	cli();
	//Initialize timer2
	timer_init();
	
	//Initialize communication through bluetooth
	uart_init();
     7ec:	f8 94       	cli
     7ee:	29 df       	rcall	.-430    	; 0x642 <timer_init>
     7f0:	80 dc       	rcall	.-1792   	; 0xf2 <uart_init>
     7f2:	74 dd       	rcall	.-1304   	; 0x2dc <motor_init>
     7f4:	ef df       	rcall	.-34     	; 0x7d4 <stop>
     7f6:	8a dd       	rcall	.-1260   	; 0x30c <servo_init>
     7f8:	80 e0       	ldi	r24, 0x00	; 0
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	79 dd       	rcall	.-1294   	; 0x2f0 <move_servo1>
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	7d dd       	rcall	.-1286   	; 0x2fe <move_servo2>
     804:	89 e0       	ldi	r24, 0x09	; 9
     806:	ed e2       	ldi	r30, 0x2D	; 45
     808:	f1 e0       	ldi	r31, 0x01	; 1
     80a:	a6 e4       	ldi	r26, 0x46	; 70
     80c:	b2 e0       	ldi	r27, 0x02	; 2
     80e:	01 90       	ld	r0, Z+
     810:	0d 92       	st	X+, r0
     812:	8a 95       	dec	r24
     814:	e1 f7       	brne	.-8      	; 0x80e <main+0x22>
     816:	86 e4       	ldi	r24, 0x46	; 70
     818:	92 e0       	ldi	r25, 0x02	; 2
     81a:	7d dc       	rcall	.-1798   	; 0x116 <send_str>
     81c:	8b dd       	rcall	.-1258   	; 0x334 <stepper_init>
     81e:	78 94       	sei
     820:	e1 2c       	mov	r14, r1
     822:	f1 2c       	mov	r15, r1
     824:	00 e0       	ldi	r16, 0x00	; 0
     826:	10 e0       	ldi	r17, 0x00	; 0
     828:	0f 2e       	mov	r0, r31
     82a:	f9 e8       	ldi	r31, 0x89	; 137
     82c:	8f 2e       	mov	r8, r31
     82e:	f1 e0       	ldi	r31, 0x01	; 1
     830:	9f 2e       	mov	r9, r31
     832:	f0 2d       	mov	r31, r0
     834:	0f 2e       	mov	r0, r31
     836:	fa e6       	ldi	r31, 0x6A	; 106
     838:	6f 2e       	mov	r6, r31
     83a:	f1 e0       	ldi	r31, 0x01	; 1
     83c:	7f 2e       	mov	r7, r31
     83e:	f0 2d       	mov	r31, r0
     840:	0f 2e       	mov	r0, r31
     842:	fd e1       	ldi	r31, 0x1D	; 29
     844:	cf 2e       	mov	r12, r31
     846:	f2 e0       	ldi	r31, 0x02	; 2
     848:	df 2e       	mov	r13, r31
     84a:	f0 2d       	mov	r31, r0
     84c:	0f 2e       	mov	r0, r31
     84e:	fa e0       	ldi	r31, 0x0A	; 10
     850:	af 2e       	mov	r10, r31
     852:	b1 2c       	mov	r11, r1
     854:	f0 2d       	mov	r31, r0
     856:	7d dc       	rcall	.-1798   	; 0x152 <get_char>
     858:	88 23       	and	r24, r24
     85a:	e9 f3       	breq	.-6      	; 0x856 <main+0x6a>
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	fc 01       	movw	r30, r24
     860:	e1 56       	subi	r30, 0x61	; 97
     862:	f1 09       	sbc	r31, r1
     864:	e7 31       	cpi	r30, 0x17	; 23
     866:	f1 05       	cpc	r31, r1
     868:	08 f0       	brcs	.+2      	; 0x86c <main+0x80>
     86a:	d3 c0       	rjmp	.+422    	; 0xa12 <__stack+0x113>
     86c:	ea 5b       	subi	r30, 0xBA	; 186
     86e:	ff 4f       	sbci	r31, 0xFF	; 255
     870:	0c c1       	rjmp	.+536    	; 0xa8a <__tablejump2__>
     872:	88 ee       	ldi	r24, 0xE8	; 232
     874:	93 e0       	ldi	r25, 0x03	; 3
     876:	7a dd       	rcall	.-1292   	; 0x36c <forward_stepper>
     878:	89 e1       	ldi	r24, 0x19	; 25
     87a:	e6 e3       	ldi	r30, 0x36	; 54
     87c:	f1 e0       	ldi	r31, 0x01	; 1
     87e:	a6 e4       	ldi	r26, 0x46	; 70
     880:	b2 e0       	ldi	r27, 0x02	; 2
     882:	01 90       	ld	r0, Z+
     884:	0d 92       	st	X+, r0
     886:	8a 95       	dec	r24
     888:	e1 f7       	brne	.-8      	; 0x882 <main+0x96>
     88a:	86 e4       	ldi	r24, 0x46	; 70
     88c:	92 e0       	ldi	r25, 0x02	; 2
     88e:	43 dc       	rcall	.-1914   	; 0x116 <send_str>
     890:	c0 c0       	rjmp	.+384    	; 0xa12 <__stack+0x113>
     892:	88 ee       	ldi	r24, 0xE8	; 232
     894:	93 e0       	ldi	r25, 0x03	; 3
     896:	c2 dd       	rcall	.-1148   	; 0x41c <backward_stepper>
     898:	8b e1       	ldi	r24, 0x1B	; 27
     89a:	ef e4       	ldi	r30, 0x4F	; 79
     89c:	f1 e0       	ldi	r31, 0x01	; 1
     89e:	a6 e4       	ldi	r26, 0x46	; 70
     8a0:	b2 e0       	ldi	r27, 0x02	; 2
     8a2:	01 90       	ld	r0, Z+
     8a4:	0d 92       	st	X+, r0
     8a6:	8a 95       	dec	r24
     8a8:	e1 f7       	brne	.-8      	; 0x8a2 <main+0xb6>
     8aa:	86 e4       	ldi	r24, 0x46	; 70
     8ac:	92 e0       	ldi	r25, 0x02	; 2
     8ae:	33 dc       	rcall	.-1946   	; 0x116 <send_str>
     8b0:	b0 c0       	rjmp	.+352    	; 0xa12 <__stack+0x113>
     8b2:	04 3b       	cpi	r16, 0xB4	; 180
     8b4:	11 05       	cpc	r17, r1
     8b6:	14 f4       	brge	.+4      	; 0x8bc <main+0xd0>
     8b8:	0b 5f       	subi	r16, 0xFB	; 251
     8ba:	1f 4f       	sbci	r17, 0xFF	; 255
     8bc:	c8 01       	movw	r24, r16
     8be:	18 dd       	rcall	.-1488   	; 0x2f0 <move_servo1>
     8c0:	1f 93       	push	r17
     8c2:	0f 93       	push	r16
     8c4:	7f 92       	push	r7
     8c6:	6f 92       	push	r6
     8c8:	86 e4       	ldi	r24, 0x46	; 70
     8ca:	92 e0       	ldi	r25, 0x02	; 2
     8cc:	9f 93       	push	r25
     8ce:	8f 93       	push	r24
     8d0:	03 d1       	rcall	.+518    	; 0xad8 <sprintf>
     8d2:	86 e4       	ldi	r24, 0x46	; 70
     8d4:	92 e0       	ldi	r25, 0x02	; 2
     8d6:	1f dc       	rcall	.-1986   	; 0x116 <send_str>
     8d8:	0f 90       	pop	r0
     8da:	0f 90       	pop	r0
     8dc:	0f 90       	pop	r0
     8de:	0f 90       	pop	r0
     8e0:	0f 90       	pop	r0
     8e2:	0f 90       	pop	r0
     8e4:	96 c0       	rjmp	.+300    	; 0xa12 <__stack+0x113>
     8e6:	10 16       	cp	r1, r16
     8e8:	11 06       	cpc	r1, r17
     8ea:	14 f4       	brge	.+4      	; 0x8f0 <main+0x104>
     8ec:	05 50       	subi	r16, 0x05	; 5
     8ee:	11 09       	sbc	r17, r1
     8f0:	c8 01       	movw	r24, r16
     8f2:	fe dc       	rcall	.-1540   	; 0x2f0 <move_servo1>
     8f4:	1f 93       	push	r17
     8f6:	0f 93       	push	r16
     8f8:	7f 92       	push	r7
     8fa:	6f 92       	push	r6
     8fc:	86 e4       	ldi	r24, 0x46	; 70
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	9f 93       	push	r25
     902:	8f 93       	push	r24
     904:	e9 d0       	rcall	.+466    	; 0xad8 <sprintf>
     906:	86 e4       	ldi	r24, 0x46	; 70
     908:	92 e0       	ldi	r25, 0x02	; 2
     90a:	05 dc       	rcall	.-2038   	; 0x116 <send_str>
     90c:	0f 90       	pop	r0
     90e:	0f 90       	pop	r0
     910:	0f 90       	pop	r0
     912:	0f 90       	pop	r0
     914:	0f 90       	pop	r0
     916:	0f 90       	pop	r0
     918:	7c c0       	rjmp	.+248    	; 0xa12 <__stack+0x113>
     91a:	84 eb       	ldi	r24, 0xB4	; 180
     91c:	e8 16       	cp	r14, r24
     91e:	f1 04       	cpc	r15, r1
     920:	1c f4       	brge	.+6      	; 0x928 <__stack+0x29>
     922:	95 e0       	ldi	r25, 0x05	; 5
     924:	e9 0e       	add	r14, r25
     926:	f1 1c       	adc	r15, r1
     928:	c7 01       	movw	r24, r14
     92a:	e9 dc       	rcall	.-1582   	; 0x2fe <move_servo2>
     92c:	ff 92       	push	r15
     92e:	ef 92       	push	r14
     930:	9f 92       	push	r9
     932:	8f 92       	push	r8
     934:	86 e4       	ldi	r24, 0x46	; 70
     936:	92 e0       	ldi	r25, 0x02	; 2
     938:	9f 93       	push	r25
     93a:	8f 93       	push	r24
     93c:	cd d0       	rcall	.+410    	; 0xad8 <sprintf>
     93e:	86 e4       	ldi	r24, 0x46	; 70
     940:	92 e0       	ldi	r25, 0x02	; 2
     942:	e9 db       	rcall	.-2094   	; 0x116 <send_str>
     944:	0f 90       	pop	r0
     946:	0f 90       	pop	r0
     948:	0f 90       	pop	r0
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
     94e:	0f 90       	pop	r0
     950:	60 c0       	rjmp	.+192    	; 0xa12 <__stack+0x113>
     952:	1e 14       	cp	r1, r14
     954:	1f 04       	cpc	r1, r15
     956:	1c f4       	brge	.+6      	; 0x95e <__stack+0x5f>
     958:	85 e0       	ldi	r24, 0x05	; 5
     95a:	e8 1a       	sub	r14, r24
     95c:	f1 08       	sbc	r15, r1
     95e:	c7 01       	movw	r24, r14
     960:	ce dc       	rcall	.-1636   	; 0x2fe <move_servo2>
     962:	ff 92       	push	r15
     964:	ef 92       	push	r14
     966:	9f 92       	push	r9
     968:	8f 92       	push	r8
     96a:	86 e4       	ldi	r24, 0x46	; 70
     96c:	92 e0       	ldi	r25, 0x02	; 2
     96e:	9f 93       	push	r25
     970:	8f 93       	push	r24
     972:	b2 d0       	rcall	.+356    	; 0xad8 <sprintf>
     974:	86 e4       	ldi	r24, 0x46	; 70
     976:	92 e0       	ldi	r25, 0x02	; 2
     978:	ce db       	rcall	.-2148   	; 0x116 <send_str>
     97a:	0f 90       	pop	r0
     97c:	0f 90       	pop	r0
     97e:	0f 90       	pop	r0
     980:	0f 90       	pop	r0
     982:	0f 90       	pop	r0
     984:	0f 90       	pop	r0
     986:	45 c0       	rjmp	.+138    	; 0xa12 <__stack+0x113>
     988:	e5 de       	rcall	.-566    	; 0x754 <forwards>
     98a:	88 e1       	ldi	r24, 0x18	; 24
     98c:	e8 ea       	ldi	r30, 0xA8	; 168
     98e:	f1 e0       	ldi	r31, 0x01	; 1
     990:	a6 e4       	ldi	r26, 0x46	; 70
     992:	b2 e0       	ldi	r27, 0x02	; 2
     994:	01 90       	ld	r0, Z+
     996:	0d 92       	st	X+, r0
     998:	8a 95       	dec	r24
     99a:	e1 f7       	brne	.-8      	; 0x994 <__stack+0x95>
     99c:	86 e4       	ldi	r24, 0x46	; 70
     99e:	92 e0       	ldi	r25, 0x02	; 2
     9a0:	ba db       	rcall	.-2188   	; 0x116 <send_str>
     9a2:	37 c0       	rjmp	.+110    	; 0xa12 <__stack+0x113>
     9a4:	e7 de       	rcall	.-562    	; 0x774 <reverse>
     9a6:	89 e1       	ldi	r24, 0x19	; 25
     9a8:	e0 ec       	ldi	r30, 0xC0	; 192
     9aa:	f1 e0       	ldi	r31, 0x01	; 1
     9ac:	a6 e4       	ldi	r26, 0x46	; 70
     9ae:	b2 e0       	ldi	r27, 0x02	; 2
     9b0:	01 90       	ld	r0, Z+
     9b2:	0d 92       	st	X+, r0
     9b4:	8a 95       	dec	r24
     9b6:	e1 f7       	brne	.-8      	; 0x9b0 <__stack+0xb1>
     9b8:	86 e4       	ldi	r24, 0x46	; 70
     9ba:	92 e0       	ldi	r25, 0x02	; 2
     9bc:	ac db       	rcall	.-2216   	; 0x116 <send_str>
     9be:	29 c0       	rjmp	.+82     	; 0xa12 <__stack+0x113>
     9c0:	f9 de       	rcall	.-526    	; 0x7b4 <right>
     9c2:	8c e1       	ldi	r24, 0x1C	; 28
     9c4:	e9 ed       	ldi	r30, 0xD9	; 217
     9c6:	f1 e0       	ldi	r31, 0x01	; 1
     9c8:	a6 e4       	ldi	r26, 0x46	; 70
     9ca:	b2 e0       	ldi	r27, 0x02	; 2
     9cc:	01 90       	ld	r0, Z+
     9ce:	0d 92       	st	X+, r0
     9d0:	8a 95       	dec	r24
     9d2:	e1 f7       	brne	.-8      	; 0x9cc <__stack+0xcd>
     9d4:	86 e4       	ldi	r24, 0x46	; 70
     9d6:	92 e0       	ldi	r25, 0x02	; 2
     9d8:	9e db       	rcall	.-2244   	; 0x116 <send_str>
     9da:	1b c0       	rjmp	.+54     	; 0xa12 <__stack+0x113>
     9dc:	db de       	rcall	.-586    	; 0x794 <left>
     9de:	8b e1       	ldi	r24, 0x1B	; 27
     9e0:	e5 ef       	ldi	r30, 0xF5	; 245
     9e2:	f1 e0       	ldi	r31, 0x01	; 1
     9e4:	a6 e4       	ldi	r26, 0x46	; 70
     9e6:	b2 e0       	ldi	r27, 0x02	; 2
     9e8:	01 90       	ld	r0, Z+
     9ea:	0d 92       	st	X+, r0
     9ec:	8a 95       	dec	r24
     9ee:	e1 f7       	brne	.-8      	; 0x9e8 <__stack+0xe9>
     9f0:	86 e4       	ldi	r24, 0x46	; 70
     9f2:	92 e0       	ldi	r25, 0x02	; 2
     9f4:	90 db       	rcall	.-2272   	; 0x116 <send_str>
     9f6:	0d c0       	rjmp	.+26     	; 0xa12 <__stack+0x113>
     9f8:	ed de       	rcall	.-550    	; 0x7d4 <stop>
     9fa:	8d e0       	ldi	r24, 0x0D	; 13
     9fc:	e0 e1       	ldi	r30, 0x10	; 16
     9fe:	f2 e0       	ldi	r31, 0x02	; 2
     a00:	a6 e4       	ldi	r26, 0x46	; 70
     a02:	b2 e0       	ldi	r27, 0x02	; 2
     a04:	01 90       	ld	r0, Z+
     a06:	0d 92       	st	X+, r0
     a08:	8a 95       	dec	r24
     a0a:	e1 f7       	brne	.-8      	; 0xa04 <__stack+0x105>
     a0c:	86 e4       	ldi	r24, 0x46	; 70
     a0e:	92 e0       	ldi	r25, 0x02	; 2
     a10:	82 db       	rcall	.-2300   	; 0x116 <send_str>
     a12:	ff 92       	push	r15
     a14:	ef 92       	push	r14
     a16:	1f 93       	push	r17
     a18:	0f 93       	push	r16
     a1a:	df 92       	push	r13
     a1c:	cf 92       	push	r12
     a1e:	c6 e4       	ldi	r28, 0x46	; 70
     a20:	d2 e0       	ldi	r29, 0x02	; 2
     a22:	df 93       	push	r29
     a24:	cf 93       	push	r28
     a26:	58 d0       	rcall	.+176    	; 0xad8 <sprintf>
     a28:	ce 01       	movw	r24, r28
     a2a:	75 db       	rcall	.-2326   	; 0x116 <send_str>
     a2c:	b9 82       	std	Y+1, r11	; 0x01
     a2e:	a8 82       	st	Y, r10
     a30:	ce 01       	movw	r24, r28
     a32:	71 db       	rcall	.-2334   	; 0x116 <send_str>
     a34:	8d b7       	in	r24, 0x3d	; 61
     a36:	9e b7       	in	r25, 0x3e	; 62
     a38:	08 96       	adiw	r24, 0x08	; 8
     a3a:	0f b6       	in	r0, 0x3f	; 63
     a3c:	f8 94       	cli
     a3e:	9e bf       	out	0x3e, r25	; 62
     a40:	0f be       	out	0x3f, r0	; 63
     a42:	8d bf       	out	0x3d, r24	; 61
     a44:	08 cf       	rjmp	.-496    	; 0x856 <main+0x6a>

00000a46 <__udivmodsi4>:
     a46:	a1 e2       	ldi	r26, 0x21	; 33
     a48:	1a 2e       	mov	r1, r26
     a4a:	aa 1b       	sub	r26, r26
     a4c:	bb 1b       	sub	r27, r27
     a4e:	fd 01       	movw	r30, r26
     a50:	0d c0       	rjmp	.+26     	; 0xa6c <__udivmodsi4_ep>

00000a52 <__udivmodsi4_loop>:
     a52:	aa 1f       	adc	r26, r26
     a54:	bb 1f       	adc	r27, r27
     a56:	ee 1f       	adc	r30, r30
     a58:	ff 1f       	adc	r31, r31
     a5a:	a2 17       	cp	r26, r18
     a5c:	b3 07       	cpc	r27, r19
     a5e:	e4 07       	cpc	r30, r20
     a60:	f5 07       	cpc	r31, r21
     a62:	20 f0       	brcs	.+8      	; 0xa6c <__udivmodsi4_ep>
     a64:	a2 1b       	sub	r26, r18
     a66:	b3 0b       	sbc	r27, r19
     a68:	e4 0b       	sbc	r30, r20
     a6a:	f5 0b       	sbc	r31, r21

00000a6c <__udivmodsi4_ep>:
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	88 1f       	adc	r24, r24
     a72:	99 1f       	adc	r25, r25
     a74:	1a 94       	dec	r1
     a76:	69 f7       	brne	.-38     	; 0xa52 <__udivmodsi4_loop>
     a78:	60 95       	com	r22
     a7a:	70 95       	com	r23
     a7c:	80 95       	com	r24
     a7e:	90 95       	com	r25
     a80:	9b 01       	movw	r18, r22
     a82:	ac 01       	movw	r20, r24
     a84:	bd 01       	movw	r22, r26
     a86:	cf 01       	movw	r24, r30
     a88:	08 95       	ret

00000a8a <__tablejump2__>:
     a8a:	ee 0f       	add	r30, r30
     a8c:	ff 1f       	adc	r31, r31
     a8e:	05 90       	lpm	r0, Z+
     a90:	f4 91       	lpm	r31, Z
     a92:	e0 2d       	mov	r30, r0
     a94:	09 94       	ijmp

00000a96 <__adddi3>:
     a96:	2a 0d       	add	r18, r10
     a98:	3b 1d       	adc	r19, r11
     a9a:	4c 1d       	adc	r20, r12
     a9c:	5d 1d       	adc	r21, r13
     a9e:	6e 1d       	adc	r22, r14
     aa0:	7f 1d       	adc	r23, r15
     aa2:	80 1f       	adc	r24, r16
     aa4:	91 1f       	adc	r25, r17
     aa6:	08 95       	ret

00000aa8 <__adddi3_s8>:
     aa8:	00 24       	eor	r0, r0
     aaa:	a7 fd       	sbrc	r26, 7
     aac:	00 94       	com	r0
     aae:	2a 0f       	add	r18, r26
     ab0:	30 1d       	adc	r19, r0
     ab2:	40 1d       	adc	r20, r0
     ab4:	50 1d       	adc	r21, r0
     ab6:	60 1d       	adc	r22, r0
     ab8:	70 1d       	adc	r23, r0
     aba:	80 1d       	adc	r24, r0
     abc:	90 1d       	adc	r25, r0
     abe:	08 95       	ret

00000ac0 <__cmpdi2_s8>:
     ac0:	00 24       	eor	r0, r0
     ac2:	a7 fd       	sbrc	r26, 7
     ac4:	00 94       	com	r0
     ac6:	2a 17       	cp	r18, r26
     ac8:	30 05       	cpc	r19, r0
     aca:	40 05       	cpc	r20, r0
     acc:	50 05       	cpc	r21, r0
     ace:	60 05       	cpc	r22, r0
     ad0:	70 05       	cpc	r23, r0
     ad2:	80 05       	cpc	r24, r0
     ad4:	90 05       	cpc	r25, r0
     ad6:	08 95       	ret

00000ad8 <sprintf>:
     ad8:	ae e0       	ldi	r26, 0x0E	; 14
     ada:	b0 e0       	ldi	r27, 0x00	; 0
     adc:	e1 e7       	ldi	r30, 0x71	; 113
     ade:	f5 e0       	ldi	r31, 0x05	; 5
     ae0:	aa c2       	rjmp	.+1364   	; 0x1036 <__prologue_saves__+0x1c>
     ae2:	0d 89       	ldd	r16, Y+21	; 0x15
     ae4:	1e 89       	ldd	r17, Y+22	; 0x16
     ae6:	86 e0       	ldi	r24, 0x06	; 6
     ae8:	8c 83       	std	Y+4, r24	; 0x04
     aea:	1a 83       	std	Y+2, r17	; 0x02
     aec:	09 83       	std	Y+1, r16	; 0x01
     aee:	8f ef       	ldi	r24, 0xFF	; 255
     af0:	9f e7       	ldi	r25, 0x7F	; 127
     af2:	9e 83       	std	Y+6, r25	; 0x06
     af4:	8d 83       	std	Y+5, r24	; 0x05
     af6:	ae 01       	movw	r20, r28
     af8:	47 5e       	subi	r20, 0xE7	; 231
     afa:	5f 4f       	sbci	r21, 0xFF	; 255
     afc:	6f 89       	ldd	r22, Y+23	; 0x17
     afe:	78 8d       	ldd	r23, Y+24	; 0x18
     b00:	ce 01       	movw	r24, r28
     b02:	01 96       	adiw	r24, 0x01	; 1
     b04:	08 d0       	rcall	.+16     	; 0xb16 <vfprintf>
     b06:	ef 81       	ldd	r30, Y+7	; 0x07
     b08:	f8 85       	ldd	r31, Y+8	; 0x08
     b0a:	e0 0f       	add	r30, r16
     b0c:	f1 1f       	adc	r31, r17
     b0e:	10 82       	st	Z, r1
     b10:	2e 96       	adiw	r28, 0x0e	; 14
     b12:	e4 e0       	ldi	r30, 0x04	; 4
     b14:	ac c2       	rjmp	.+1368   	; 0x106e <__epilogue_restores__+0x1c>

00000b16 <vfprintf>:
     b16:	ab e0       	ldi	r26, 0x0B	; 11
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	e0 e9       	ldi	r30, 0x90	; 144
     b1c:	f5 e0       	ldi	r31, 0x05	; 5
     b1e:	7d c2       	rjmp	.+1274   	; 0x101a <__prologue_saves__>
     b20:	6c 01       	movw	r12, r24
     b22:	7b 01       	movw	r14, r22
     b24:	8a 01       	movw	r16, r20
     b26:	fc 01       	movw	r30, r24
     b28:	17 82       	std	Z+7, r1	; 0x07
     b2a:	16 82       	std	Z+6, r1	; 0x06
     b2c:	83 81       	ldd	r24, Z+3	; 0x03
     b2e:	81 ff       	sbrs	r24, 1
     b30:	bf c1       	rjmp	.+894    	; 0xeb0 <vfprintf+0x39a>
     b32:	ce 01       	movw	r24, r28
     b34:	01 96       	adiw	r24, 0x01	; 1
     b36:	3c 01       	movw	r6, r24
     b38:	f6 01       	movw	r30, r12
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	f7 01       	movw	r30, r14
     b3e:	93 fd       	sbrc	r25, 3
     b40:	85 91       	lpm	r24, Z+
     b42:	93 ff       	sbrs	r25, 3
     b44:	81 91       	ld	r24, Z+
     b46:	7f 01       	movw	r14, r30
     b48:	88 23       	and	r24, r24
     b4a:	09 f4       	brne	.+2      	; 0xb4e <vfprintf+0x38>
     b4c:	ad c1       	rjmp	.+858    	; 0xea8 <vfprintf+0x392>
     b4e:	85 32       	cpi	r24, 0x25	; 37
     b50:	39 f4       	brne	.+14     	; 0xb60 <vfprintf+0x4a>
     b52:	93 fd       	sbrc	r25, 3
     b54:	85 91       	lpm	r24, Z+
     b56:	93 ff       	sbrs	r25, 3
     b58:	81 91       	ld	r24, Z+
     b5a:	7f 01       	movw	r14, r30
     b5c:	85 32       	cpi	r24, 0x25	; 37
     b5e:	21 f4       	brne	.+8      	; 0xb68 <vfprintf+0x52>
     b60:	b6 01       	movw	r22, r12
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	c0 d1       	rcall	.+896    	; 0xee6 <fputc>
     b66:	e8 cf       	rjmp	.-48     	; 0xb38 <vfprintf+0x22>
     b68:	91 2c       	mov	r9, r1
     b6a:	21 2c       	mov	r2, r1
     b6c:	31 2c       	mov	r3, r1
     b6e:	ff e1       	ldi	r31, 0x1F	; 31
     b70:	f3 15       	cp	r31, r3
     b72:	d8 f0       	brcs	.+54     	; 0xbaa <vfprintf+0x94>
     b74:	8b 32       	cpi	r24, 0x2B	; 43
     b76:	79 f0       	breq	.+30     	; 0xb96 <vfprintf+0x80>
     b78:	38 f4       	brcc	.+14     	; 0xb88 <vfprintf+0x72>
     b7a:	80 32       	cpi	r24, 0x20	; 32
     b7c:	79 f0       	breq	.+30     	; 0xb9c <vfprintf+0x86>
     b7e:	83 32       	cpi	r24, 0x23	; 35
     b80:	a1 f4       	brne	.+40     	; 0xbaa <vfprintf+0x94>
     b82:	23 2d       	mov	r18, r3
     b84:	20 61       	ori	r18, 0x10	; 16
     b86:	1d c0       	rjmp	.+58     	; 0xbc2 <vfprintf+0xac>
     b88:	8d 32       	cpi	r24, 0x2D	; 45
     b8a:	61 f0       	breq	.+24     	; 0xba4 <vfprintf+0x8e>
     b8c:	80 33       	cpi	r24, 0x30	; 48
     b8e:	69 f4       	brne	.+26     	; 0xbaa <vfprintf+0x94>
     b90:	23 2d       	mov	r18, r3
     b92:	21 60       	ori	r18, 0x01	; 1
     b94:	16 c0       	rjmp	.+44     	; 0xbc2 <vfprintf+0xac>
     b96:	83 2d       	mov	r24, r3
     b98:	82 60       	ori	r24, 0x02	; 2
     b9a:	38 2e       	mov	r3, r24
     b9c:	e3 2d       	mov	r30, r3
     b9e:	e4 60       	ori	r30, 0x04	; 4
     ba0:	3e 2e       	mov	r3, r30
     ba2:	2a c0       	rjmp	.+84     	; 0xbf8 <vfprintf+0xe2>
     ba4:	f3 2d       	mov	r31, r3
     ba6:	f8 60       	ori	r31, 0x08	; 8
     ba8:	1d c0       	rjmp	.+58     	; 0xbe4 <vfprintf+0xce>
     baa:	37 fc       	sbrc	r3, 7
     bac:	2d c0       	rjmp	.+90     	; 0xc08 <vfprintf+0xf2>
     bae:	20 ed       	ldi	r18, 0xD0	; 208
     bb0:	28 0f       	add	r18, r24
     bb2:	2a 30       	cpi	r18, 0x0A	; 10
     bb4:	40 f0       	brcs	.+16     	; 0xbc6 <vfprintf+0xb0>
     bb6:	8e 32       	cpi	r24, 0x2E	; 46
     bb8:	b9 f4       	brne	.+46     	; 0xbe8 <vfprintf+0xd2>
     bba:	36 fc       	sbrc	r3, 6
     bbc:	75 c1       	rjmp	.+746    	; 0xea8 <vfprintf+0x392>
     bbe:	23 2d       	mov	r18, r3
     bc0:	20 64       	ori	r18, 0x40	; 64
     bc2:	32 2e       	mov	r3, r18
     bc4:	19 c0       	rjmp	.+50     	; 0xbf8 <vfprintf+0xe2>
     bc6:	36 fe       	sbrs	r3, 6
     bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <vfprintf+0xc0>
     bca:	8a e0       	ldi	r24, 0x0A	; 10
     bcc:	98 9e       	mul	r9, r24
     bce:	20 0d       	add	r18, r0
     bd0:	11 24       	eor	r1, r1
     bd2:	92 2e       	mov	r9, r18
     bd4:	11 c0       	rjmp	.+34     	; 0xbf8 <vfprintf+0xe2>
     bd6:	ea e0       	ldi	r30, 0x0A	; 10
     bd8:	2e 9e       	mul	r2, r30
     bda:	20 0d       	add	r18, r0
     bdc:	11 24       	eor	r1, r1
     bde:	22 2e       	mov	r2, r18
     be0:	f3 2d       	mov	r31, r3
     be2:	f0 62       	ori	r31, 0x20	; 32
     be4:	3f 2e       	mov	r3, r31
     be6:	08 c0       	rjmp	.+16     	; 0xbf8 <vfprintf+0xe2>
     be8:	8c 36       	cpi	r24, 0x6C	; 108
     bea:	21 f4       	brne	.+8      	; 0xbf4 <vfprintf+0xde>
     bec:	83 2d       	mov	r24, r3
     bee:	80 68       	ori	r24, 0x80	; 128
     bf0:	38 2e       	mov	r3, r24
     bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <vfprintf+0xe2>
     bf4:	88 36       	cpi	r24, 0x68	; 104
     bf6:	41 f4       	brne	.+16     	; 0xc08 <vfprintf+0xf2>
     bf8:	f7 01       	movw	r30, r14
     bfa:	93 fd       	sbrc	r25, 3
     bfc:	85 91       	lpm	r24, Z+
     bfe:	93 ff       	sbrs	r25, 3
     c00:	81 91       	ld	r24, Z+
     c02:	7f 01       	movw	r14, r30
     c04:	81 11       	cpse	r24, r1
     c06:	b3 cf       	rjmp	.-154    	; 0xb6e <vfprintf+0x58>
     c08:	98 2f       	mov	r25, r24
     c0a:	9f 7d       	andi	r25, 0xDF	; 223
     c0c:	95 54       	subi	r25, 0x45	; 69
     c0e:	93 30       	cpi	r25, 0x03	; 3
     c10:	28 f4       	brcc	.+10     	; 0xc1c <vfprintf+0x106>
     c12:	0c 5f       	subi	r16, 0xFC	; 252
     c14:	1f 4f       	sbci	r17, 0xFF	; 255
     c16:	9f e3       	ldi	r25, 0x3F	; 63
     c18:	99 83       	std	Y+1, r25	; 0x01
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <vfprintf+0x120>
     c1c:	83 36       	cpi	r24, 0x63	; 99
     c1e:	31 f0       	breq	.+12     	; 0xc2c <vfprintf+0x116>
     c20:	83 37       	cpi	r24, 0x73	; 115
     c22:	71 f0       	breq	.+28     	; 0xc40 <vfprintf+0x12a>
     c24:	83 35       	cpi	r24, 0x53	; 83
     c26:	09 f0       	breq	.+2      	; 0xc2a <vfprintf+0x114>
     c28:	55 c0       	rjmp	.+170    	; 0xcd4 <vfprintf+0x1be>
     c2a:	20 c0       	rjmp	.+64     	; 0xc6c <vfprintf+0x156>
     c2c:	f8 01       	movw	r30, r16
     c2e:	80 81       	ld	r24, Z
     c30:	89 83       	std	Y+1, r24	; 0x01
     c32:	0e 5f       	subi	r16, 0xFE	; 254
     c34:	1f 4f       	sbci	r17, 0xFF	; 255
     c36:	88 24       	eor	r8, r8
     c38:	83 94       	inc	r8
     c3a:	91 2c       	mov	r9, r1
     c3c:	53 01       	movw	r10, r6
     c3e:	12 c0       	rjmp	.+36     	; 0xc64 <vfprintf+0x14e>
     c40:	28 01       	movw	r4, r16
     c42:	f2 e0       	ldi	r31, 0x02	; 2
     c44:	4f 0e       	add	r4, r31
     c46:	51 1c       	adc	r5, r1
     c48:	f8 01       	movw	r30, r16
     c4a:	a0 80       	ld	r10, Z
     c4c:	b1 80       	ldd	r11, Z+1	; 0x01
     c4e:	36 fe       	sbrs	r3, 6
     c50:	03 c0       	rjmp	.+6      	; 0xc58 <vfprintf+0x142>
     c52:	69 2d       	mov	r22, r9
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <vfprintf+0x146>
     c58:	6f ef       	ldi	r22, 0xFF	; 255
     c5a:	7f ef       	ldi	r23, 0xFF	; 255
     c5c:	c5 01       	movw	r24, r10
     c5e:	38 d1       	rcall	.+624    	; 0xed0 <strnlen>
     c60:	4c 01       	movw	r8, r24
     c62:	82 01       	movw	r16, r4
     c64:	f3 2d       	mov	r31, r3
     c66:	ff 77       	andi	r31, 0x7F	; 127
     c68:	3f 2e       	mov	r3, r31
     c6a:	15 c0       	rjmp	.+42     	; 0xc96 <vfprintf+0x180>
     c6c:	28 01       	movw	r4, r16
     c6e:	22 e0       	ldi	r18, 0x02	; 2
     c70:	42 0e       	add	r4, r18
     c72:	51 1c       	adc	r5, r1
     c74:	f8 01       	movw	r30, r16
     c76:	a0 80       	ld	r10, Z
     c78:	b1 80       	ldd	r11, Z+1	; 0x01
     c7a:	36 fe       	sbrs	r3, 6
     c7c:	03 c0       	rjmp	.+6      	; 0xc84 <vfprintf+0x16e>
     c7e:	69 2d       	mov	r22, r9
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <vfprintf+0x172>
     c84:	6f ef       	ldi	r22, 0xFF	; 255
     c86:	7f ef       	ldi	r23, 0xFF	; 255
     c88:	c5 01       	movw	r24, r10
     c8a:	17 d1       	rcall	.+558    	; 0xeba <strnlen_P>
     c8c:	4c 01       	movw	r8, r24
     c8e:	f3 2d       	mov	r31, r3
     c90:	f0 68       	ori	r31, 0x80	; 128
     c92:	3f 2e       	mov	r3, r31
     c94:	82 01       	movw	r16, r4
     c96:	33 fc       	sbrc	r3, 3
     c98:	19 c0       	rjmp	.+50     	; 0xccc <vfprintf+0x1b6>
     c9a:	82 2d       	mov	r24, r2
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	88 16       	cp	r8, r24
     ca0:	99 06       	cpc	r9, r25
     ca2:	a0 f4       	brcc	.+40     	; 0xccc <vfprintf+0x1b6>
     ca4:	b6 01       	movw	r22, r12
     ca6:	80 e2       	ldi	r24, 0x20	; 32
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	1d d1       	rcall	.+570    	; 0xee6 <fputc>
     cac:	2a 94       	dec	r2
     cae:	f5 cf       	rjmp	.-22     	; 0xc9a <vfprintf+0x184>
     cb0:	f5 01       	movw	r30, r10
     cb2:	37 fc       	sbrc	r3, 7
     cb4:	85 91       	lpm	r24, Z+
     cb6:	37 fe       	sbrs	r3, 7
     cb8:	81 91       	ld	r24, Z+
     cba:	5f 01       	movw	r10, r30
     cbc:	b6 01       	movw	r22, r12
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	12 d1       	rcall	.+548    	; 0xee6 <fputc>
     cc2:	21 10       	cpse	r2, r1
     cc4:	2a 94       	dec	r2
     cc6:	21 e0       	ldi	r18, 0x01	; 1
     cc8:	82 1a       	sub	r8, r18
     cca:	91 08       	sbc	r9, r1
     ccc:	81 14       	cp	r8, r1
     cce:	91 04       	cpc	r9, r1
     cd0:	79 f7       	brne	.-34     	; 0xcb0 <vfprintf+0x19a>
     cd2:	e1 c0       	rjmp	.+450    	; 0xe96 <vfprintf+0x380>
     cd4:	84 36       	cpi	r24, 0x64	; 100
     cd6:	11 f0       	breq	.+4      	; 0xcdc <vfprintf+0x1c6>
     cd8:	89 36       	cpi	r24, 0x69	; 105
     cda:	39 f5       	brne	.+78     	; 0xd2a <vfprintf+0x214>
     cdc:	f8 01       	movw	r30, r16
     cde:	37 fe       	sbrs	r3, 7
     ce0:	07 c0       	rjmp	.+14     	; 0xcf0 <vfprintf+0x1da>
     ce2:	60 81       	ld	r22, Z
     ce4:	71 81       	ldd	r23, Z+1	; 0x01
     ce6:	82 81       	ldd	r24, Z+2	; 0x02
     ce8:	93 81       	ldd	r25, Z+3	; 0x03
     cea:	0c 5f       	subi	r16, 0xFC	; 252
     cec:	1f 4f       	sbci	r17, 0xFF	; 255
     cee:	08 c0       	rjmp	.+16     	; 0xd00 <vfprintf+0x1ea>
     cf0:	60 81       	ld	r22, Z
     cf2:	71 81       	ldd	r23, Z+1	; 0x01
     cf4:	07 2e       	mov	r0, r23
     cf6:	00 0c       	add	r0, r0
     cf8:	88 0b       	sbc	r24, r24
     cfa:	99 0b       	sbc	r25, r25
     cfc:	0e 5f       	subi	r16, 0xFE	; 254
     cfe:	1f 4f       	sbci	r17, 0xFF	; 255
     d00:	f3 2d       	mov	r31, r3
     d02:	ff 76       	andi	r31, 0x6F	; 111
     d04:	3f 2e       	mov	r3, r31
     d06:	97 ff       	sbrs	r25, 7
     d08:	09 c0       	rjmp	.+18     	; 0xd1c <vfprintf+0x206>
     d0a:	90 95       	com	r25
     d0c:	80 95       	com	r24
     d0e:	70 95       	com	r23
     d10:	61 95       	neg	r22
     d12:	7f 4f       	sbci	r23, 0xFF	; 255
     d14:	8f 4f       	sbci	r24, 0xFF	; 255
     d16:	9f 4f       	sbci	r25, 0xFF	; 255
     d18:	f0 68       	ori	r31, 0x80	; 128
     d1a:	3f 2e       	mov	r3, r31
     d1c:	2a e0       	ldi	r18, 0x0A	; 10
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	a3 01       	movw	r20, r6
     d22:	1d d1       	rcall	.+570    	; 0xf5e <__ultoa_invert>
     d24:	88 2e       	mov	r8, r24
     d26:	86 18       	sub	r8, r6
     d28:	44 c0       	rjmp	.+136    	; 0xdb2 <vfprintf+0x29c>
     d2a:	85 37       	cpi	r24, 0x75	; 117
     d2c:	31 f4       	brne	.+12     	; 0xd3a <vfprintf+0x224>
     d2e:	23 2d       	mov	r18, r3
     d30:	2f 7e       	andi	r18, 0xEF	; 239
     d32:	b2 2e       	mov	r11, r18
     d34:	2a e0       	ldi	r18, 0x0A	; 10
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	25 c0       	rjmp	.+74     	; 0xd84 <vfprintf+0x26e>
     d3a:	93 2d       	mov	r25, r3
     d3c:	99 7f       	andi	r25, 0xF9	; 249
     d3e:	b9 2e       	mov	r11, r25
     d40:	8f 36       	cpi	r24, 0x6F	; 111
     d42:	c1 f0       	breq	.+48     	; 0xd74 <vfprintf+0x25e>
     d44:	18 f4       	brcc	.+6      	; 0xd4c <vfprintf+0x236>
     d46:	88 35       	cpi	r24, 0x58	; 88
     d48:	79 f0       	breq	.+30     	; 0xd68 <vfprintf+0x252>
     d4a:	ae c0       	rjmp	.+348    	; 0xea8 <vfprintf+0x392>
     d4c:	80 37       	cpi	r24, 0x70	; 112
     d4e:	19 f0       	breq	.+6      	; 0xd56 <vfprintf+0x240>
     d50:	88 37       	cpi	r24, 0x78	; 120
     d52:	21 f0       	breq	.+8      	; 0xd5c <vfprintf+0x246>
     d54:	a9 c0       	rjmp	.+338    	; 0xea8 <vfprintf+0x392>
     d56:	e9 2f       	mov	r30, r25
     d58:	e0 61       	ori	r30, 0x10	; 16
     d5a:	be 2e       	mov	r11, r30
     d5c:	b4 fe       	sbrs	r11, 4
     d5e:	0d c0       	rjmp	.+26     	; 0xd7a <vfprintf+0x264>
     d60:	fb 2d       	mov	r31, r11
     d62:	f4 60       	ori	r31, 0x04	; 4
     d64:	bf 2e       	mov	r11, r31
     d66:	09 c0       	rjmp	.+18     	; 0xd7a <vfprintf+0x264>
     d68:	34 fe       	sbrs	r3, 4
     d6a:	0a c0       	rjmp	.+20     	; 0xd80 <vfprintf+0x26a>
     d6c:	29 2f       	mov	r18, r25
     d6e:	26 60       	ori	r18, 0x06	; 6
     d70:	b2 2e       	mov	r11, r18
     d72:	06 c0       	rjmp	.+12     	; 0xd80 <vfprintf+0x26a>
     d74:	28 e0       	ldi	r18, 0x08	; 8
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	05 c0       	rjmp	.+10     	; 0xd84 <vfprintf+0x26e>
     d7a:	20 e1       	ldi	r18, 0x10	; 16
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	02 c0       	rjmp	.+4      	; 0xd84 <vfprintf+0x26e>
     d80:	20 e1       	ldi	r18, 0x10	; 16
     d82:	32 e0       	ldi	r19, 0x02	; 2
     d84:	f8 01       	movw	r30, r16
     d86:	b7 fe       	sbrs	r11, 7
     d88:	07 c0       	rjmp	.+14     	; 0xd98 <vfprintf+0x282>
     d8a:	60 81       	ld	r22, Z
     d8c:	71 81       	ldd	r23, Z+1	; 0x01
     d8e:	82 81       	ldd	r24, Z+2	; 0x02
     d90:	93 81       	ldd	r25, Z+3	; 0x03
     d92:	0c 5f       	subi	r16, 0xFC	; 252
     d94:	1f 4f       	sbci	r17, 0xFF	; 255
     d96:	06 c0       	rjmp	.+12     	; 0xda4 <vfprintf+0x28e>
     d98:	60 81       	ld	r22, Z
     d9a:	71 81       	ldd	r23, Z+1	; 0x01
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	0e 5f       	subi	r16, 0xFE	; 254
     da2:	1f 4f       	sbci	r17, 0xFF	; 255
     da4:	a3 01       	movw	r20, r6
     da6:	db d0       	rcall	.+438    	; 0xf5e <__ultoa_invert>
     da8:	88 2e       	mov	r8, r24
     daa:	86 18       	sub	r8, r6
     dac:	fb 2d       	mov	r31, r11
     dae:	ff 77       	andi	r31, 0x7F	; 127
     db0:	3f 2e       	mov	r3, r31
     db2:	36 fe       	sbrs	r3, 6
     db4:	0d c0       	rjmp	.+26     	; 0xdd0 <vfprintf+0x2ba>
     db6:	23 2d       	mov	r18, r3
     db8:	2e 7f       	andi	r18, 0xFE	; 254
     dba:	a2 2e       	mov	r10, r18
     dbc:	89 14       	cp	r8, r9
     dbe:	58 f4       	brcc	.+22     	; 0xdd6 <vfprintf+0x2c0>
     dc0:	34 fe       	sbrs	r3, 4
     dc2:	0b c0       	rjmp	.+22     	; 0xdda <vfprintf+0x2c4>
     dc4:	32 fc       	sbrc	r3, 2
     dc6:	09 c0       	rjmp	.+18     	; 0xdda <vfprintf+0x2c4>
     dc8:	83 2d       	mov	r24, r3
     dca:	8e 7e       	andi	r24, 0xEE	; 238
     dcc:	a8 2e       	mov	r10, r24
     dce:	05 c0       	rjmp	.+10     	; 0xdda <vfprintf+0x2c4>
     dd0:	b8 2c       	mov	r11, r8
     dd2:	a3 2c       	mov	r10, r3
     dd4:	03 c0       	rjmp	.+6      	; 0xddc <vfprintf+0x2c6>
     dd6:	b8 2c       	mov	r11, r8
     dd8:	01 c0       	rjmp	.+2      	; 0xddc <vfprintf+0x2c6>
     dda:	b9 2c       	mov	r11, r9
     ddc:	a4 fe       	sbrs	r10, 4
     dde:	0f c0       	rjmp	.+30     	; 0xdfe <vfprintf+0x2e8>
     de0:	fe 01       	movw	r30, r28
     de2:	e8 0d       	add	r30, r8
     de4:	f1 1d       	adc	r31, r1
     de6:	80 81       	ld	r24, Z
     de8:	80 33       	cpi	r24, 0x30	; 48
     dea:	21 f4       	brne	.+8      	; 0xdf4 <vfprintf+0x2de>
     dec:	9a 2d       	mov	r25, r10
     dee:	99 7e       	andi	r25, 0xE9	; 233
     df0:	a9 2e       	mov	r10, r25
     df2:	09 c0       	rjmp	.+18     	; 0xe06 <vfprintf+0x2f0>
     df4:	a2 fe       	sbrs	r10, 2
     df6:	06 c0       	rjmp	.+12     	; 0xe04 <vfprintf+0x2ee>
     df8:	b3 94       	inc	r11
     dfa:	b3 94       	inc	r11
     dfc:	04 c0       	rjmp	.+8      	; 0xe06 <vfprintf+0x2f0>
     dfe:	8a 2d       	mov	r24, r10
     e00:	86 78       	andi	r24, 0x86	; 134
     e02:	09 f0       	breq	.+2      	; 0xe06 <vfprintf+0x2f0>
     e04:	b3 94       	inc	r11
     e06:	a3 fc       	sbrc	r10, 3
     e08:	10 c0       	rjmp	.+32     	; 0xe2a <vfprintf+0x314>
     e0a:	a0 fe       	sbrs	r10, 0
     e0c:	06 c0       	rjmp	.+12     	; 0xe1a <vfprintf+0x304>
     e0e:	b2 14       	cp	r11, r2
     e10:	80 f4       	brcc	.+32     	; 0xe32 <vfprintf+0x31c>
     e12:	28 0c       	add	r2, r8
     e14:	92 2c       	mov	r9, r2
     e16:	9b 18       	sub	r9, r11
     e18:	0d c0       	rjmp	.+26     	; 0xe34 <vfprintf+0x31e>
     e1a:	b2 14       	cp	r11, r2
     e1c:	58 f4       	brcc	.+22     	; 0xe34 <vfprintf+0x31e>
     e1e:	b6 01       	movw	r22, r12
     e20:	80 e2       	ldi	r24, 0x20	; 32
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	60 d0       	rcall	.+192    	; 0xee6 <fputc>
     e26:	b3 94       	inc	r11
     e28:	f8 cf       	rjmp	.-16     	; 0xe1a <vfprintf+0x304>
     e2a:	b2 14       	cp	r11, r2
     e2c:	18 f4       	brcc	.+6      	; 0xe34 <vfprintf+0x31e>
     e2e:	2b 18       	sub	r2, r11
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <vfprintf+0x320>
     e32:	98 2c       	mov	r9, r8
     e34:	21 2c       	mov	r2, r1
     e36:	a4 fe       	sbrs	r10, 4
     e38:	0f c0       	rjmp	.+30     	; 0xe58 <vfprintf+0x342>
     e3a:	b6 01       	movw	r22, r12
     e3c:	80 e3       	ldi	r24, 0x30	; 48
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	52 d0       	rcall	.+164    	; 0xee6 <fputc>
     e42:	a2 fe       	sbrs	r10, 2
     e44:	16 c0       	rjmp	.+44     	; 0xe72 <vfprintf+0x35c>
     e46:	a1 fc       	sbrc	r10, 1
     e48:	03 c0       	rjmp	.+6      	; 0xe50 <vfprintf+0x33a>
     e4a:	88 e7       	ldi	r24, 0x78	; 120
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <vfprintf+0x33e>
     e50:	88 e5       	ldi	r24, 0x58	; 88
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	b6 01       	movw	r22, r12
     e56:	0c c0       	rjmp	.+24     	; 0xe70 <vfprintf+0x35a>
     e58:	8a 2d       	mov	r24, r10
     e5a:	86 78       	andi	r24, 0x86	; 134
     e5c:	51 f0       	breq	.+20     	; 0xe72 <vfprintf+0x35c>
     e5e:	a1 fe       	sbrs	r10, 1
     e60:	02 c0       	rjmp	.+4      	; 0xe66 <vfprintf+0x350>
     e62:	8b e2       	ldi	r24, 0x2B	; 43
     e64:	01 c0       	rjmp	.+2      	; 0xe68 <vfprintf+0x352>
     e66:	80 e2       	ldi	r24, 0x20	; 32
     e68:	a7 fc       	sbrc	r10, 7
     e6a:	8d e2       	ldi	r24, 0x2D	; 45
     e6c:	b6 01       	movw	r22, r12
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	3a d0       	rcall	.+116    	; 0xee6 <fputc>
     e72:	89 14       	cp	r8, r9
     e74:	30 f4       	brcc	.+12     	; 0xe82 <vfprintf+0x36c>
     e76:	b6 01       	movw	r22, r12
     e78:	80 e3       	ldi	r24, 0x30	; 48
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	34 d0       	rcall	.+104    	; 0xee6 <fputc>
     e7e:	9a 94       	dec	r9
     e80:	f8 cf       	rjmp	.-16     	; 0xe72 <vfprintf+0x35c>
     e82:	8a 94       	dec	r8
     e84:	f3 01       	movw	r30, r6
     e86:	e8 0d       	add	r30, r8
     e88:	f1 1d       	adc	r31, r1
     e8a:	80 81       	ld	r24, Z
     e8c:	b6 01       	movw	r22, r12
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	2a d0       	rcall	.+84     	; 0xee6 <fputc>
     e92:	81 10       	cpse	r8, r1
     e94:	f6 cf       	rjmp	.-20     	; 0xe82 <vfprintf+0x36c>
     e96:	22 20       	and	r2, r2
     e98:	09 f4       	brne	.+2      	; 0xe9c <vfprintf+0x386>
     e9a:	4e ce       	rjmp	.-868    	; 0xb38 <vfprintf+0x22>
     e9c:	b6 01       	movw	r22, r12
     e9e:	80 e2       	ldi	r24, 0x20	; 32
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	21 d0       	rcall	.+66     	; 0xee6 <fputc>
     ea4:	2a 94       	dec	r2
     ea6:	f7 cf       	rjmp	.-18     	; 0xe96 <vfprintf+0x380>
     ea8:	f6 01       	movw	r30, r12
     eaa:	86 81       	ldd	r24, Z+6	; 0x06
     eac:	97 81       	ldd	r25, Z+7	; 0x07
     eae:	02 c0       	rjmp	.+4      	; 0xeb4 <vfprintf+0x39e>
     eb0:	8f ef       	ldi	r24, 0xFF	; 255
     eb2:	9f ef       	ldi	r25, 0xFF	; 255
     eb4:	2b 96       	adiw	r28, 0x0b	; 11
     eb6:	e2 e1       	ldi	r30, 0x12	; 18
     eb8:	cc c0       	rjmp	.+408    	; 0x1052 <__epilogue_restores__>

00000eba <strnlen_P>:
     eba:	fc 01       	movw	r30, r24
     ebc:	05 90       	lpm	r0, Z+
     ebe:	61 50       	subi	r22, 0x01	; 1
     ec0:	70 40       	sbci	r23, 0x00	; 0
     ec2:	01 10       	cpse	r0, r1
     ec4:	d8 f7       	brcc	.-10     	; 0xebc <strnlen_P+0x2>
     ec6:	80 95       	com	r24
     ec8:	90 95       	com	r25
     eca:	8e 0f       	add	r24, r30
     ecc:	9f 1f       	adc	r25, r31
     ece:	08 95       	ret

00000ed0 <strnlen>:
     ed0:	fc 01       	movw	r30, r24
     ed2:	61 50       	subi	r22, 0x01	; 1
     ed4:	70 40       	sbci	r23, 0x00	; 0
     ed6:	01 90       	ld	r0, Z+
     ed8:	01 10       	cpse	r0, r1
     eda:	d8 f7       	brcc	.-10     	; 0xed2 <strnlen+0x2>
     edc:	80 95       	com	r24
     ede:	90 95       	com	r25
     ee0:	8e 0f       	add	r24, r30
     ee2:	9f 1f       	adc	r25, r31
     ee4:	08 95       	ret

00000ee6 <fputc>:
     ee6:	0f 93       	push	r16
     ee8:	1f 93       	push	r17
     eea:	cf 93       	push	r28
     eec:	df 93       	push	r29
     eee:	fb 01       	movw	r30, r22
     ef0:	23 81       	ldd	r18, Z+3	; 0x03
     ef2:	21 fd       	sbrc	r18, 1
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <fputc+0x16>
     ef6:	8f ef       	ldi	r24, 0xFF	; 255
     ef8:	9f ef       	ldi	r25, 0xFF	; 255
     efa:	2c c0       	rjmp	.+88     	; 0xf54 <fputc+0x6e>
     efc:	22 ff       	sbrs	r18, 2
     efe:	16 c0       	rjmp	.+44     	; 0xf2c <fputc+0x46>
     f00:	46 81       	ldd	r20, Z+6	; 0x06
     f02:	57 81       	ldd	r21, Z+7	; 0x07
     f04:	24 81       	ldd	r18, Z+4	; 0x04
     f06:	35 81       	ldd	r19, Z+5	; 0x05
     f08:	42 17       	cp	r20, r18
     f0a:	53 07       	cpc	r21, r19
     f0c:	44 f4       	brge	.+16     	; 0xf1e <fputc+0x38>
     f0e:	a0 81       	ld	r26, Z
     f10:	b1 81       	ldd	r27, Z+1	; 0x01
     f12:	9d 01       	movw	r18, r26
     f14:	2f 5f       	subi	r18, 0xFF	; 255
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	31 83       	std	Z+1, r19	; 0x01
     f1a:	20 83       	st	Z, r18
     f1c:	8c 93       	st	X, r24
     f1e:	26 81       	ldd	r18, Z+6	; 0x06
     f20:	37 81       	ldd	r19, Z+7	; 0x07
     f22:	2f 5f       	subi	r18, 0xFF	; 255
     f24:	3f 4f       	sbci	r19, 0xFF	; 255
     f26:	37 83       	std	Z+7, r19	; 0x07
     f28:	26 83       	std	Z+6, r18	; 0x06
     f2a:	14 c0       	rjmp	.+40     	; 0xf54 <fputc+0x6e>
     f2c:	8b 01       	movw	r16, r22
     f2e:	ec 01       	movw	r28, r24
     f30:	fb 01       	movw	r30, r22
     f32:	00 84       	ldd	r0, Z+8	; 0x08
     f34:	f1 85       	ldd	r31, Z+9	; 0x09
     f36:	e0 2d       	mov	r30, r0
     f38:	09 95       	icall
     f3a:	89 2b       	or	r24, r25
     f3c:	e1 f6       	brne	.-72     	; 0xef6 <fputc+0x10>
     f3e:	d8 01       	movw	r26, r16
     f40:	16 96       	adiw	r26, 0x06	; 6
     f42:	8d 91       	ld	r24, X+
     f44:	9c 91       	ld	r25, X
     f46:	17 97       	sbiw	r26, 0x07	; 7
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	17 96       	adiw	r26, 0x07	; 7
     f4c:	9c 93       	st	X, r25
     f4e:	8e 93       	st	-X, r24
     f50:	16 97       	sbiw	r26, 0x06	; 6
     f52:	ce 01       	movw	r24, r28
     f54:	df 91       	pop	r29
     f56:	cf 91       	pop	r28
     f58:	1f 91       	pop	r17
     f5a:	0f 91       	pop	r16
     f5c:	08 95       	ret

00000f5e <__ultoa_invert>:
     f5e:	fa 01       	movw	r30, r20
     f60:	aa 27       	eor	r26, r26
     f62:	28 30       	cpi	r18, 0x08	; 8
     f64:	51 f1       	breq	.+84     	; 0xfba <__ultoa_invert+0x5c>
     f66:	20 31       	cpi	r18, 0x10	; 16
     f68:	81 f1       	breq	.+96     	; 0xfca <__ultoa_invert+0x6c>
     f6a:	e8 94       	clt
     f6c:	6f 93       	push	r22
     f6e:	6e 7f       	andi	r22, 0xFE	; 254
     f70:	6e 5f       	subi	r22, 0xFE	; 254
     f72:	7f 4f       	sbci	r23, 0xFF	; 255
     f74:	8f 4f       	sbci	r24, 0xFF	; 255
     f76:	9f 4f       	sbci	r25, 0xFF	; 255
     f78:	af 4f       	sbci	r26, 0xFF	; 255
     f7a:	b1 e0       	ldi	r27, 0x01	; 1
     f7c:	3e d0       	rcall	.+124    	; 0xffa <__ultoa_invert+0x9c>
     f7e:	b4 e0       	ldi	r27, 0x04	; 4
     f80:	3c d0       	rcall	.+120    	; 0xffa <__ultoa_invert+0x9c>
     f82:	67 0f       	add	r22, r23
     f84:	78 1f       	adc	r23, r24
     f86:	89 1f       	adc	r24, r25
     f88:	9a 1f       	adc	r25, r26
     f8a:	a1 1d       	adc	r26, r1
     f8c:	68 0f       	add	r22, r24
     f8e:	79 1f       	adc	r23, r25
     f90:	8a 1f       	adc	r24, r26
     f92:	91 1d       	adc	r25, r1
     f94:	a1 1d       	adc	r26, r1
     f96:	6a 0f       	add	r22, r26
     f98:	71 1d       	adc	r23, r1
     f9a:	81 1d       	adc	r24, r1
     f9c:	91 1d       	adc	r25, r1
     f9e:	a1 1d       	adc	r26, r1
     fa0:	20 d0       	rcall	.+64     	; 0xfe2 <__ultoa_invert+0x84>
     fa2:	09 f4       	brne	.+2      	; 0xfa6 <__ultoa_invert+0x48>
     fa4:	68 94       	set
     fa6:	3f 91       	pop	r19
     fa8:	2a e0       	ldi	r18, 0x0A	; 10
     faa:	26 9f       	mul	r18, r22
     fac:	11 24       	eor	r1, r1
     fae:	30 19       	sub	r19, r0
     fb0:	30 5d       	subi	r19, 0xD0	; 208
     fb2:	31 93       	st	Z+, r19
     fb4:	de f6       	brtc	.-74     	; 0xf6c <__ultoa_invert+0xe>
     fb6:	cf 01       	movw	r24, r30
     fb8:	08 95       	ret
     fba:	46 2f       	mov	r20, r22
     fbc:	47 70       	andi	r20, 0x07	; 7
     fbe:	40 5d       	subi	r20, 0xD0	; 208
     fc0:	41 93       	st	Z+, r20
     fc2:	b3 e0       	ldi	r27, 0x03	; 3
     fc4:	0f d0       	rcall	.+30     	; 0xfe4 <__ultoa_invert+0x86>
     fc6:	c9 f7       	brne	.-14     	; 0xfba <__ultoa_invert+0x5c>
     fc8:	f6 cf       	rjmp	.-20     	; 0xfb6 <__ultoa_invert+0x58>
     fca:	46 2f       	mov	r20, r22
     fcc:	4f 70       	andi	r20, 0x0F	; 15
     fce:	40 5d       	subi	r20, 0xD0	; 208
     fd0:	4a 33       	cpi	r20, 0x3A	; 58
     fd2:	18 f0       	brcs	.+6      	; 0xfda <__ultoa_invert+0x7c>
     fd4:	49 5d       	subi	r20, 0xD9	; 217
     fd6:	31 fd       	sbrc	r19, 1
     fd8:	40 52       	subi	r20, 0x20	; 32
     fda:	41 93       	st	Z+, r20
     fdc:	02 d0       	rcall	.+4      	; 0xfe2 <__ultoa_invert+0x84>
     fde:	a9 f7       	brne	.-22     	; 0xfca <__ultoa_invert+0x6c>
     fe0:	ea cf       	rjmp	.-44     	; 0xfb6 <__ultoa_invert+0x58>
     fe2:	b4 e0       	ldi	r27, 0x04	; 4
     fe4:	a6 95       	lsr	r26
     fe6:	97 95       	ror	r25
     fe8:	87 95       	ror	r24
     fea:	77 95       	ror	r23
     fec:	67 95       	ror	r22
     fee:	ba 95       	dec	r27
     ff0:	c9 f7       	brne	.-14     	; 0xfe4 <__ultoa_invert+0x86>
     ff2:	00 97       	sbiw	r24, 0x00	; 0
     ff4:	61 05       	cpc	r22, r1
     ff6:	71 05       	cpc	r23, r1
     ff8:	08 95       	ret
     ffa:	9b 01       	movw	r18, r22
     ffc:	ac 01       	movw	r20, r24
     ffe:	0a 2e       	mov	r0, r26
    1000:	06 94       	lsr	r0
    1002:	57 95       	ror	r21
    1004:	47 95       	ror	r20
    1006:	37 95       	ror	r19
    1008:	27 95       	ror	r18
    100a:	ba 95       	dec	r27
    100c:	c9 f7       	brne	.-14     	; 0x1000 <__ultoa_invert+0xa2>
    100e:	62 0f       	add	r22, r18
    1010:	73 1f       	adc	r23, r19
    1012:	84 1f       	adc	r24, r20
    1014:	95 1f       	adc	r25, r21
    1016:	a0 1d       	adc	r26, r0
    1018:	08 95       	ret

0000101a <__prologue_saves__>:
    101a:	2f 92       	push	r2
    101c:	3f 92       	push	r3
    101e:	4f 92       	push	r4
    1020:	5f 92       	push	r5
    1022:	6f 92       	push	r6
    1024:	7f 92       	push	r7
    1026:	8f 92       	push	r8
    1028:	9f 92       	push	r9
    102a:	af 92       	push	r10
    102c:	bf 92       	push	r11
    102e:	cf 92       	push	r12
    1030:	df 92       	push	r13
    1032:	ef 92       	push	r14
    1034:	ff 92       	push	r15
    1036:	0f 93       	push	r16
    1038:	1f 93       	push	r17
    103a:	cf 93       	push	r28
    103c:	df 93       	push	r29
    103e:	cd b7       	in	r28, 0x3d	; 61
    1040:	de b7       	in	r29, 0x3e	; 62
    1042:	ca 1b       	sub	r28, r26
    1044:	db 0b       	sbc	r29, r27
    1046:	0f b6       	in	r0, 0x3f	; 63
    1048:	f8 94       	cli
    104a:	de bf       	out	0x3e, r29	; 62
    104c:	0f be       	out	0x3f, r0	; 63
    104e:	cd bf       	out	0x3d, r28	; 61
    1050:	09 94       	ijmp

00001052 <__epilogue_restores__>:
    1052:	2a 88       	ldd	r2, Y+18	; 0x12
    1054:	39 88       	ldd	r3, Y+17	; 0x11
    1056:	48 88       	ldd	r4, Y+16	; 0x10
    1058:	5f 84       	ldd	r5, Y+15	; 0x0f
    105a:	6e 84       	ldd	r6, Y+14	; 0x0e
    105c:	7d 84       	ldd	r7, Y+13	; 0x0d
    105e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1060:	9b 84       	ldd	r9, Y+11	; 0x0b
    1062:	aa 84       	ldd	r10, Y+10	; 0x0a
    1064:	b9 84       	ldd	r11, Y+9	; 0x09
    1066:	c8 84       	ldd	r12, Y+8	; 0x08
    1068:	df 80       	ldd	r13, Y+7	; 0x07
    106a:	ee 80       	ldd	r14, Y+6	; 0x06
    106c:	fd 80       	ldd	r15, Y+5	; 0x05
    106e:	0c 81       	ldd	r16, Y+4	; 0x04
    1070:	1b 81       	ldd	r17, Y+3	; 0x03
    1072:	aa 81       	ldd	r26, Y+2	; 0x02
    1074:	b9 81       	ldd	r27, Y+1	; 0x01
    1076:	ce 0f       	add	r28, r30
    1078:	d1 1d       	adc	r29, r1
    107a:	0f b6       	in	r0, 0x3f	; 63
    107c:	f8 94       	cli
    107e:	de bf       	out	0x3e, r29	; 62
    1080:	0f be       	out	0x3f, r0	; 63
    1082:	cd bf       	out	0x3d, r28	; 61
    1084:	ed 01       	movw	r28, r26
    1086:	08 95       	ret

00001088 <_exit>:
    1088:	f8 94       	cli

0000108a <__stop_program>:
    108a:	ff cf       	rjmp	.-2      	; 0x108a <__stop_program>
