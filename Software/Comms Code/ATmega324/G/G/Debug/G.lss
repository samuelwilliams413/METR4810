
G.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000774  00000808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000774  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c9  00800126  00800126  0000082e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000082e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000088c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b30  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000989  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e5d  00000000  00000000  00001e05  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d8  00000000  00000000  00002c64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000febf  00000000  00000000  00002d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000019c  00000000  00000000  00012bfb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00012d97  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003b08  00000000  00000000  00012dff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	3d c0       	rjmp	.+122    	; 0x7c <__ctors_end>
   2:	00 00       	nop
   4:	56 c0       	rjmp	.+172    	; 0xb2 <__bad_interrupt>
   6:	00 00       	nop
   8:	54 c0       	rjmp	.+168    	; 0xb2 <__bad_interrupt>
   a:	00 00       	nop
   c:	52 c0       	rjmp	.+164    	; 0xb2 <__bad_interrupt>
   e:	00 00       	nop
  10:	50 c0       	rjmp	.+160    	; 0xb2 <__bad_interrupt>
  12:	00 00       	nop
  14:	4e c0       	rjmp	.+156    	; 0xb2 <__bad_interrupt>
  16:	00 00       	nop
  18:	4c c0       	rjmp	.+152    	; 0xb2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4a c0       	rjmp	.+148    	; 0xb2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	48 c0       	rjmp	.+144    	; 0xb2 <__bad_interrupt>
  22:	00 00       	nop
  24:	46 c0       	rjmp	.+140    	; 0xb2 <__bad_interrupt>
  26:	00 00       	nop
  28:	44 c0       	rjmp	.+136    	; 0xb2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	42 c0       	rjmp	.+132    	; 0xb2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	40 c0       	rjmp	.+128    	; 0xb2 <__bad_interrupt>
  32:	00 00       	nop
  34:	3e c0       	rjmp	.+124    	; 0xb2 <__bad_interrupt>
  36:	00 00       	nop
  38:	3c c0       	rjmp	.+120    	; 0xb2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3a c0       	rjmp	.+116    	; 0xb2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	38 c0       	rjmp	.+112    	; 0xb2 <__bad_interrupt>
  42:	00 00       	nop
  44:	36 c0       	rjmp	.+108    	; 0xb2 <__bad_interrupt>
  46:	00 00       	nop
  48:	34 c0       	rjmp	.+104    	; 0xb2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	32 c0       	rjmp	.+100    	; 0xb2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	9c c0       	rjmp	.+312    	; 0x18a <__vector_20>
  52:	00 00       	nop
  54:	2e c0       	rjmp	.+92     	; 0xb2 <__bad_interrupt>
  56:	00 00       	nop
  58:	2c c0       	rjmp	.+88     	; 0xb2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2a c0       	rjmp	.+84     	; 0xb2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	28 c0       	rjmp	.+80     	; 0xb2 <__bad_interrupt>
  62:	00 00       	nop
  64:	26 c0       	rjmp	.+76     	; 0xb2 <__bad_interrupt>
  66:	00 00       	nop
  68:	24 c0       	rjmp	.+72     	; 0xb2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	22 c0       	rjmp	.+68     	; 0xb2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	20 c0       	rjmp	.+64     	; 0xb2 <__bad_interrupt>
  72:	00 00       	nop
  74:	1e c0       	rjmp	.+60     	; 0xb2 <__bad_interrupt>
  76:	00 00       	nop
  78:	1c c0       	rjmp	.+56     	; 0xb2 <__bad_interrupt>
	...

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e4 e7       	ldi	r30, 0x74	; 116
  90:	f7 e0       	ldi	r31, 0x07	; 7
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a6 32       	cpi	r26, 0x26	; 38
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a6 e2       	ldi	r26, 0x26	; 38
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	af 3e       	cpi	r26, 0xEF	; 239
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	7d d0       	rcall	.+250    	; 0x1aa <main>
  b0:	5f c3       	rjmp	.+1726   	; 0x770 <_exit>

000000b2 <__bad_interrupt>:
  b2:	a6 cf       	rjmp	.-180    	; 0x0 <__vectors>

000000b4 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  b4:	08 95       	ret

000000b6 <uart_init>:


extern void uart_init(void)
{	
	
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
  b6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
  ba:	83 e3       	ldi	r24, 0x33	; 51
  bc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  c0:	a1 ec       	ldi	r26, 0xC1	; 193
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	88 e1       	ldi	r24, 0x18	; 24
  c6:	8c 93       	st	X, r24
	UCSR0C = (3<<UCSZ00)|(1<<USBS0);
  c8:	e2 ec       	ldi	r30, 0xC2	; 194
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	8e e0       	ldi	r24, 0x0E	; 14
  ce:	80 83       	st	Z, r24

	// enable RX and TX and set interrupts on rx complete
	UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);
  d0:	88 e9       	ldi	r24, 0x98	; 152
  d2:	8c 93       	st	X, r24

	// 8-bit, 1 stop bit, no parity, asynchronous UART
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00) | (0 << USBS0) |
  d4:	86 e0       	ldi	r24, 0x06	; 6
  d6:	80 83       	st	Z, r24
			(0 << UPM01) | (0 << UPM00) | (0 << UMSEL01) |
			(0 << UMSEL00);

	sei();
  d8:	78 94       	sei
  da:	08 95       	ret

000000dc <send_str>:
	}
	send_str(buffer);
}

extern void send_str(char* StringPtr)
{
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	dc 01       	movw	r26, r24
		while(*StringPtr != 0x00) {
  e2:	9c 91       	ld	r25, X
  e4:	99 23       	and	r25, r25
  e6:	69 f0       	breq	.+26     	; 0x102 <send_str+0x26>
  e8:	11 96       	adiw	r26, 0x01	; 1
 * \param data the data to add to the UART buffer and send
 *
 */
static inline void uart_putchar(uint8_t data)
{
		while(!(UCSR0A & (1<<UDRE0)));
  ea:	e0 ec       	ldi	r30, 0xC0	; 192
  ec:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = data;
  ee:	c6 ec       	ldi	r28, 0xC6	; 198
  f0:	d0 e0       	ldi	r29, 0x00	; 0
}

extern void send_str(char* StringPtr)
{
		while(*StringPtr != 0x00) {
			uart_putchar(*StringPtr);
  f2:	29 2f       	mov	r18, r25
 * \param data the data to add to the UART buffer and send
 *
 */
static inline void uart_putchar(uint8_t data)
{
		while(!(UCSR0A & (1<<UDRE0)));
  f4:	90 81       	ld	r25, Z
  f6:	95 ff       	sbrs	r25, 5
  f8:	fd cf       	rjmp	.-6      	; 0xf4 <send_str+0x18>
		UDR0 = data;
  fa:	28 83       	st	Y, r18
	send_str(buffer);
}

extern void send_str(char* StringPtr)
{
		while(*StringPtr != 0x00) {
  fc:	9d 91       	ld	r25, X+
  fe:	91 11       	cpse	r25, r1
 100:	f8 cf       	rjmp	.-16     	; 0xf2 <send_str+0x16>
 * \param data the data to add to the UART buffer and send
 *
 */
static inline void uart_putchar(uint8_t data)
{
		while(!(UCSR0A & (1<<UDRE0)));
 102:	e0 ec       	ldi	r30, 0xC0	; 192
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	85 ff       	sbrs	r24, 5
 10a:	fd cf       	rjmp	.-6      	; 0x106 <send_str+0x2a>
		UDR0 = data;
 10c:	8d e0       	ldi	r24, 0x0D	; 13
 10e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
		while(*StringPtr != 0x00) {
			uart_putchar(*StringPtr);
			StringPtr++;
		}
		uart_putchar('\r');
}
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	08 95       	ret

00000118 <send_confirmation_msg>:
		return temp;
}


extern void send_confirmation_msg(uint8_t data)
{
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	cd b7       	in	r28, 0x3d	; 61
 11e:	de b7       	in	r29, 0x3e	; 62
 120:	6e 97       	sbiw	r28, 0x1e	; 30
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	de bf       	out	0x3e, r29	; 62
 128:	0f be       	out	0x3f, r0	; 63
 12a:	cd bf       	out	0x3d, r28	; 61
	// the string we send and receive on UART
	char buffer [30];
	
	if (data == '\0') {
 12c:	81 11       	cpse	r24, r1
 12e:	0a c0       	rjmp	.+20     	; 0x144 <send_confirmation_msg+0x2c>
		sprintf (buffer, "Received: '\\0'(0)\n");
 130:	83 e1       	ldi	r24, 0x13	; 19
 132:	e0 e0       	ldi	r30, 0x00	; 0
 134:	f1 e0       	ldi	r31, 0x01	; 1
 136:	de 01       	movw	r26, r28
 138:	11 96       	adiw	r26, 0x01	; 1
 13a:	01 90       	ld	r0, Z+
 13c:	0d 92       	st	X+, r0
 13e:	8a 95       	dec	r24
 140:	e1 f7       	brne	.-8      	; 0x13a <send_confirmation_msg+0x22>
 142:	12 c0       	rjmp	.+36     	; 0x168 <send_confirmation_msg+0x50>
	} else {
		sprintf (buffer, "Received: %c(%d)\n", data, data);
 144:	1f 92       	push	r1
 146:	8f 93       	push	r24
 148:	1f 92       	push	r1
 14a:	8f 93       	push	r24
 14c:	83 e1       	ldi	r24, 0x13	; 19
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	9f 93       	push	r25
 152:	8f 93       	push	r24
 154:	ce 01       	movw	r24, r28
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	9f 93       	push	r25
 15a:	8f 93       	push	r24
 15c:	31 d0       	rcall	.+98     	; 0x1c0 <sprintf>
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	f8 94       	cli
 162:	de bf       	out	0x3e, r29	; 62
 164:	0f be       	out	0x3f, r0	; 63
 166:	cd bf       	out	0x3d, r28	; 61
	}
	send_str(buffer);
 168:	ce 01       	movw	r24, r28
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	b7 df       	rcall	.-146    	; 0xdc <send_str>
}
 16e:	6e 96       	adiw	r28, 0x1e	; 30
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	f8 94       	cli
 174:	de bf       	out	0x3e, r29	; 62
 176:	0f be       	out	0x3f, r0	; 63
 178:	cd bf       	out	0x3d, r28	; 61
 17a:	df 91       	pop	r29
 17c:	cf 91       	pop	r28
 17e:	08 95       	ret

00000180 <get_char>:
 *
 * \retval Next data byte in receive buffer
 */
static inline uint8_t uart_getchar(void)
{
		unsigned char temp = value;
 180:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <value>
		value = '\0';
 184:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <value>
extern uint8_t get_char(void)
{	
	uint8_t data = '\0';
	data = uart_getchar();
	return data;
}
 188:	08 95       	ret

0000018a <__vector_20>:

ISR (USART0_RX_vect)
{
 18a:	1f 92       	push	r1
 18c:	0f 92       	push	r0
 18e:	0f b6       	in	r0, 0x3f	; 63
 190:	0f 92       	push	r0
 192:	11 24       	eor	r1, r1
 194:	8f 93       	push	r24
	/* Put data into buffer, sends the data */
	value = UDR0;
 196:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 19a:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <value>
 19e:	8f 91       	pop	r24
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <main>:
int main(void){
	board_init();
	uart_init();        //Call the USART initialization code
	
	while(1){        //Infinite loop
		send_confirmation_msg(get_char());
 1aa:	84 df       	rcall	.-248    	; 0xb4 <board_init>
 1ac:	84 df       	rcall	.-248    	; 0xb6 <uart_init>
 1ae:	e8 df       	rcall	.-48     	; 0x180 <get_char>
 1b0:	b3 df       	rcall	.-154    	; 0x118 <send_confirmation_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b2:	8f e1       	ldi	r24, 0x1F	; 31
 1b4:	9e e4       	ldi	r25, 0x4E	; 78
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <main+0xc>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x12>
 1bc:	00 00       	nop
 1be:	f7 cf       	rjmp	.-18     	; 0x1ae <main+0x4>

000001c0 <sprintf>:
 1c0:	ae e0       	ldi	r26, 0x0E	; 14
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	e5 ee       	ldi	r30, 0xE5	; 229
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	aa c2       	rjmp	.+1364   	; 0x71e <__prologue_saves__+0x1c>
 1ca:	0d 89       	ldd	r16, Y+21	; 0x15
 1cc:	1e 89       	ldd	r17, Y+22	; 0x16
 1ce:	86 e0       	ldi	r24, 0x06	; 6
 1d0:	8c 83       	std	Y+4, r24	; 0x04
 1d2:	1a 83       	std	Y+2, r17	; 0x02
 1d4:	09 83       	std	Y+1, r16	; 0x01
 1d6:	8f ef       	ldi	r24, 0xFF	; 255
 1d8:	9f e7       	ldi	r25, 0x7F	; 127
 1da:	9e 83       	std	Y+6, r25	; 0x06
 1dc:	8d 83       	std	Y+5, r24	; 0x05
 1de:	ae 01       	movw	r20, r28
 1e0:	47 5e       	subi	r20, 0xE7	; 231
 1e2:	5f 4f       	sbci	r21, 0xFF	; 255
 1e4:	6f 89       	ldd	r22, Y+23	; 0x17
 1e6:	78 8d       	ldd	r23, Y+24	; 0x18
 1e8:	ce 01       	movw	r24, r28
 1ea:	01 96       	adiw	r24, 0x01	; 1
 1ec:	08 d0       	rcall	.+16     	; 0x1fe <vfprintf>
 1ee:	ef 81       	ldd	r30, Y+7	; 0x07
 1f0:	f8 85       	ldd	r31, Y+8	; 0x08
 1f2:	e0 0f       	add	r30, r16
 1f4:	f1 1f       	adc	r31, r17
 1f6:	10 82       	st	Z, r1
 1f8:	2e 96       	adiw	r28, 0x0e	; 14
 1fa:	e4 e0       	ldi	r30, 0x04	; 4
 1fc:	ac c2       	rjmp	.+1368   	; 0x756 <__epilogue_restores__+0x1c>

000001fe <vfprintf>:
 1fe:	ab e0       	ldi	r26, 0x0B	; 11
 200:	b0 e0       	ldi	r27, 0x00	; 0
 202:	e4 e0       	ldi	r30, 0x04	; 4
 204:	f1 e0       	ldi	r31, 0x01	; 1
 206:	7d c2       	rjmp	.+1274   	; 0x702 <__prologue_saves__>
 208:	6c 01       	movw	r12, r24
 20a:	7b 01       	movw	r14, r22
 20c:	8a 01       	movw	r16, r20
 20e:	fc 01       	movw	r30, r24
 210:	17 82       	std	Z+7, r1	; 0x07
 212:	16 82       	std	Z+6, r1	; 0x06
 214:	83 81       	ldd	r24, Z+3	; 0x03
 216:	81 ff       	sbrs	r24, 1
 218:	bf c1       	rjmp	.+894    	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 21a:	ce 01       	movw	r24, r28
 21c:	01 96       	adiw	r24, 0x01	; 1
 21e:	3c 01       	movw	r6, r24
 220:	f6 01       	movw	r30, r12
 222:	93 81       	ldd	r25, Z+3	; 0x03
 224:	f7 01       	movw	r30, r14
 226:	93 fd       	sbrc	r25, 3
 228:	85 91       	lpm	r24, Z+
 22a:	93 ff       	sbrs	r25, 3
 22c:	81 91       	ld	r24, Z+
 22e:	7f 01       	movw	r14, r30
 230:	88 23       	and	r24, r24
 232:	09 f4       	brne	.+2      	; 0x236 <vfprintf+0x38>
 234:	ad c1       	rjmp	.+858    	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 236:	85 32       	cpi	r24, 0x25	; 37
 238:	39 f4       	brne	.+14     	; 0x248 <vfprintf+0x4a>
 23a:	93 fd       	sbrc	r25, 3
 23c:	85 91       	lpm	r24, Z+
 23e:	93 ff       	sbrs	r25, 3
 240:	81 91       	ld	r24, Z+
 242:	7f 01       	movw	r14, r30
 244:	85 32       	cpi	r24, 0x25	; 37
 246:	21 f4       	brne	.+8      	; 0x250 <vfprintf+0x52>
 248:	b6 01       	movw	r22, r12
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	c0 d1       	rcall	.+896    	; 0x5ce <fputc>
 24e:	e8 cf       	rjmp	.-48     	; 0x220 <vfprintf+0x22>
 250:	91 2c       	mov	r9, r1
 252:	21 2c       	mov	r2, r1
 254:	31 2c       	mov	r3, r1
 256:	ff e1       	ldi	r31, 0x1F	; 31
 258:	f3 15       	cp	r31, r3
 25a:	d8 f0       	brcs	.+54     	; 0x292 <vfprintf+0x94>
 25c:	8b 32       	cpi	r24, 0x2B	; 43
 25e:	79 f0       	breq	.+30     	; 0x27e <vfprintf+0x80>
 260:	38 f4       	brcc	.+14     	; 0x270 <vfprintf+0x72>
 262:	80 32       	cpi	r24, 0x20	; 32
 264:	79 f0       	breq	.+30     	; 0x284 <vfprintf+0x86>
 266:	83 32       	cpi	r24, 0x23	; 35
 268:	a1 f4       	brne	.+40     	; 0x292 <vfprintf+0x94>
 26a:	23 2d       	mov	r18, r3
 26c:	20 61       	ori	r18, 0x10	; 16
 26e:	1d c0       	rjmp	.+58     	; 0x2aa <vfprintf+0xac>
 270:	8d 32       	cpi	r24, 0x2D	; 45
 272:	61 f0       	breq	.+24     	; 0x28c <vfprintf+0x8e>
 274:	80 33       	cpi	r24, 0x30	; 48
 276:	69 f4       	brne	.+26     	; 0x292 <vfprintf+0x94>
 278:	23 2d       	mov	r18, r3
 27a:	21 60       	ori	r18, 0x01	; 1
 27c:	16 c0       	rjmp	.+44     	; 0x2aa <vfprintf+0xac>
 27e:	83 2d       	mov	r24, r3
 280:	82 60       	ori	r24, 0x02	; 2
 282:	38 2e       	mov	r3, r24
 284:	e3 2d       	mov	r30, r3
 286:	e4 60       	ori	r30, 0x04	; 4
 288:	3e 2e       	mov	r3, r30
 28a:	2a c0       	rjmp	.+84     	; 0x2e0 <vfprintf+0xe2>
 28c:	f3 2d       	mov	r31, r3
 28e:	f8 60       	ori	r31, 0x08	; 8
 290:	1d c0       	rjmp	.+58     	; 0x2cc <vfprintf+0xce>
 292:	37 fc       	sbrc	r3, 7
 294:	2d c0       	rjmp	.+90     	; 0x2f0 <vfprintf+0xf2>
 296:	20 ed       	ldi	r18, 0xD0	; 208
 298:	28 0f       	add	r18, r24
 29a:	2a 30       	cpi	r18, 0x0A	; 10
 29c:	40 f0       	brcs	.+16     	; 0x2ae <vfprintf+0xb0>
 29e:	8e 32       	cpi	r24, 0x2E	; 46
 2a0:	b9 f4       	brne	.+46     	; 0x2d0 <vfprintf+0xd2>
 2a2:	36 fc       	sbrc	r3, 6
 2a4:	75 c1       	rjmp	.+746    	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 2a6:	23 2d       	mov	r18, r3
 2a8:	20 64       	ori	r18, 0x40	; 64
 2aa:	32 2e       	mov	r3, r18
 2ac:	19 c0       	rjmp	.+50     	; 0x2e0 <vfprintf+0xe2>
 2ae:	36 fe       	sbrs	r3, 6
 2b0:	06 c0       	rjmp	.+12     	; 0x2be <vfprintf+0xc0>
 2b2:	8a e0       	ldi	r24, 0x0A	; 10
 2b4:	98 9e       	mul	r9, r24
 2b6:	20 0d       	add	r18, r0
 2b8:	11 24       	eor	r1, r1
 2ba:	92 2e       	mov	r9, r18
 2bc:	11 c0       	rjmp	.+34     	; 0x2e0 <vfprintf+0xe2>
 2be:	ea e0       	ldi	r30, 0x0A	; 10
 2c0:	2e 9e       	mul	r2, r30
 2c2:	20 0d       	add	r18, r0
 2c4:	11 24       	eor	r1, r1
 2c6:	22 2e       	mov	r2, r18
 2c8:	f3 2d       	mov	r31, r3
 2ca:	f0 62       	ori	r31, 0x20	; 32
 2cc:	3f 2e       	mov	r3, r31
 2ce:	08 c0       	rjmp	.+16     	; 0x2e0 <vfprintf+0xe2>
 2d0:	8c 36       	cpi	r24, 0x6C	; 108
 2d2:	21 f4       	brne	.+8      	; 0x2dc <vfprintf+0xde>
 2d4:	83 2d       	mov	r24, r3
 2d6:	80 68       	ori	r24, 0x80	; 128
 2d8:	38 2e       	mov	r3, r24
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <vfprintf+0xe2>
 2dc:	88 36       	cpi	r24, 0x68	; 104
 2de:	41 f4       	brne	.+16     	; 0x2f0 <vfprintf+0xf2>
 2e0:	f7 01       	movw	r30, r14
 2e2:	93 fd       	sbrc	r25, 3
 2e4:	85 91       	lpm	r24, Z+
 2e6:	93 ff       	sbrs	r25, 3
 2e8:	81 91       	ld	r24, Z+
 2ea:	7f 01       	movw	r14, r30
 2ec:	81 11       	cpse	r24, r1
 2ee:	b3 cf       	rjmp	.-154    	; 0x256 <vfprintf+0x58>
 2f0:	98 2f       	mov	r25, r24
 2f2:	9f 7d       	andi	r25, 0xDF	; 223
 2f4:	95 54       	subi	r25, 0x45	; 69
 2f6:	93 30       	cpi	r25, 0x03	; 3
 2f8:	28 f4       	brcc	.+10     	; 0x304 <vfprintf+0x106>
 2fa:	0c 5f       	subi	r16, 0xFC	; 252
 2fc:	1f 4f       	sbci	r17, 0xFF	; 255
 2fe:	9f e3       	ldi	r25, 0x3F	; 63
 300:	99 83       	std	Y+1, r25	; 0x01
 302:	0d c0       	rjmp	.+26     	; 0x31e <vfprintf+0x120>
 304:	83 36       	cpi	r24, 0x63	; 99
 306:	31 f0       	breq	.+12     	; 0x314 <vfprintf+0x116>
 308:	83 37       	cpi	r24, 0x73	; 115
 30a:	71 f0       	breq	.+28     	; 0x328 <vfprintf+0x12a>
 30c:	83 35       	cpi	r24, 0x53	; 83
 30e:	09 f0       	breq	.+2      	; 0x312 <vfprintf+0x114>
 310:	55 c0       	rjmp	.+170    	; 0x3bc <vfprintf+0x1be>
 312:	20 c0       	rjmp	.+64     	; 0x354 <vfprintf+0x156>
 314:	f8 01       	movw	r30, r16
 316:	80 81       	ld	r24, Z
 318:	89 83       	std	Y+1, r24	; 0x01
 31a:	0e 5f       	subi	r16, 0xFE	; 254
 31c:	1f 4f       	sbci	r17, 0xFF	; 255
 31e:	88 24       	eor	r8, r8
 320:	83 94       	inc	r8
 322:	91 2c       	mov	r9, r1
 324:	53 01       	movw	r10, r6
 326:	12 c0       	rjmp	.+36     	; 0x34c <vfprintf+0x14e>
 328:	28 01       	movw	r4, r16
 32a:	f2 e0       	ldi	r31, 0x02	; 2
 32c:	4f 0e       	add	r4, r31
 32e:	51 1c       	adc	r5, r1
 330:	f8 01       	movw	r30, r16
 332:	a0 80       	ld	r10, Z
 334:	b1 80       	ldd	r11, Z+1	; 0x01
 336:	36 fe       	sbrs	r3, 6
 338:	03 c0       	rjmp	.+6      	; 0x340 <vfprintf+0x142>
 33a:	69 2d       	mov	r22, r9
 33c:	70 e0       	ldi	r23, 0x00	; 0
 33e:	02 c0       	rjmp	.+4      	; 0x344 <vfprintf+0x146>
 340:	6f ef       	ldi	r22, 0xFF	; 255
 342:	7f ef       	ldi	r23, 0xFF	; 255
 344:	c5 01       	movw	r24, r10
 346:	38 d1       	rcall	.+624    	; 0x5b8 <strnlen>
 348:	4c 01       	movw	r8, r24
 34a:	82 01       	movw	r16, r4
 34c:	f3 2d       	mov	r31, r3
 34e:	ff 77       	andi	r31, 0x7F	; 127
 350:	3f 2e       	mov	r3, r31
 352:	15 c0       	rjmp	.+42     	; 0x37e <vfprintf+0x180>
 354:	28 01       	movw	r4, r16
 356:	22 e0       	ldi	r18, 0x02	; 2
 358:	42 0e       	add	r4, r18
 35a:	51 1c       	adc	r5, r1
 35c:	f8 01       	movw	r30, r16
 35e:	a0 80       	ld	r10, Z
 360:	b1 80       	ldd	r11, Z+1	; 0x01
 362:	36 fe       	sbrs	r3, 6
 364:	03 c0       	rjmp	.+6      	; 0x36c <vfprintf+0x16e>
 366:	69 2d       	mov	r22, r9
 368:	70 e0       	ldi	r23, 0x00	; 0
 36a:	02 c0       	rjmp	.+4      	; 0x370 <vfprintf+0x172>
 36c:	6f ef       	ldi	r22, 0xFF	; 255
 36e:	7f ef       	ldi	r23, 0xFF	; 255
 370:	c5 01       	movw	r24, r10
 372:	17 d1       	rcall	.+558    	; 0x5a2 <strnlen_P>
 374:	4c 01       	movw	r8, r24
 376:	f3 2d       	mov	r31, r3
 378:	f0 68       	ori	r31, 0x80	; 128
 37a:	3f 2e       	mov	r3, r31
 37c:	82 01       	movw	r16, r4
 37e:	33 fc       	sbrc	r3, 3
 380:	19 c0       	rjmp	.+50     	; 0x3b4 <vfprintf+0x1b6>
 382:	82 2d       	mov	r24, r2
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	88 16       	cp	r8, r24
 388:	99 06       	cpc	r9, r25
 38a:	a0 f4       	brcc	.+40     	; 0x3b4 <vfprintf+0x1b6>
 38c:	b6 01       	movw	r22, r12
 38e:	80 e2       	ldi	r24, 0x20	; 32
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	1d d1       	rcall	.+570    	; 0x5ce <fputc>
 394:	2a 94       	dec	r2
 396:	f5 cf       	rjmp	.-22     	; 0x382 <vfprintf+0x184>
 398:	f5 01       	movw	r30, r10
 39a:	37 fc       	sbrc	r3, 7
 39c:	85 91       	lpm	r24, Z+
 39e:	37 fe       	sbrs	r3, 7
 3a0:	81 91       	ld	r24, Z+
 3a2:	5f 01       	movw	r10, r30
 3a4:	b6 01       	movw	r22, r12
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	12 d1       	rcall	.+548    	; 0x5ce <fputc>
 3aa:	21 10       	cpse	r2, r1
 3ac:	2a 94       	dec	r2
 3ae:	21 e0       	ldi	r18, 0x01	; 1
 3b0:	82 1a       	sub	r8, r18
 3b2:	91 08       	sbc	r9, r1
 3b4:	81 14       	cp	r8, r1
 3b6:	91 04       	cpc	r9, r1
 3b8:	79 f7       	brne	.-34     	; 0x398 <vfprintf+0x19a>
 3ba:	e1 c0       	rjmp	.+450    	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 3bc:	84 36       	cpi	r24, 0x64	; 100
 3be:	11 f0       	breq	.+4      	; 0x3c4 <vfprintf+0x1c6>
 3c0:	89 36       	cpi	r24, 0x69	; 105
 3c2:	39 f5       	brne	.+78     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3c4:	f8 01       	movw	r30, r16
 3c6:	37 fe       	sbrs	r3, 7
 3c8:	07 c0       	rjmp	.+14     	; 0x3d8 <vfprintf+0x1da>
 3ca:	60 81       	ld	r22, Z
 3cc:	71 81       	ldd	r23, Z+1	; 0x01
 3ce:	82 81       	ldd	r24, Z+2	; 0x02
 3d0:	93 81       	ldd	r25, Z+3	; 0x03
 3d2:	0c 5f       	subi	r16, 0xFC	; 252
 3d4:	1f 4f       	sbci	r17, 0xFF	; 255
 3d6:	08 c0       	rjmp	.+16     	; 0x3e8 <vfprintf+0x1ea>
 3d8:	60 81       	ld	r22, Z
 3da:	71 81       	ldd	r23, Z+1	; 0x01
 3dc:	07 2e       	mov	r0, r23
 3de:	00 0c       	add	r0, r0
 3e0:	88 0b       	sbc	r24, r24
 3e2:	99 0b       	sbc	r25, r25
 3e4:	0e 5f       	subi	r16, 0xFE	; 254
 3e6:	1f 4f       	sbci	r17, 0xFF	; 255
 3e8:	f3 2d       	mov	r31, r3
 3ea:	ff 76       	andi	r31, 0x6F	; 111
 3ec:	3f 2e       	mov	r3, r31
 3ee:	97 ff       	sbrs	r25, 7
 3f0:	09 c0       	rjmp	.+18     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f2:	90 95       	com	r25
 3f4:	80 95       	com	r24
 3f6:	70 95       	com	r23
 3f8:	61 95       	neg	r22
 3fa:	7f 4f       	sbci	r23, 0xFF	; 255
 3fc:	8f 4f       	sbci	r24, 0xFF	; 255
 3fe:	9f 4f       	sbci	r25, 0xFF	; 255
 400:	f0 68       	ori	r31, 0x80	; 128
 402:	3f 2e       	mov	r3, r31
 404:	2a e0       	ldi	r18, 0x0A	; 10
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	a3 01       	movw	r20, r6
 40a:	1d d1       	rcall	.+570    	; 0x646 <__ultoa_invert>
 40c:	88 2e       	mov	r8, r24
 40e:	86 18       	sub	r8, r6
 410:	44 c0       	rjmp	.+136    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 412:	85 37       	cpi	r24, 0x75	; 117
 414:	31 f4       	brne	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	23 2d       	mov	r18, r3
 418:	2f 7e       	andi	r18, 0xEF	; 239
 41a:	b2 2e       	mov	r11, r18
 41c:	2a e0       	ldi	r18, 0x0A	; 10
 41e:	30 e0       	ldi	r19, 0x00	; 0
 420:	25 c0       	rjmp	.+74     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 422:	93 2d       	mov	r25, r3
 424:	99 7f       	andi	r25, 0xF9	; 249
 426:	b9 2e       	mov	r11, r25
 428:	8f 36       	cpi	r24, 0x6F	; 111
 42a:	c1 f0       	breq	.+48     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 42c:	18 f4       	brcc	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42e:	88 35       	cpi	r24, 0x58	; 88
 430:	79 f0       	breq	.+30     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 432:	ae c0       	rjmp	.+348    	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 434:	80 37       	cpi	r24, 0x70	; 112
 436:	19 f0       	breq	.+6      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 438:	88 37       	cpi	r24, 0x78	; 120
 43a:	21 f0       	breq	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43c:	a9 c0       	rjmp	.+338    	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 43e:	e9 2f       	mov	r30, r25
 440:	e0 61       	ori	r30, 0x10	; 16
 442:	be 2e       	mov	r11, r30
 444:	b4 fe       	sbrs	r11, 4
 446:	0d c0       	rjmp	.+26     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 448:	fb 2d       	mov	r31, r11
 44a:	f4 60       	ori	r31, 0x04	; 4
 44c:	bf 2e       	mov	r11, r31
 44e:	09 c0       	rjmp	.+18     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 450:	34 fe       	sbrs	r3, 4
 452:	0a c0       	rjmp	.+20     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 454:	29 2f       	mov	r18, r25
 456:	26 60       	ori	r18, 0x06	; 6
 458:	b2 2e       	mov	r11, r18
 45a:	06 c0       	rjmp	.+12     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 45c:	28 e0       	ldi	r18, 0x08	; 8
 45e:	30 e0       	ldi	r19, 0x00	; 0
 460:	05 c0       	rjmp	.+10     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 462:	20 e1       	ldi	r18, 0x10	; 16
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	02 c0       	rjmp	.+4      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 468:	20 e1       	ldi	r18, 0x10	; 16
 46a:	32 e0       	ldi	r19, 0x02	; 2
 46c:	f8 01       	movw	r30, r16
 46e:	b7 fe       	sbrs	r11, 7
 470:	07 c0       	rjmp	.+14     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 472:	60 81       	ld	r22, Z
 474:	71 81       	ldd	r23, Z+1	; 0x01
 476:	82 81       	ldd	r24, Z+2	; 0x02
 478:	93 81       	ldd	r25, Z+3	; 0x03
 47a:	0c 5f       	subi	r16, 0xFC	; 252
 47c:	1f 4f       	sbci	r17, 0xFF	; 255
 47e:	06 c0       	rjmp	.+12     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 480:	60 81       	ld	r22, Z
 482:	71 81       	ldd	r23, Z+1	; 0x01
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 5f       	subi	r16, 0xFE	; 254
 48a:	1f 4f       	sbci	r17, 0xFF	; 255
 48c:	a3 01       	movw	r20, r6
 48e:	db d0       	rcall	.+438    	; 0x646 <__ultoa_invert>
 490:	88 2e       	mov	r8, r24
 492:	86 18       	sub	r8, r6
 494:	fb 2d       	mov	r31, r11
 496:	ff 77       	andi	r31, 0x7F	; 127
 498:	3f 2e       	mov	r3, r31
 49a:	36 fe       	sbrs	r3, 6
 49c:	0d c0       	rjmp	.+26     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 49e:	23 2d       	mov	r18, r3
 4a0:	2e 7f       	andi	r18, 0xFE	; 254
 4a2:	a2 2e       	mov	r10, r18
 4a4:	89 14       	cp	r8, r9
 4a6:	58 f4       	brcc	.+22     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4a8:	34 fe       	sbrs	r3, 4
 4aa:	0b c0       	rjmp	.+22     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4ac:	32 fc       	sbrc	r3, 2
 4ae:	09 c0       	rjmp	.+18     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b0:	83 2d       	mov	r24, r3
 4b2:	8e 7e       	andi	r24, 0xEE	; 238
 4b4:	a8 2e       	mov	r10, r24
 4b6:	05 c0       	rjmp	.+10     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b8:	b8 2c       	mov	r11, r8
 4ba:	a3 2c       	mov	r10, r3
 4bc:	03 c0       	rjmp	.+6      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4be:	b8 2c       	mov	r11, r8
 4c0:	01 c0       	rjmp	.+2      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4c2:	b9 2c       	mov	r11, r9
 4c4:	a4 fe       	sbrs	r10, 4
 4c6:	0f c0       	rjmp	.+30     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4c8:	fe 01       	movw	r30, r28
 4ca:	e8 0d       	add	r30, r8
 4cc:	f1 1d       	adc	r31, r1
 4ce:	80 81       	ld	r24, Z
 4d0:	80 33       	cpi	r24, 0x30	; 48
 4d2:	21 f4       	brne	.+8      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d4:	9a 2d       	mov	r25, r10
 4d6:	99 7e       	andi	r25, 0xE9	; 233
 4d8:	a9 2e       	mov	r10, r25
 4da:	09 c0       	rjmp	.+18     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4dc:	a2 fe       	sbrs	r10, 2
 4de:	06 c0       	rjmp	.+12     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4e0:	b3 94       	inc	r11
 4e2:	b3 94       	inc	r11
 4e4:	04 c0       	rjmp	.+8      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e6:	8a 2d       	mov	r24, r10
 4e8:	86 78       	andi	r24, 0x86	; 134
 4ea:	09 f0       	breq	.+2      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ec:	b3 94       	inc	r11
 4ee:	a3 fc       	sbrc	r10, 3
 4f0:	10 c0       	rjmp	.+32     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 4f2:	a0 fe       	sbrs	r10, 0
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4f6:	b2 14       	cp	r11, r2
 4f8:	80 f4       	brcc	.+32     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4fa:	28 0c       	add	r2, r8
 4fc:	92 2c       	mov	r9, r2
 4fe:	9b 18       	sub	r9, r11
 500:	0d c0       	rjmp	.+26     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 502:	b2 14       	cp	r11, r2
 504:	58 f4       	brcc	.+22     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 506:	b6 01       	movw	r22, r12
 508:	80 e2       	ldi	r24, 0x20	; 32
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	60 d0       	rcall	.+192    	; 0x5ce <fputc>
 50e:	b3 94       	inc	r11
 510:	f8 cf       	rjmp	.-16     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 512:	b2 14       	cp	r11, r2
 514:	18 f4       	brcc	.+6      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 516:	2b 18       	sub	r2, r11
 518:	02 c0       	rjmp	.+4      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 51a:	98 2c       	mov	r9, r8
 51c:	21 2c       	mov	r2, r1
 51e:	a4 fe       	sbrs	r10, 4
 520:	0f c0       	rjmp	.+30     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 522:	b6 01       	movw	r22, r12
 524:	80 e3       	ldi	r24, 0x30	; 48
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	52 d0       	rcall	.+164    	; 0x5ce <fputc>
 52a:	a2 fe       	sbrs	r10, 2
 52c:	16 c0       	rjmp	.+44     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 52e:	a1 fc       	sbrc	r10, 1
 530:	03 c0       	rjmp	.+6      	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 532:	88 e7       	ldi	r24, 0x78	; 120
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	02 c0       	rjmp	.+4      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 538:	88 e5       	ldi	r24, 0x58	; 88
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	b6 01       	movw	r22, r12
 53e:	0c c0       	rjmp	.+24     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 540:	8a 2d       	mov	r24, r10
 542:	86 78       	andi	r24, 0x86	; 134
 544:	51 f0       	breq	.+20     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 546:	a1 fe       	sbrs	r10, 1
 548:	02 c0       	rjmp	.+4      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 54a:	8b e2       	ldi	r24, 0x2B	; 43
 54c:	01 c0       	rjmp	.+2      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54e:	80 e2       	ldi	r24, 0x20	; 32
 550:	a7 fc       	sbrc	r10, 7
 552:	8d e2       	ldi	r24, 0x2D	; 45
 554:	b6 01       	movw	r22, r12
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	3a d0       	rcall	.+116    	; 0x5ce <fputc>
 55a:	89 14       	cp	r8, r9
 55c:	30 f4       	brcc	.+12     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 55e:	b6 01       	movw	r22, r12
 560:	80 e3       	ldi	r24, 0x30	; 48
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	34 d0       	rcall	.+104    	; 0x5ce <fputc>
 566:	9a 94       	dec	r9
 568:	f8 cf       	rjmp	.-16     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 56a:	8a 94       	dec	r8
 56c:	f3 01       	movw	r30, r6
 56e:	e8 0d       	add	r30, r8
 570:	f1 1d       	adc	r31, r1
 572:	80 81       	ld	r24, Z
 574:	b6 01       	movw	r22, r12
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	2a d0       	rcall	.+84     	; 0x5ce <fputc>
 57a:	81 10       	cpse	r8, r1
 57c:	f6 cf       	rjmp	.-20     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 57e:	22 20       	and	r2, r2
 580:	09 f4       	brne	.+2      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 582:	4e ce       	rjmp	.-868    	; 0x220 <vfprintf+0x22>
 584:	b6 01       	movw	r22, r12
 586:	80 e2       	ldi	r24, 0x20	; 32
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	21 d0       	rcall	.+66     	; 0x5ce <fputc>
 58c:	2a 94       	dec	r2
 58e:	f7 cf       	rjmp	.-18     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 590:	f6 01       	movw	r30, r12
 592:	86 81       	ldd	r24, Z+6	; 0x06
 594:	97 81       	ldd	r25, Z+7	; 0x07
 596:	02 c0       	rjmp	.+4      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 598:	8f ef       	ldi	r24, 0xFF	; 255
 59a:	9f ef       	ldi	r25, 0xFF	; 255
 59c:	2b 96       	adiw	r28, 0x0b	; 11
 59e:	e2 e1       	ldi	r30, 0x12	; 18
 5a0:	cc c0       	rjmp	.+408    	; 0x73a <__epilogue_restores__>

000005a2 <strnlen_P>:
 5a2:	fc 01       	movw	r30, r24
 5a4:	05 90       	lpm	r0, Z+
 5a6:	61 50       	subi	r22, 0x01	; 1
 5a8:	70 40       	sbci	r23, 0x00	; 0
 5aa:	01 10       	cpse	r0, r1
 5ac:	d8 f7       	brcc	.-10     	; 0x5a4 <strnlen_P+0x2>
 5ae:	80 95       	com	r24
 5b0:	90 95       	com	r25
 5b2:	8e 0f       	add	r24, r30
 5b4:	9f 1f       	adc	r25, r31
 5b6:	08 95       	ret

000005b8 <strnlen>:
 5b8:	fc 01       	movw	r30, r24
 5ba:	61 50       	subi	r22, 0x01	; 1
 5bc:	70 40       	sbci	r23, 0x00	; 0
 5be:	01 90       	ld	r0, Z+
 5c0:	01 10       	cpse	r0, r1
 5c2:	d8 f7       	brcc	.-10     	; 0x5ba <strnlen+0x2>
 5c4:	80 95       	com	r24
 5c6:	90 95       	com	r25
 5c8:	8e 0f       	add	r24, r30
 5ca:	9f 1f       	adc	r25, r31
 5cc:	08 95       	ret

000005ce <fputc>:
 5ce:	0f 93       	push	r16
 5d0:	1f 93       	push	r17
 5d2:	cf 93       	push	r28
 5d4:	df 93       	push	r29
 5d6:	fb 01       	movw	r30, r22
 5d8:	23 81       	ldd	r18, Z+3	; 0x03
 5da:	21 fd       	sbrc	r18, 1
 5dc:	03 c0       	rjmp	.+6      	; 0x5e4 <fputc+0x16>
 5de:	8f ef       	ldi	r24, 0xFF	; 255
 5e0:	9f ef       	ldi	r25, 0xFF	; 255
 5e2:	2c c0       	rjmp	.+88     	; 0x63c <fputc+0x6e>
 5e4:	22 ff       	sbrs	r18, 2
 5e6:	16 c0       	rjmp	.+44     	; 0x614 <fputc+0x46>
 5e8:	46 81       	ldd	r20, Z+6	; 0x06
 5ea:	57 81       	ldd	r21, Z+7	; 0x07
 5ec:	24 81       	ldd	r18, Z+4	; 0x04
 5ee:	35 81       	ldd	r19, Z+5	; 0x05
 5f0:	42 17       	cp	r20, r18
 5f2:	53 07       	cpc	r21, r19
 5f4:	44 f4       	brge	.+16     	; 0x606 <fputc+0x38>
 5f6:	a0 81       	ld	r26, Z
 5f8:	b1 81       	ldd	r27, Z+1	; 0x01
 5fa:	9d 01       	movw	r18, r26
 5fc:	2f 5f       	subi	r18, 0xFF	; 255
 5fe:	3f 4f       	sbci	r19, 0xFF	; 255
 600:	31 83       	std	Z+1, r19	; 0x01
 602:	20 83       	st	Z, r18
 604:	8c 93       	st	X, r24
 606:	26 81       	ldd	r18, Z+6	; 0x06
 608:	37 81       	ldd	r19, Z+7	; 0x07
 60a:	2f 5f       	subi	r18, 0xFF	; 255
 60c:	3f 4f       	sbci	r19, 0xFF	; 255
 60e:	37 83       	std	Z+7, r19	; 0x07
 610:	26 83       	std	Z+6, r18	; 0x06
 612:	14 c0       	rjmp	.+40     	; 0x63c <fputc+0x6e>
 614:	8b 01       	movw	r16, r22
 616:	ec 01       	movw	r28, r24
 618:	fb 01       	movw	r30, r22
 61a:	00 84       	ldd	r0, Z+8	; 0x08
 61c:	f1 85       	ldd	r31, Z+9	; 0x09
 61e:	e0 2d       	mov	r30, r0
 620:	09 95       	icall
 622:	89 2b       	or	r24, r25
 624:	e1 f6       	brne	.-72     	; 0x5de <fputc+0x10>
 626:	d8 01       	movw	r26, r16
 628:	16 96       	adiw	r26, 0x06	; 6
 62a:	8d 91       	ld	r24, X+
 62c:	9c 91       	ld	r25, X
 62e:	17 97       	sbiw	r26, 0x07	; 7
 630:	01 96       	adiw	r24, 0x01	; 1
 632:	17 96       	adiw	r26, 0x07	; 7
 634:	9c 93       	st	X, r25
 636:	8e 93       	st	-X, r24
 638:	16 97       	sbiw	r26, 0x06	; 6
 63a:	ce 01       	movw	r24, r28
 63c:	df 91       	pop	r29
 63e:	cf 91       	pop	r28
 640:	1f 91       	pop	r17
 642:	0f 91       	pop	r16
 644:	08 95       	ret

00000646 <__ultoa_invert>:
 646:	fa 01       	movw	r30, r20
 648:	aa 27       	eor	r26, r26
 64a:	28 30       	cpi	r18, 0x08	; 8
 64c:	51 f1       	breq	.+84     	; 0x6a2 <__ultoa_invert+0x5c>
 64e:	20 31       	cpi	r18, 0x10	; 16
 650:	81 f1       	breq	.+96     	; 0x6b2 <__ultoa_invert+0x6c>
 652:	e8 94       	clt
 654:	6f 93       	push	r22
 656:	6e 7f       	andi	r22, 0xFE	; 254
 658:	6e 5f       	subi	r22, 0xFE	; 254
 65a:	7f 4f       	sbci	r23, 0xFF	; 255
 65c:	8f 4f       	sbci	r24, 0xFF	; 255
 65e:	9f 4f       	sbci	r25, 0xFF	; 255
 660:	af 4f       	sbci	r26, 0xFF	; 255
 662:	b1 e0       	ldi	r27, 0x01	; 1
 664:	3e d0       	rcall	.+124    	; 0x6e2 <__ultoa_invert+0x9c>
 666:	b4 e0       	ldi	r27, 0x04	; 4
 668:	3c d0       	rcall	.+120    	; 0x6e2 <__ultoa_invert+0x9c>
 66a:	67 0f       	add	r22, r23
 66c:	78 1f       	adc	r23, r24
 66e:	89 1f       	adc	r24, r25
 670:	9a 1f       	adc	r25, r26
 672:	a1 1d       	adc	r26, r1
 674:	68 0f       	add	r22, r24
 676:	79 1f       	adc	r23, r25
 678:	8a 1f       	adc	r24, r26
 67a:	91 1d       	adc	r25, r1
 67c:	a1 1d       	adc	r26, r1
 67e:	6a 0f       	add	r22, r26
 680:	71 1d       	adc	r23, r1
 682:	81 1d       	adc	r24, r1
 684:	91 1d       	adc	r25, r1
 686:	a1 1d       	adc	r26, r1
 688:	20 d0       	rcall	.+64     	; 0x6ca <__ultoa_invert+0x84>
 68a:	09 f4       	brne	.+2      	; 0x68e <__ultoa_invert+0x48>
 68c:	68 94       	set
 68e:	3f 91       	pop	r19
 690:	2a e0       	ldi	r18, 0x0A	; 10
 692:	26 9f       	mul	r18, r22
 694:	11 24       	eor	r1, r1
 696:	30 19       	sub	r19, r0
 698:	30 5d       	subi	r19, 0xD0	; 208
 69a:	31 93       	st	Z+, r19
 69c:	de f6       	brtc	.-74     	; 0x654 <__ultoa_invert+0xe>
 69e:	cf 01       	movw	r24, r30
 6a0:	08 95       	ret
 6a2:	46 2f       	mov	r20, r22
 6a4:	47 70       	andi	r20, 0x07	; 7
 6a6:	40 5d       	subi	r20, 0xD0	; 208
 6a8:	41 93       	st	Z+, r20
 6aa:	b3 e0       	ldi	r27, 0x03	; 3
 6ac:	0f d0       	rcall	.+30     	; 0x6cc <__ultoa_invert+0x86>
 6ae:	c9 f7       	brne	.-14     	; 0x6a2 <__ultoa_invert+0x5c>
 6b0:	f6 cf       	rjmp	.-20     	; 0x69e <__ultoa_invert+0x58>
 6b2:	46 2f       	mov	r20, r22
 6b4:	4f 70       	andi	r20, 0x0F	; 15
 6b6:	40 5d       	subi	r20, 0xD0	; 208
 6b8:	4a 33       	cpi	r20, 0x3A	; 58
 6ba:	18 f0       	brcs	.+6      	; 0x6c2 <__ultoa_invert+0x7c>
 6bc:	49 5d       	subi	r20, 0xD9	; 217
 6be:	31 fd       	sbrc	r19, 1
 6c0:	40 52       	subi	r20, 0x20	; 32
 6c2:	41 93       	st	Z+, r20
 6c4:	02 d0       	rcall	.+4      	; 0x6ca <__ultoa_invert+0x84>
 6c6:	a9 f7       	brne	.-22     	; 0x6b2 <__ultoa_invert+0x6c>
 6c8:	ea cf       	rjmp	.-44     	; 0x69e <__ultoa_invert+0x58>
 6ca:	b4 e0       	ldi	r27, 0x04	; 4
 6cc:	a6 95       	lsr	r26
 6ce:	97 95       	ror	r25
 6d0:	87 95       	ror	r24
 6d2:	77 95       	ror	r23
 6d4:	67 95       	ror	r22
 6d6:	ba 95       	dec	r27
 6d8:	c9 f7       	brne	.-14     	; 0x6cc <__ultoa_invert+0x86>
 6da:	00 97       	sbiw	r24, 0x00	; 0
 6dc:	61 05       	cpc	r22, r1
 6de:	71 05       	cpc	r23, r1
 6e0:	08 95       	ret
 6e2:	9b 01       	movw	r18, r22
 6e4:	ac 01       	movw	r20, r24
 6e6:	0a 2e       	mov	r0, r26
 6e8:	06 94       	lsr	r0
 6ea:	57 95       	ror	r21
 6ec:	47 95       	ror	r20
 6ee:	37 95       	ror	r19
 6f0:	27 95       	ror	r18
 6f2:	ba 95       	dec	r27
 6f4:	c9 f7       	brne	.-14     	; 0x6e8 <__ultoa_invert+0xa2>
 6f6:	62 0f       	add	r22, r18
 6f8:	73 1f       	adc	r23, r19
 6fa:	84 1f       	adc	r24, r20
 6fc:	95 1f       	adc	r25, r21
 6fe:	a0 1d       	adc	r26, r0
 700:	08 95       	ret

00000702 <__prologue_saves__>:
 702:	2f 92       	push	r2
 704:	3f 92       	push	r3
 706:	4f 92       	push	r4
 708:	5f 92       	push	r5
 70a:	6f 92       	push	r6
 70c:	7f 92       	push	r7
 70e:	8f 92       	push	r8
 710:	9f 92       	push	r9
 712:	af 92       	push	r10
 714:	bf 92       	push	r11
 716:	cf 92       	push	r12
 718:	df 92       	push	r13
 71a:	ef 92       	push	r14
 71c:	ff 92       	push	r15
 71e:	0f 93       	push	r16
 720:	1f 93       	push	r17
 722:	cf 93       	push	r28
 724:	df 93       	push	r29
 726:	cd b7       	in	r28, 0x3d	; 61
 728:	de b7       	in	r29, 0x3e	; 62
 72a:	ca 1b       	sub	r28, r26
 72c:	db 0b       	sbc	r29, r27
 72e:	0f b6       	in	r0, 0x3f	; 63
 730:	f8 94       	cli
 732:	de bf       	out	0x3e, r29	; 62
 734:	0f be       	out	0x3f, r0	; 63
 736:	cd bf       	out	0x3d, r28	; 61
 738:	09 94       	ijmp

0000073a <__epilogue_restores__>:
 73a:	2a 88       	ldd	r2, Y+18	; 0x12
 73c:	39 88       	ldd	r3, Y+17	; 0x11
 73e:	48 88       	ldd	r4, Y+16	; 0x10
 740:	5f 84       	ldd	r5, Y+15	; 0x0f
 742:	6e 84       	ldd	r6, Y+14	; 0x0e
 744:	7d 84       	ldd	r7, Y+13	; 0x0d
 746:	8c 84       	ldd	r8, Y+12	; 0x0c
 748:	9b 84       	ldd	r9, Y+11	; 0x0b
 74a:	aa 84       	ldd	r10, Y+10	; 0x0a
 74c:	b9 84       	ldd	r11, Y+9	; 0x09
 74e:	c8 84       	ldd	r12, Y+8	; 0x08
 750:	df 80       	ldd	r13, Y+7	; 0x07
 752:	ee 80       	ldd	r14, Y+6	; 0x06
 754:	fd 80       	ldd	r15, Y+5	; 0x05
 756:	0c 81       	ldd	r16, Y+4	; 0x04
 758:	1b 81       	ldd	r17, Y+3	; 0x03
 75a:	aa 81       	ldd	r26, Y+2	; 0x02
 75c:	b9 81       	ldd	r27, Y+1	; 0x01
 75e:	ce 0f       	add	r28, r30
 760:	d1 1d       	adc	r29, r1
 762:	0f b6       	in	r0, 0x3f	; 63
 764:	f8 94       	cli
 766:	de bf       	out	0x3e, r29	; 62
 768:	0f be       	out	0x3f, r0	; 63
 76a:	cd bf       	out	0x3d, r28	; 61
 76c:	ed 01       	movw	r28, r26
 76e:	08 95       	ret

00000770 <_exit>:
 770:	f8 94       	cli

00000772 <__stop_program>:
 772:	ff cf       	rjmp	.-2      	; 0x772 <__stop_program>
