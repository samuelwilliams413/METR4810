
GccBoardProject1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000000f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000009c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000000f0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000120  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b58  00000000  00000000  000001a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a61  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000881  00000000  00000000  00001759  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  00001fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00011153  00000000  00000000  00002024  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00013177  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000047a9  00000000  00000000  00013197  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	3d c0       	rjmp	.+122    	; 0x7c <__ctors_end>
   2:	00 00       	nop
   4:	43 c0       	rjmp	.+134    	; 0x8c <__bad_interrupt>
   6:	00 00       	nop
   8:	41 c0       	rjmp	.+130    	; 0x8c <__bad_interrupt>
   a:	00 00       	nop
   c:	3f c0       	rjmp	.+126    	; 0x8c <__bad_interrupt>
   e:	00 00       	nop
  10:	3d c0       	rjmp	.+122    	; 0x8c <__bad_interrupt>
  12:	00 00       	nop
  14:	3b c0       	rjmp	.+118    	; 0x8c <__bad_interrupt>
  16:	00 00       	nop
  18:	39 c0       	rjmp	.+114    	; 0x8c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	37 c0       	rjmp	.+110    	; 0x8c <__bad_interrupt>
  1e:	00 00       	nop
  20:	35 c0       	rjmp	.+106    	; 0x8c <__bad_interrupt>
  22:	00 00       	nop
  24:	33 c0       	rjmp	.+102    	; 0x8c <__bad_interrupt>
  26:	00 00       	nop
  28:	31 c0       	rjmp	.+98     	; 0x8c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2f c0       	rjmp	.+94     	; 0x8c <__bad_interrupt>
  2e:	00 00       	nop
  30:	2d c0       	rjmp	.+90     	; 0x8c <__bad_interrupt>
  32:	00 00       	nop
  34:	2b c0       	rjmp	.+86     	; 0x8c <__bad_interrupt>
  36:	00 00       	nop
  38:	29 c0       	rjmp	.+82     	; 0x8c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	27 c0       	rjmp	.+78     	; 0x8c <__bad_interrupt>
  3e:	00 00       	nop
  40:	25 c0       	rjmp	.+74     	; 0x8c <__bad_interrupt>
  42:	00 00       	nop
  44:	23 c0       	rjmp	.+70     	; 0x8c <__bad_interrupt>
  46:	00 00       	nop
  48:	21 c0       	rjmp	.+66     	; 0x8c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1f c0       	rjmp	.+62     	; 0x8c <__bad_interrupt>
  4e:	00 00       	nop
  50:	1d c0       	rjmp	.+58     	; 0x8c <__bad_interrupt>
  52:	00 00       	nop
  54:	1b c0       	rjmp	.+54     	; 0x8c <__bad_interrupt>
  56:	00 00       	nop
  58:	19 c0       	rjmp	.+50     	; 0x8c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	17 c0       	rjmp	.+46     	; 0x8c <__bad_interrupt>
  5e:	00 00       	nop
  60:	15 c0       	rjmp	.+42     	; 0x8c <__bad_interrupt>
  62:	00 00       	nop
  64:	13 c0       	rjmp	.+38     	; 0x8c <__bad_interrupt>
  66:	00 00       	nop
  68:	11 c0       	rjmp	.+34     	; 0x8c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	0f c0       	rjmp	.+30     	; 0x8c <__bad_interrupt>
  6e:	00 00       	nop
  70:	0d c0       	rjmp	.+26     	; 0x8c <__bad_interrupt>
  72:	00 00       	nop
  74:	0b c0       	rjmp	.+22     	; 0x8c <__bad_interrupt>
  76:	00 00       	nop
  78:	09 c0       	rjmp	.+18     	; 0x8c <__bad_interrupt>
	...

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61
  88:	03 d0       	rcall	.+6      	; 0x90 <main>
  8a:	06 c0       	rjmp	.+12     	; 0x98 <_exit>

0000008c <__bad_interrupt>:
  8c:	b9 cf       	rjmp	.-142    	; 0x0 <__vectors>

0000008e <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  8e:	08 95       	ret

00000090 <main>:
 * Support and FAQ: visit <a href="http://www.atmel.com/design-support/">Atmel Support</a>
 */
#include <asf.h>

int main (void)
{
  90:	fe df       	rcall	.-4      	; 0x8e <board_init>
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	08 95       	ret

00000098 <_exit>:
  98:	f8 94       	cli

0000009a <__stop_program>:
  9a:	ff cf       	rjmp	.-2      	; 0x9a <__stop_program>
