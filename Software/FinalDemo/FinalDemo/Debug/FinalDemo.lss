
FinalDemo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001c6  00800100  00000f14  00000fa8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  008002c6  008002c6  0000116e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000116e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  0000120c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001396  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005bf  00000000  00000000  00002722  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000191f  00000000  00000000  00002ce1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  00004600  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000102ba  00000000  00000000  000048c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009d0  00000000  00000000  00014b82  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00015552  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003e5f  00000000  00000000  0001568a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	57 c0       	rjmp	.+174    	; 0xb0 <__ctors_end>
   2:	00 00       	nop
   4:	70 c0       	rjmp	.+224    	; 0xe6 <__bad_interrupt>
   6:	00 00       	nop
   8:	6e c0       	rjmp	.+220    	; 0xe6 <__bad_interrupt>
   a:	00 00       	nop
   c:	6c c0       	rjmp	.+216    	; 0xe6 <__bad_interrupt>
   e:	00 00       	nop
  10:	6a c0       	rjmp	.+212    	; 0xe6 <__bad_interrupt>
  12:	00 00       	nop
  14:	68 c0       	rjmp	.+208    	; 0xe6 <__bad_interrupt>
  16:	00 00       	nop
  18:	66 c0       	rjmp	.+204    	; 0xe6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	64 c0       	rjmp	.+200    	; 0xe6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	62 c0       	rjmp	.+196    	; 0xe6 <__bad_interrupt>
  22:	00 00       	nop
  24:	5d c2       	rjmp	.+1210   	; 0x4e0 <__vector_9>
  26:	00 00       	nop
  28:	5e c0       	rjmp	.+188    	; 0xe6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5c c0       	rjmp	.+184    	; 0xe6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	5a c0       	rjmp	.+180    	; 0xe6 <__bad_interrupt>
  32:	00 00       	nop
  34:	58 c0       	rjmp	.+176    	; 0xe6 <__bad_interrupt>
  36:	00 00       	nop
  38:	56 c0       	rjmp	.+172    	; 0xe6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	54 c0       	rjmp	.+168    	; 0xe6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	52 c0       	rjmp	.+164    	; 0xe6 <__bad_interrupt>
  42:	00 00       	nop
  44:	50 c0       	rjmp	.+160    	; 0xe6 <__bad_interrupt>
  46:	00 00       	nop
  48:	4e c0       	rjmp	.+156    	; 0xe6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4c c0       	rjmp	.+152    	; 0xe6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	4a c0       	rjmp	.+148    	; 0xe6 <__bad_interrupt>
  52:	00 00       	nop
  54:	48 c0       	rjmp	.+144    	; 0xe6 <__bad_interrupt>
  56:	00 00       	nop
  58:	46 c0       	rjmp	.+140    	; 0xe6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	44 c0       	rjmp	.+136    	; 0xe6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	42 c0       	rjmp	.+132    	; 0xe6 <__bad_interrupt>
  62:	00 00       	nop
  64:	40 c0       	rjmp	.+128    	; 0xe6 <__bad_interrupt>
  66:	00 00       	nop
  68:	3e c0       	rjmp	.+124    	; 0xe6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3c c0       	rjmp	.+120    	; 0xe6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	3a c0       	rjmp	.+116    	; 0xe6 <__bad_interrupt>
  72:	00 00       	nop
  74:	38 c0       	rjmp	.+112    	; 0xe6 <__bad_interrupt>
  76:	00 00       	nop
  78:	36 c0       	rjmp	.+108    	; 0xe6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	8a 03       	fmulsu	r16, r18
  7e:	7d 04       	cpc	r7, r13
  80:	7d 04       	cpc	r7, r13
  82:	f5 03       	fmuls	r23, r21
  84:	d9 03       	fmulsu	r21, r17
  86:	7d 04       	cpc	r7, r13
  88:	7d 04       	cpc	r7, r13
  8a:	7d 04       	cpc	r7, r13
  8c:	10 04       	cpc	r1, r0
  8e:	3c 04       	cpc	r3, r12
  90:	68 04       	cpc	r6, r8
  92:	52 04       	cpc	r5, r2
  94:	26 04       	cpc	r2, r6
  96:	7d 04       	cpc	r7, r13
  98:	7d 04       	cpc	r7, r13
  9a:	7d 04       	cpc	r7, r13
  9c:	72 03       	mulsu	r23, r18
  9e:	7d 04       	cpc	r7, r13
  a0:	be 03       	fmulsu	r19, r22
  a2:	7d 04       	cpc	r7, r13
  a4:	7d 04       	cpc	r7, r13
  a6:	7d 04       	cpc	r7, r13
  a8:	a2 03       	fmuls	r18, r18
  aa:	46 03       	mulsu	r20, r22
  ac:	7d 04       	cpc	r7, r13
  ae:	5c 03       	fmul	r21, r20

000000b0 <__ctors_end>:
  b0:	11 24       	eor	r1, r1
  b2:	1f be       	out	0x3f, r1	; 63
  b4:	cf ef       	ldi	r28, 0xFF	; 255
  b6:	d8 e0       	ldi	r29, 0x08	; 8
  b8:	de bf       	out	0x3e, r29	; 62
  ba:	cd bf       	out	0x3d, r28	; 61

000000bc <__do_copy_data>:
  bc:	12 e0       	ldi	r17, 0x02	; 2
  be:	a0 e0       	ldi	r26, 0x00	; 0
  c0:	b1 e0       	ldi	r27, 0x01	; 1
  c2:	e4 e1       	ldi	r30, 0x14	; 20
  c4:	ff e0       	ldi	r31, 0x0F	; 15
  c6:	02 c0       	rjmp	.+4      	; 0xcc <__do_copy_data+0x10>
  c8:	05 90       	lpm	r0, Z+
  ca:	0d 92       	st	X+, r0
  cc:	a6 3c       	cpi	r26, 0xC6	; 198
  ce:	b1 07       	cpc	r27, r17
  d0:	d9 f7       	brne	.-10     	; 0xc8 <__do_copy_data+0xc>

000000d2 <__do_clear_bss>:
  d2:	23 e0       	ldi	r18, 0x03	; 3
  d4:	a6 ec       	ldi	r26, 0xC6	; 198
  d6:	b2 e0       	ldi	r27, 0x02	; 2
  d8:	01 c0       	rjmp	.+2      	; 0xdc <.do_clear_bss_start>

000000da <.do_clear_bss_loop>:
  da:	1d 92       	st	X+, r1

000000dc <.do_clear_bss_start>:
  dc:	ae 30       	cpi	r26, 0x0E	; 14
  de:	b2 07       	cpc	r27, r18
  e0:	e1 f7       	brne	.-8      	; 0xda <.do_clear_bss_loop>
  e2:	6f d2       	rcall	.+1246   	; 0x5c2 <main>
  e4:	15 c7       	rjmp	.+3626   	; 0xf10 <_exit>

000000e6 <__bad_interrupt>:
  e6:	8c cf       	rjmp	.-232    	; 0x0 <__vectors>

000000e8 <uart_init>:
	if((data > 32) && (data < 126)) {
		send_str(test_string);
		uart_putchar(data);
		send_str(test_string2);
	}
}
  e8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  ec:	83 e3       	ldi	r24, 0x33	; 51
  ee:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  f2:	a1 ec       	ldi	r26, 0xC1	; 193
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	8c 93       	st	X, r24
  fa:	e2 ec       	ldi	r30, 0xC2	; 194
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	8e e0       	ldi	r24, 0x0E	; 14
 100:	80 83       	st	Z, r24
 102:	88 e9       	ldi	r24, 0x98	; 152
 104:	8c 93       	st	X, r24
 106:	86 e0       	ldi	r24, 0x06	; 6
 108:	80 83       	st	Z, r24
 10a:	08 95       	ret

0000010c <send_str>:
 10c:	cf 93       	push	r28
 10e:	df 93       	push	r29
 110:	dc 01       	movw	r26, r24
 112:	9c 91       	ld	r25, X
 114:	99 23       	and	r25, r25
 116:	69 f0       	breq	.+26     	; 0x132 <send_str+0x26>
 118:	11 96       	adiw	r26, 0x01	; 1
 11a:	e0 ec       	ldi	r30, 0xC0	; 192
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	c6 ec       	ldi	r28, 0xC6	; 198
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	29 2f       	mov	r18, r25
 124:	90 81       	ld	r25, Z
 126:	95 ff       	sbrs	r25, 5
 128:	fd cf       	rjmp	.-6      	; 0x124 <send_str+0x18>
 12a:	28 83       	st	Y, r18
 12c:	9d 91       	ld	r25, X+
 12e:	91 11       	cpse	r25, r1
 130:	f8 cf       	rjmp	.-16     	; 0x122 <send_str+0x16>
 132:	e0 ec       	ldi	r30, 0xC0	; 192
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	85 ff       	sbrs	r24, 5
 13a:	fd cf       	rjmp	.-6      	; 0x136 <send_str+0x2a>
 13c:	8d e0       	ldi	r24, 0x0D	; 13
 13e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	08 95       	ret

00000148 <get_char>:
 *
 * \retval Next data byte in receive buffer
 */
static inline uint8_t uart_getchar(void)
{
		while(!(UCSR0A & (1<<RXC0)));
 148:	e0 ec       	ldi	r30, 0xC0	; 192
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	88 23       	and	r24, r24
 150:	ec f7       	brge	.-6      	; 0x14c <get_char+0x4>
		return UDR0;
 152:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
extern uint8_t get_char(void)
{
	uint8_t data = '\0';
	data = uart_getchar();
	return data;
 156:	08 95       	ret

00000158 <setPD>:
static int PB3_sta = 0;
static int PB4_sta = 0;

void setPD(int _PD2_state, int _PD3_state){

	if (_PD2_state == 0){
 158:	89 2b       	or	r24, r25
 15a:	39 f4       	brne	.+14     	; 0x16a <setPD+0x12>
		if (_PD3_state == 0) {
 15c:	67 2b       	or	r22, r23
 15e:	11 f4       	brne	.+4      	; 0x164 <setPD+0xc>
			PORTD = 0b0000;
 160:	1b b8       	out	0x0b, r1	; 11
 162:	08 95       	ret
		}
		else {
			PORTD = 0b1000;
 164:	88 e0       	ldi	r24, 0x08	; 8
 166:	8b b9       	out	0x0b, r24	; 11
 168:	08 95       	ret
		}
	}

	else {
		if (_PD3_state == 0) {
 16a:	67 2b       	or	r22, r23
 16c:	19 f4       	brne	.+6      	; 0x174 <setPD+0x1c>
			PORTD = 0b0100;
 16e:	84 e0       	ldi	r24, 0x04	; 4
 170:	8b b9       	out	0x0b, r24	; 11
 172:	08 95       	ret
		}
		else {
			PORTD = 0b1100;
 174:	8c e0       	ldi	r24, 0x0C	; 12
 176:	8b b9       	out	0x0b, r24	; 11
 178:	08 95       	ret

0000017a <setPB>:
}


void setPB(int _PB3_state, int _PB4_state){

	if (_PB3_state == 0){
 17a:	89 2b       	or	r24, r25
 17c:	39 f4       	brne	.+14     	; 0x18c <setPB+0x12>
		if (_PB4_state == 0) {
 17e:	67 2b       	or	r22, r23
 180:	11 f4       	brne	.+4      	; 0x186 <setPB+0xc>
			PORTB = 0b0000;
 182:	15 b8       	out	0x05, r1	; 5
 184:	08 95       	ret
		}
		else {
			PORTB = 0b10000;
 186:	80 e1       	ldi	r24, 0x10	; 16
 188:	85 b9       	out	0x05, r24	; 5
 18a:	08 95       	ret
		}
	}

	else {
		if (_PB4_state == 0) {
 18c:	67 2b       	or	r22, r23
 18e:	19 f4       	brne	.+6      	; 0x196 <setPB+0x1c>
			PORTB = 0b01000;
 190:	88 e0       	ldi	r24, 0x08	; 8
 192:	85 b9       	out	0x05, r24	; 5
 194:	08 95       	ret
		}
		else {
			PORTB = 0b11000;
 196:	88 e1       	ldi	r24, 0x18	; 24
 198:	85 b9       	out	0x05, r24	; 5
 19a:	08 95       	ret

0000019c <motorRfwd>:
{
	
	//OCR0B = 255-pwm;
	
	//PORTD |=  (1<<PORTD2);
	PB3_sta = 0;
 19c:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <PB3_sta+0x1>
 1a0:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <PB3_sta>
	setPB(PB3_sta, PB4_sta);
 1a4:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <__data_end>
 1a8:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <__data_end+0x1>
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	e4 df       	rcall	.-56     	; 0x17a <setPB>
	PD2_sta = 1;
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	90 93 cd 02 	sts	0x02CD, r25	; 0x8002cd <PD2_sta+0x1>
 1ba:	80 93 cc 02 	sts	0x02CC, r24	; 0x8002cc <PD2_sta>
	setPD(PD2_sta, PD3_sta);
 1be:	60 91 ca 02 	lds	r22, 0x02CA	; 0x8002ca <PD3_sta>
 1c2:	70 91 cb 02 	lds	r23, 0x02CB	; 0x8002cb <PD3_sta+0x1>
 1c6:	c8 cf       	rjmp	.-112    	; 0x158 <setPD>
 1c8:	08 95       	ret

000001ca <motorLfwd>:
void motorLfwd(uint16_t pwm)
{

	//OCR0A = 255-pwm;
	//PORTD |= (1<<PORTD3);
	PB4_sta = 0;
 1ca:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <__data_end+0x1>
 1ce:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <__data_end>
	setPB(PB3_sta, PB4_sta);
 1d2:	60 e0       	ldi	r22, 0x00	; 0
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <PB3_sta>
 1da:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <PB3_sta+0x1>
 1de:	cd df       	rcall	.-102    	; 0x17a <setPB>
	PD3_sta = 1;
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	90 93 cb 02 	sts	0x02CB, r25	; 0x8002cb <PD3_sta+0x1>
 1e8:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <PD3_sta>
	setPD(PD2_sta, PD3_sta);
 1ec:	61 e0       	ldi	r22, 0x01	; 1
 1ee:	70 e0       	ldi	r23, 0x00	; 0
 1f0:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <PD2_sta>
 1f4:	90 91 cd 02 	lds	r25, 0x02CD	; 0x8002cd <PD2_sta+0x1>
 1f8:	af cf       	rjmp	.-162    	; 0x158 <setPD>
 1fa:	08 95       	ret

000001fc <motorRbwd>:
{
	
	//OCR0B = pwm;
	
	//PORTD &=  !(1<<PORTD2);
	PB3_sta = 1;
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	90 93 c9 02 	sts	0x02C9, r25	; 0x8002c9 <PB3_sta+0x1>
 204:	80 93 c8 02 	sts	0x02C8, r24	; 0x8002c8 <PB3_sta>
	setPB(PB3_sta, PB4_sta);
 208:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <__data_end>
 20c:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <__data_end+0x1>
 210:	b4 df       	rcall	.-152    	; 0x17a <setPB>
	PD2_sta = 0;
 212:	10 92 cd 02 	sts	0x02CD, r1	; 0x8002cd <PD2_sta+0x1>
 216:	10 92 cc 02 	sts	0x02CC, r1	; 0x8002cc <PD2_sta>
	setPD(PD2_sta, PD3_sta);
 21a:	60 91 ca 02 	lds	r22, 0x02CA	; 0x8002ca <PD3_sta>
 21e:	70 91 cb 02 	lds	r23, 0x02CB	; 0x8002cb <PD3_sta+0x1>
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	98 cf       	rjmp	.-208    	; 0x158 <setPD>
 228:	08 95       	ret

0000022a <motorLbwd>:
{

	//OCR0A = pwm;

	//PORTD &= !(1<<PORTD3);
	PB4_sta = 1;
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	90 93 c7 02 	sts	0x02C7, r25	; 0x8002c7 <__data_end+0x1>
 232:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <__data_end>
	setPB(PB3_sta, PB4_sta);
 236:	61 e0       	ldi	r22, 0x01	; 1
 238:	70 e0       	ldi	r23, 0x00	; 0
 23a:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <PB3_sta>
 23e:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <PB3_sta+0x1>
 242:	9b df       	rcall	.-202    	; 0x17a <setPB>
	PD3_sta = 0;
 244:	10 92 cb 02 	sts	0x02CB, r1	; 0x8002cb <PD3_sta+0x1>
 248:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <PD3_sta>
	setPD(PD2_sta, PD3_sta);
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	70 e0       	ldi	r23, 0x00	; 0
 250:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <PD2_sta>
 254:	90 91 cd 02 	lds	r25, 0x02CD	; 0x8002cd <PD2_sta+0x1>
 258:	7f cf       	rjmp	.-258    	; 0x158 <setPD>
 25a:	08 95       	ret

0000025c <motorR_stop>:

void motorR_stop(void){
	
	//OCR0B = 0;
	//PORTD &= !(1<<PORTD2);
	PB3_sta = 0;
 25c:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <PB3_sta+0x1>
 260:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <PB3_sta>
	setPB(PB3_sta, PB4_sta);
 264:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <__data_end>
 268:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <__data_end+0x1>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	84 df       	rcall	.-248    	; 0x17a <setPB>
	PD2_sta = 0;
 272:	10 92 cd 02 	sts	0x02CD, r1	; 0x8002cd <PD2_sta+0x1>
 276:	10 92 cc 02 	sts	0x02CC, r1	; 0x8002cc <PD2_sta>
	setPD(PD2_sta, PD3_sta);
 27a:	60 91 ca 02 	lds	r22, 0x02CA	; 0x8002ca <PD3_sta>
 27e:	70 91 cb 02 	lds	r23, 0x02CB	; 0x8002cb <PD3_sta+0x1>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	68 cf       	rjmp	.-304    	; 0x158 <setPD>
 288:	08 95       	ret

0000028a <motorL_stop>:

void motorL_stop(void){
	
	//OCR0A = 0;
	
	PB4_sta = 0;
 28a:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <__data_end+0x1>
 28e:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <__data_end>
	setPB(PB3_sta, PB4_sta);//PORTD &= !(1<<PORTD3);
 292:	60 e0       	ldi	r22, 0x00	; 0
 294:	70 e0       	ldi	r23, 0x00	; 0
 296:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <PB3_sta>
 29a:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <PB3_sta+0x1>
 29e:	6d df       	rcall	.-294    	; 0x17a <setPB>
	PD3_sta = 0;
 2a0:	10 92 cb 02 	sts	0x02CB, r1	; 0x8002cb <PD3_sta+0x1>
 2a4:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <PD3_sta>
	setPD(PD2_sta, PD3_sta);
 2a8:	60 e0       	ldi	r22, 0x00	; 0
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <PD2_sta>
 2b0:	90 91 cd 02 	lds	r25, 0x02CD	; 0x8002cd <PD2_sta+0x1>
 2b4:	51 cf       	rjmp	.-350    	; 0x158 <setPD>
 2b6:	08 95       	ret

000002b8 <motor_init>:
	// initialize all PWMs to 0% duty cycle (braking)
	//OCR0A =  0;
	//OCR0B  = 0;
	// set PWM pins as digital outputs (the PWM signals will not
	// appear on the lines if they are digital inputs)
	DDRB |= (1 << PORTB3) | (1 << PORTB4);
 2b8:	84 b1       	in	r24, 0x04	; 4
 2ba:	88 61       	ori	r24, 0x18	; 24
 2bc:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1 << PORTD2) | (1 << PORTD3);
 2be:	8a b1       	in	r24, 0x0a	; 10
 2c0:	8c 60       	ori	r24, 0x0C	; 12
 2c2:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b11111111;
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b11111111;
 2c8:	8a b9       	out	0x0a, r24	; 10
 2ca:	08 95       	ret

000002cc <move_servo1>:
#include "servo.h"
// Motor Control Functions -- pwm is an 16-bit value

void move_servo1(uint16_t angle)
{
	OCR1A = (310 - 110) * angle / 150 + 110;
 2cc:	48 ec       	ldi	r20, 0xC8	; 200
 2ce:	9c 01       	movw	r18, r24
 2d0:	42 9f       	mul	r20, r18
 2d2:	c0 01       	movw	r24, r0
 2d4:	43 9f       	mul	r20, r19
 2d6:	90 0d       	add	r25, r0
 2d8:	11 24       	eor	r1, r1
 2da:	9c 01       	movw	r18, r24
 2dc:	36 95       	lsr	r19
 2de:	27 95       	ror	r18
 2e0:	a5 e7       	ldi	r26, 0x75	; 117
 2e2:	ba ed       	ldi	r27, 0xDA	; 218
 2e4:	2e d3       	rcall	.+1628   	; 0x942 <__umulhisi3>
 2e6:	00 24       	eor	r0, r0
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	00 1c       	adc	r0, r0
 2ee:	88 0f       	add	r24, r24
 2f0:	99 1f       	adc	r25, r25
 2f2:	00 1c       	adc	r0, r0
 2f4:	89 2f       	mov	r24, r25
 2f6:	90 2d       	mov	r25, r0
 2f8:	82 59       	subi	r24, 0x92	; 146
 2fa:	9f 4f       	sbci	r25, 0xFF	; 255
 2fc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 300:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 304:	08 95       	ret

00000306 <move_servo2>:
}

void move_servo2(uint16_t angle)
{
	
	OCR1B = (310 - 110) * angle / 150 + 110;
 306:	48 ec       	ldi	r20, 0xC8	; 200
 308:	9c 01       	movw	r18, r24
 30a:	42 9f       	mul	r20, r18
 30c:	c0 01       	movw	r24, r0
 30e:	43 9f       	mul	r20, r19
 310:	90 0d       	add	r25, r0
 312:	11 24       	eor	r1, r1
 314:	9c 01       	movw	r18, r24
 316:	36 95       	lsr	r19
 318:	27 95       	ror	r18
 31a:	a5 e7       	ldi	r26, 0x75	; 117
 31c:	ba ed       	ldi	r27, 0xDA	; 218
 31e:	11 d3       	rcall	.+1570   	; 0x942 <__umulhisi3>
 320:	00 24       	eor	r0, r0
 322:	88 0f       	add	r24, r24
 324:	99 1f       	adc	r25, r25
 326:	00 1c       	adc	r0, r0
 328:	88 0f       	add	r24, r24
 32a:	99 1f       	adc	r25, r25
 32c:	00 1c       	adc	r0, r0
 32e:	89 2f       	mov	r24, r25
 330:	90 2d       	mov	r25, r0
 332:	82 59       	subi	r24, 0x92	; 146
 334:	9f 4f       	sbci	r25, 0xFF	; 255
 336:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 33a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 33e:	08 95       	ret

00000340 <servo_init>:
//  before you use any of the above functions
void servo_init()
{
	
	//Configure TIMER1
	TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);//|(0<<CS12)|(1<<CS11)|(1<<CS10);        //NON Inverted PWM
 340:	e0 e8       	ldi	r30, 0x80	; 128
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	82 6a       	ori	r24, 0xA2	; 162
 348:	80 83       	st	Z, r24
	//TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //PRESCALER=64 MODE 14(FAST PWM)
	//ICR1=312;  //fPWM=50Hz (Period = 20ms Standard).
	
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(1<<CS10); //PRESCALER=8 MODE 14(FAST PWM)
 34a:	e1 e8       	ldi	r30, 0x81	; 129
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	8b 61       	ori	r24, 0x1B	; 27
 352:	80 83       	st	Z, r24
	ICR1=2499;  //fPWM=50Hz (Period = 20ms Standard).
 354:	83 ec       	ldi	r24, 0xC3	; 195
 356:	99 e0       	ldi	r25, 0x09	; 9
 358:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 35c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	
	// set PWM pins as digital outputs (the PWM signals will not
	// appear on the lines if they are digital inputs)
	DDRD |= (1 << PORTD5)|(1<<PORTD4);
 360:	8a b1       	in	r24, 0x0a	; 10
 362:	80 63       	ori	r24, 0x30	; 48
 364:	8a b9       	out	0x0a, r24	; 10
 366:	08 95       	ret

00000368 <hold_stepper>:
#include "timer2.h"

uint32_t present;

void hold_stepper (void) {
	PORTC = 0b00100000;
 368:	80 e2       	ldi	r24, 0x20	; 32
 36a:	88 b9       	out	0x08, r24	; 8
 36c:	08 95       	ret

0000036e <relax_stepper>:
}

void relax_stepper (void) {
	PORTC &= 0b0;
 36e:	88 b1       	in	r24, 0x08	; 8
 370:	18 b8       	out	0x08, r1	; 8
 372:	08 95       	ret

00000374 <full_step_forward>:
}

void full_step_forward (int num_step) {
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
	for (int i = 0; i < num_step; ++i)
 378:	18 16       	cp	r1, r24
 37a:	19 06       	cpc	r1, r25
 37c:	0c f0       	brlt	.+2      	; 0x380 <full_step_forward+0xc>
 37e:	47 c0       	rjmp	.+142    	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 380:	20 e0       	ldi	r18, 0x00	; 0
 382:	30 e0       	ldi	r19, 0x00	; 0
	{
	
	PORTC = 0b001001000;
 384:	b8 e4       	ldi	r27, 0x48	; 72
	_delay_ms(DELAY);
		PORTC = 0b00000100;
 386:	a4 e0       	ldi	r26, 0x04	; 4
		 		_delay_ms(DELAY);
		 		PORTC = 0b00001100;
 388:	fc e0       	ldi	r31, 0x0C	; 12
		 		_delay_ms(DELAY);
		 		PORTC = 0b00001000;
 38a:	e8 e0       	ldi	r30, 0x08	; 8
		 		_delay_ms(DELAY);
		 		PORTC = 0b00011000;
 38c:	78 e1       	ldi	r23, 0x18	; 24
		 		_delay_ms(DELAY);
		 		PORTC = 0b00010000;
 38e:	60 e1       	ldi	r22, 0x10	; 16
		 		_delay_ms(DELAY);
		 		PORTC = 0b00110000;
 390:	50 e3       	ldi	r21, 0x30	; 48
		 		_delay_ms(DELAY);
		 		PORTC = 0b00100000;
 392:	40 e2       	ldi	r20, 0x20	; 32

void full_step_forward (int num_step) {
	for (int i = 0; i < num_step; ++i)
	{
	
	PORTC = 0b001001000;
 394:	b8 b9       	out	0x08, r27	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 396:	c3 ec       	ldi	r28, 0xC3	; 195
 398:	d9 e0       	ldi	r29, 0x09	; 9
 39a:	21 97       	sbiw	r28, 0x01	; 1
 39c:	f1 f7       	brne	.-4      	; 0x39a <full_step_forward+0x26>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <full_step_forward+0x2c>
 3a0:	00 00       	nop
	_delay_ms(DELAY);
		PORTC = 0b00000100;
 3a2:	a8 b9       	out	0x08, r26	; 8
 3a4:	c3 ec       	ldi	r28, 0xC3	; 195
 3a6:	d9 e0       	ldi	r29, 0x09	; 9
 3a8:	21 97       	sbiw	r28, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <full_step_forward+0x34>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <full_step_forward+0x3a>
 3ae:	00 00       	nop
		 		_delay_ms(DELAY);
		 		PORTC = 0b00001100;
 3b0:	f8 b9       	out	0x08, r31	; 8
 3b2:	c3 ec       	ldi	r28, 0xC3	; 195
 3b4:	d9 e0       	ldi	r29, 0x09	; 9
 3b6:	21 97       	sbiw	r28, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <full_step_forward+0x42>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <full_step_forward+0x48>
 3bc:	00 00       	nop
		 		_delay_ms(DELAY);
		 		PORTC = 0b00001000;
 3be:	e8 b9       	out	0x08, r30	; 8
 3c0:	c3 ec       	ldi	r28, 0xC3	; 195
 3c2:	d9 e0       	ldi	r29, 0x09	; 9
 3c4:	21 97       	sbiw	r28, 0x01	; 1
 3c6:	f1 f7       	brne	.-4      	; 0x3c4 <full_step_forward+0x50>
 3c8:	00 c0       	rjmp	.+0      	; 0x3ca <full_step_forward+0x56>
 3ca:	00 00       	nop
		 		_delay_ms(DELAY);
		 		PORTC = 0b00011000;
 3cc:	78 b9       	out	0x08, r23	; 8
 3ce:	c3 ec       	ldi	r28, 0xC3	; 195
 3d0:	d9 e0       	ldi	r29, 0x09	; 9
 3d2:	21 97       	sbiw	r28, 0x01	; 1
 3d4:	f1 f7       	brne	.-4      	; 0x3d2 <full_step_forward+0x5e>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <full_step_forward+0x64>
 3d8:	00 00       	nop
		 		_delay_ms(DELAY);
		 		PORTC = 0b00010000;
 3da:	68 b9       	out	0x08, r22	; 8
 3dc:	c3 ec       	ldi	r28, 0xC3	; 195
 3de:	d9 e0       	ldi	r29, 0x09	; 9
 3e0:	21 97       	sbiw	r28, 0x01	; 1
 3e2:	f1 f7       	brne	.-4      	; 0x3e0 <full_step_forward+0x6c>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <full_step_forward+0x72>
 3e6:	00 00       	nop
		 		_delay_ms(DELAY);
		 		PORTC = 0b00110000;
 3e8:	58 b9       	out	0x08, r21	; 8
 3ea:	c3 ec       	ldi	r28, 0xC3	; 195
 3ec:	d9 e0       	ldi	r29, 0x09	; 9
 3ee:	21 97       	sbiw	r28, 0x01	; 1
 3f0:	f1 f7       	brne	.-4      	; 0x3ee <full_step_forward+0x7a>
 3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <full_step_forward+0x80>
 3f4:	00 00       	nop
		 		_delay_ms(DELAY);
		 		PORTC = 0b00100000;
 3f6:	48 b9       	out	0x08, r20	; 8
 3f8:	c3 ec       	ldi	r28, 0xC3	; 195
 3fa:	d9 e0       	ldi	r29, 0x09	; 9
 3fc:	21 97       	sbiw	r28, 0x01	; 1
 3fe:	f1 f7       	brne	.-4      	; 0x3fc <full_step_forward+0x88>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__FUSE_REGION_LENGTH__+0x2>
 402:	00 00       	nop
void relax_stepper (void) {
	PORTC &= 0b0;
}

void full_step_forward (int num_step) {
	for (int i = 0; i < num_step; ++i)
 404:	2f 5f       	subi	r18, 0xFF	; 255
 406:	3f 4f       	sbci	r19, 0xFF	; 255
 408:	82 17       	cp	r24, r18
 40a:	93 07       	cpc	r25, r19
 40c:	19 f6       	brne	.-122    	; 0x394 <full_step_forward+0x20>
		 		_delay_ms(DELAY);
		 		PORTC = 0b00100000;
		 		_delay_ms(DELAY);
		
	}
}
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	08 95       	ret

00000414 <full_step_back>:
void full_step_back (int num_step) {
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
	for (int i = 0; i < num_step; ++i)
 418:	18 16       	cp	r1, r24
 41a:	19 06       	cpc	r1, r25
 41c:	0c f0       	brlt	.+2      	; 0x420 <full_step_back+0xc>
 41e:	47 c0       	rjmp	.+142    	; 0x4ae <full_step_back+0x9a>
 420:	20 e0       	ldi	r18, 0x00	; 0
 422:	30 e0       	ldi	r19, 0x00	; 0
	{
		
		PORTC = 0b00100100;
 424:	b4 e2       	ldi	r27, 0x24	; 36
		_delay_ms(DELAY);
		PORTC = 0b00100000;
 426:	a0 e2       	ldi	r26, 0x20	; 32
		_delay_ms(DELAY);
		PORTC = 0b00110000;
 428:	f0 e3       	ldi	r31, 0x30	; 48
		_delay_ms(DELAY);
		PORTC = 0b00010000;
 42a:	e0 e1       	ldi	r30, 0x10	; 16
		_delay_ms(DELAY);
		PORTC = 0b00011000;
 42c:	78 e1       	ldi	r23, 0x18	; 24
		_delay_ms(DELAY);
		PORTC = 0b00001000;
 42e:	68 e0       	ldi	r22, 0x08	; 8
		_delay_ms(DELAY);
		PORTC = 0b00001100;
 430:	5c e0       	ldi	r21, 0x0C	; 12
		_delay_ms(DELAY);
		PORTC = 0b00000100;
 432:	44 e0       	ldi	r20, 0x04	; 4
}
void full_step_back (int num_step) {
	for (int i = 0; i < num_step; ++i)
	{
		
		PORTC = 0b00100100;
 434:	b8 b9       	out	0x08, r27	; 8
 436:	c3 ec       	ldi	r28, 0xC3	; 195
 438:	d9 e0       	ldi	r29, 0x09	; 9
 43a:	21 97       	sbiw	r28, 0x01	; 1
 43c:	f1 f7       	brne	.-4      	; 0x43a <full_step_back+0x26>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <full_step_back+0x2c>
 440:	00 00       	nop
		_delay_ms(DELAY);
		PORTC = 0b00100000;
 442:	a8 b9       	out	0x08, r26	; 8
 444:	c3 ec       	ldi	r28, 0xC3	; 195
 446:	d9 e0       	ldi	r29, 0x09	; 9
 448:	21 97       	sbiw	r28, 0x01	; 1
 44a:	f1 f7       	brne	.-4      	; 0x448 <full_step_back+0x34>
 44c:	00 c0       	rjmp	.+0      	; 0x44e <full_step_back+0x3a>
 44e:	00 00       	nop
		_delay_ms(DELAY);
		PORTC = 0b00110000;
 450:	f8 b9       	out	0x08, r31	; 8
 452:	c3 ec       	ldi	r28, 0xC3	; 195
 454:	d9 e0       	ldi	r29, 0x09	; 9
 456:	21 97       	sbiw	r28, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <full_step_back+0x42>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <full_step_back+0x48>
 45c:	00 00       	nop
		_delay_ms(DELAY);
		PORTC = 0b00010000;
 45e:	e8 b9       	out	0x08, r30	; 8
 460:	c3 ec       	ldi	r28, 0xC3	; 195
 462:	d9 e0       	ldi	r29, 0x09	; 9
 464:	21 97       	sbiw	r28, 0x01	; 1
 466:	f1 f7       	brne	.-4      	; 0x464 <full_step_back+0x50>
 468:	00 c0       	rjmp	.+0      	; 0x46a <full_step_back+0x56>
 46a:	00 00       	nop
		_delay_ms(DELAY);
		PORTC = 0b00011000;
 46c:	78 b9       	out	0x08, r23	; 8
 46e:	c3 ec       	ldi	r28, 0xC3	; 195
 470:	d9 e0       	ldi	r29, 0x09	; 9
 472:	21 97       	sbiw	r28, 0x01	; 1
 474:	f1 f7       	brne	.-4      	; 0x472 <full_step_back+0x5e>
 476:	00 c0       	rjmp	.+0      	; 0x478 <full_step_back+0x64>
 478:	00 00       	nop
		_delay_ms(DELAY);
		PORTC = 0b00001000;
 47a:	68 b9       	out	0x08, r22	; 8
 47c:	c3 ec       	ldi	r28, 0xC3	; 195
 47e:	d9 e0       	ldi	r29, 0x09	; 9
 480:	21 97       	sbiw	r28, 0x01	; 1
 482:	f1 f7       	brne	.-4      	; 0x480 <full_step_back+0x6c>
 484:	00 c0       	rjmp	.+0      	; 0x486 <full_step_back+0x72>
 486:	00 00       	nop
		_delay_ms(DELAY);
		PORTC = 0b00001100;
 488:	58 b9       	out	0x08, r21	; 8
 48a:	c3 ec       	ldi	r28, 0xC3	; 195
 48c:	d9 e0       	ldi	r29, 0x09	; 9
 48e:	21 97       	sbiw	r28, 0x01	; 1
 490:	f1 f7       	brne	.-4      	; 0x48e <full_step_back+0x7a>
 492:	00 c0       	rjmp	.+0      	; 0x494 <full_step_back+0x80>
 494:	00 00       	nop
		_delay_ms(DELAY);
		PORTC = 0b00000100;
 496:	48 b9       	out	0x08, r20	; 8
 498:	c3 ec       	ldi	r28, 0xC3	; 195
 49a:	d9 e0       	ldi	r29, 0x09	; 9
 49c:	21 97       	sbiw	r28, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <full_step_back+0x88>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <full_step_back+0x8e>
 4a2:	00 00       	nop
		 		_delay_ms(DELAY);
		
	}
}
void full_step_back (int num_step) {
	for (int i = 0; i < num_step; ++i)
 4a4:	2f 5f       	subi	r18, 0xFF	; 255
 4a6:	3f 4f       	sbci	r19, 0xFF	; 255
 4a8:	82 17       	cp	r24, r18
 4aa:	93 07       	cpc	r25, r19
 4ac:	19 f6       	brne	.-122    	; 0x434 <full_step_back+0x20>
		_delay_ms(DELAY);
		PORTC = 0b00000100;
		_delay_ms(DELAY);
		
	}
 4ae:	df 91       	pop	r29
 4b0:	cf 91       	pop	r28
 4b2:	08 95       	ret

000004b4 <timer_init>:
//  before you use any of the above functions
void timer_init()
{
	//sei();
	//Configure TIMER2
	 OCR2A = 249;
 4b4:	89 ef       	ldi	r24, 0xF9	; 249
 4b6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	
	 TCCR2A |= (1 << WGM21);
 4ba:	e0 eb       	ldi	r30, 0xB0	; 176
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	80 81       	ld	r24, Z
 4c0:	82 60       	ori	r24, 0x02	; 2
 4c2:	80 83       	st	Z, r24
	 // Set to CTC Mode

	 TIMSK2 |= (1 << OCIE2A);
 4c4:	e0 e7       	ldi	r30, 0x70	; 112
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	80 81       	ld	r24, Z
 4ca:	82 60       	ori	r24, 0x02	; 2
 4cc:	80 83       	st	Z, r24
	 //Set interrupt on compare match

	 TCCR2B |= (1 << CS21)|(1 << CS20);
 4ce:	e1 eb       	ldi	r30, 0xB1	; 177
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	80 81       	ld	r24, Z
 4d4:	83 60       	ori	r24, 0x03	; 3
 4d6:	80 83       	st	Z, r24
	 // set prescaler to 32 and starts PWM

	 
	 // enable interrupts
	 TIFR0 &= (1<<OCF0A);
 4d8:	85 b3       	in	r24, 0x15	; 21
 4da:	82 70       	andi	r24, 0x02	; 2
 4dc:	85 bb       	out	0x15, r24	; 21
 4de:	08 95       	ret

000004e0 <__vector_9>:


}

ISR (TIMER2_COMPA_vect)
{
 4e0:	1f 92       	push	r1
 4e2:	0f 92       	push	r0
 4e4:	0f b6       	in	r0, 0x3f	; 63
 4e6:	0f 92       	push	r0
 4e8:	11 24       	eor	r1, r1
 4ea:	8f 93       	push	r24
 4ec:	9f 93       	push	r25
 4ee:	af 93       	push	r26
 4f0:	bf 93       	push	r27
	// action to be done every 250 usec
	 //TIFR0 &= ~(1<<OCF0A);
	clock_ticks++;
 4f2:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <clock_ticks>
 4f6:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <clock_ticks+0x1>
 4fa:	a0 91 d0 02 	lds	r26, 0x02D0	; 0x8002d0 <clock_ticks+0x2>
 4fe:	b0 91 d1 02 	lds	r27, 0x02D1	; 0x8002d1 <clock_ticks+0x3>
 502:	01 96       	adiw	r24, 0x01	; 1
 504:	a1 1d       	adc	r26, r1
 506:	b1 1d       	adc	r27, r1
 508:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <clock_ticks>
 50c:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <clock_ticks+0x1>
 510:	a0 93 d0 02 	sts	0x02D0, r26	; 0x8002d0 <clock_ticks+0x2>
 514:	b0 93 d1 02 	sts	0x02D1, r27	; 0x8002d1 <clock_ticks+0x3>
 518:	bf 91       	pop	r27
 51a:	af 91       	pop	r26
 51c:	9f 91       	pop	r25
 51e:	8f 91       	pop	r24
 520:	0f 90       	pop	r0
 522:	0f be       	out	0x3f, r0	; 63
 524:	0f 90       	pop	r0
 526:	1f 90       	pop	r1
 528:	18 95       	reti

0000052a <forwards>:
void stop(void);

////////////////////////////////////////////////DC motors function

void forwards(void){
	 motorRfwd(0);
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	36 de       	rcall	.-916    	; 0x19c <motorRfwd>
	 motorLfwd(0);
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	4a de       	rcall	.-876    	; 0x1ca <motorLfwd>
	 sprintf(carStatus, "Forward");
 536:	88 e0       	ldi	r24, 0x08	; 8
 538:	e0 e0       	ldi	r30, 0x00	; 0
 53a:	f1 e0       	ldi	r31, 0x01	; 1
 53c:	a4 e0       	ldi	r26, 0x04	; 4
 53e:	b3 e0       	ldi	r27, 0x03	; 3
 540:	01 90       	ld	r0, Z+
 542:	0d 92       	st	X+, r0
 544:	8a 95       	dec	r24
 546:	e1 f7       	brne	.-8      	; 0x540 <forwards+0x16>
 548:	08 95       	ret

0000054a <reverse>:
}

void reverse(void){
	motorRbwd(0);
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	56 de       	rcall	.-852    	; 0x1fc <motorRbwd>
	motorLbwd(0);
 550:	80 e0       	ldi	r24, 0x00	; 0
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	6a de       	rcall	.-812    	; 0x22a <motorLbwd>
	sprintf(carStatus, "Reverse");
 556:	88 e0       	ldi	r24, 0x08	; 8
 558:	e8 e0       	ldi	r30, 0x08	; 8
 55a:	f1 e0       	ldi	r31, 0x01	; 1
 55c:	a4 e0       	ldi	r26, 0x04	; 4
 55e:	b3 e0       	ldi	r27, 0x03	; 3
 560:	01 90       	ld	r0, Z+
 562:	0d 92       	st	X+, r0
 564:	8a 95       	dec	r24
 566:	e1 f7       	brne	.-8      	; 0x560 <reverse+0x16>
 568:	08 95       	ret

0000056a <left>:
}

void left(void){
	motorRfwd(0);
 56a:	80 e0       	ldi	r24, 0x00	; 0
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	16 de       	rcall	.-980    	; 0x19c <motorRfwd>
	motorLbwd(0);
 570:	80 e0       	ldi	r24, 0x00	; 0
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	5a de       	rcall	.-844    	; 0x22a <motorLbwd>
	sprintf(carStatus, "Left");
 576:	85 e0       	ldi	r24, 0x05	; 5
 578:	e0 e1       	ldi	r30, 0x10	; 16
 57a:	f1 e0       	ldi	r31, 0x01	; 1
 57c:	a4 e0       	ldi	r26, 0x04	; 4
 57e:	b3 e0       	ldi	r27, 0x03	; 3
 580:	01 90       	ld	r0, Z+
 582:	0d 92       	st	X+, r0
 584:	8a 95       	dec	r24
 586:	e1 f7       	brne	.-8      	; 0x580 <left+0x16>
 588:	08 95       	ret

0000058a <right>:
}
void right(void){
	motorRbwd(0);
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	36 de       	rcall	.-916    	; 0x1fc <motorRbwd>
	motorLfwd(0);
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	1a de       	rcall	.-972    	; 0x1ca <motorLfwd>
	sprintf(carStatus, "Right");
 596:	86 e0       	ldi	r24, 0x06	; 6
 598:	e5 e1       	ldi	r30, 0x15	; 21
 59a:	f1 e0       	ldi	r31, 0x01	; 1
 59c:	a4 e0       	ldi	r26, 0x04	; 4
 59e:	b3 e0       	ldi	r27, 0x03	; 3
 5a0:	01 90       	ld	r0, Z+
 5a2:	0d 92       	st	X+, r0
 5a4:	8a 95       	dec	r24
 5a6:	e1 f7       	brne	.-8      	; 0x5a0 <right+0x16>
 5a8:	08 95       	ret

000005aa <stop>:
}

void stop(void){
	motorL_stop();
	motorR_stop();
 5aa:	6f de       	rcall	.-802    	; 0x28a <motorL_stop>
 5ac:	57 de       	rcall	.-850    	; 0x25c <motorR_stop>
	sprintf(carStatus, "Stopped");
 5ae:	88 e0       	ldi	r24, 0x08	; 8
 5b0:	eb e1       	ldi	r30, 0x1B	; 27
 5b2:	f1 e0       	ldi	r31, 0x01	; 1
 5b4:	a4 e0       	ldi	r26, 0x04	; 4
 5b6:	b3 e0       	ldi	r27, 0x03	; 3
 5b8:	01 90       	ld	r0, Z+
 5ba:	0d 92       	st	X+, r0
 5bc:	8a 95       	dec	r24
 5be:	e1 f7       	brne	.-8      	; 0x5b8 <stop+0xe>
 5c0:	08 95       	ret

000005c2 <main>:



///////////////////////////////////////// Main function

int main(void) {
 5c2:	cf 93       	push	r28
 5c4:	df 93       	push	r29
 5c6:	cd b7       	in	r28, 0x3d	; 61
 5c8:	de b7       	in	r29, 0x3e	; 62
 5ca:	c4 56       	subi	r28, 0x64	; 100
 5cc:	d1 09       	sbc	r29, r1
 5ce:	0f b6       	in	r0, 0x3f	; 63
 5d0:	f8 94       	cli
 5d2:	de bf       	out	0x3e, r29	; 62
 5d4:	0f be       	out	0x3f, r0	; 63
 5d6:	cd bf       	out	0x3d, r28	; 61
	char roverState[50];
	sprintf(roverState, "Stopped");
 5d8:	88 e0       	ldi	r24, 0x08	; 8
 5da:	eb e1       	ldi	r30, 0x1B	; 27
 5dc:	f1 e0       	ldi	r31, 0x01	; 1
 5de:	de 01       	movw	r26, r28
 5e0:	11 96       	adiw	r26, 0x01	; 1
 5e2:	01 90       	ld	r0, Z+
 5e4:	0d 92       	st	X+, r0
 5e6:	8a 95       	dec	r24
 5e8:	e1 f7       	brne	.-8      	; 0x5e2 <main+0x20>
	char stepperState[50];
	sprintf(stepperState, "Relaxed");
 5ea:	88 e0       	ldi	r24, 0x08	; 8
 5ec:	e3 e2       	ldi	r30, 0x23	; 35
 5ee:	f1 e0       	ldi	r31, 0x01	; 1
 5f0:	de 01       	movw	r26, r28
 5f2:	d3 96       	adiw	r26, 0x33	; 51
 5f4:	01 90       	ld	r0, Z+
 5f6:	0d 92       	st	X+, r0
 5f8:	8a 95       	dec	r24

	//Initialize timer2
	timer_init();
	
	//Initialize communication through bluetooth
	uart_init();
 5fa:	e1 f7       	brne	.-8      	; 0x5f4 <main+0x32>
 5fc:	5b df       	rcall	.-330    	; 0x4b4 <timer_init>
 5fe:	74 dd       	rcall	.-1304   	; 0xe8 <uart_init>
 600:	5b de       	rcall	.-842    	; 0x2b8 <motor_init>
 602:	d3 df       	rcall	.-90     	; 0x5aa <stop>
 604:	9d de       	rcall	.-710    	; 0x340 <servo_init>
 606:	80 e0       	ldi	r24, 0x00	; 0
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	60 de       	rcall	.-832    	; 0x2cc <move_servo1>
 60c:	80 e0       	ldi	r24, 0x00	; 0
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	7a de       	rcall	.-780    	; 0x306 <move_servo2>
 612:	89 e0       	ldi	r24, 0x09	; 9
 614:	eb e2       	ldi	r30, 0x2B	; 43
 616:	f1 e0       	ldi	r31, 0x01	; 1
 618:	a2 ed       	ldi	r26, 0xD2	; 210
 61a:	b2 e0       	ldi	r27, 0x02	; 2
 61c:	01 90       	ld	r0, Z+
 61e:	0d 92       	st	X+, r0
 620:	8a 95       	dec	r24
 622:	e1 f7       	brne	.-8      	; 0x61c <main+0x5a>
 624:	82 ed       	ldi	r24, 0xD2	; 210
 626:	92 e0       	ldi	r25, 0x02	; 2
 628:	71 dd       	rcall	.-1310   	; 0x10c <send_str>
 62a:	a1 2c       	mov	r10, r1
 62c:	b1 2c       	mov	r11, r1
 62e:	c1 2c       	mov	r12, r1
 630:	d1 2c       	mov	r13, r1
 632:	7e 01       	movw	r14, r28
 634:	83 e3       	ldi	r24, 0x33	; 51
 636:	e8 0e       	add	r14, r24
 638:	f1 1c       	adc	r15, r1
 63a:	fe 01       	movw	r30, r28
 63c:	31 96       	adiw	r30, 0x01	; 1
 63e:	4f 01       	movw	r8, r30
 640:	0f 2e       	mov	r0, r31
 642:	f3 ed       	ldi	r31, 0xD3	; 211
 644:	4f 2e       	mov	r4, r31
 646:	f1 e0       	ldi	r31, 0x01	; 1
 648:	5f 2e       	mov	r5, r31
 64a:	f0 2d       	mov	r31, r0
 64c:	0f 2e       	mov	r0, r31
 64e:	f4 eb       	ldi	r31, 0xB4	; 180
 650:	2f 2e       	mov	r2, r31
 652:	f1 e0       	ldi	r31, 0x01	; 1
 654:	3f 2e       	mov	r3, r31
 656:	f0 2d       	mov	r31, r0
 658:	0f 2e       	mov	r0, r31
 65a:	f3 e9       	ldi	r31, 0x93	; 147
 65c:	6f 2e       	mov	r6, r31
 65e:	f2 e0       	ldi	r31, 0x02	; 2
 660:	7f 2e       	mov	r7, r31
 662:	f0 2d       	mov	r31, r0
 664:	71 dd       	rcall	.-1310   	; 0x148 <get_char>
 666:	98 e0       	ldi	r25, 0x08	; 8
 668:	e4 e3       	ldi	r30, 0x34	; 52
 66a:	f1 e0       	ldi	r31, 0x01	; 1
 66c:	d7 01       	movw	r26, r14
 66e:	01 90       	ld	r0, Z+
 670:	0d 92       	st	X+, r0
 672:	9a 95       	dec	r25
 674:	e1 f7       	brne	.-8      	; 0x66e <main+0xac>
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	fc 01       	movw	r30, r24
 67a:	e1 56       	subi	r30, 0x61	; 97
 67c:	f1 09       	sbc	r31, r1
 67e:	ea 31       	cpi	r30, 0x1A	; 26
 680:	f1 05       	cpc	r31, r1
 682:	08 f0       	brcs	.+2      	; 0x686 <main+0xc4>
 684:	3a c1       	rjmp	.+628    	; 0x8fa <main+0x338>
 686:	e2 5c       	subi	r30, 0xC2	; 194
 688:	ff 4f       	sbci	r31, 0xFF	; 255
 68a:	55 c1       	rjmp	.+682    	; 0x936 <__tablejump2__>
 68c:	6d de       	rcall	.-806    	; 0x368 <hold_stepper>
 68e:	88 e0       	ldi	r24, 0x08	; 8
 690:	e4 e3       	ldi	r30, 0x34	; 52
 692:	f1 e0       	ldi	r31, 0x01	; 1
 694:	d7 01       	movw	r26, r14
 696:	01 90       	ld	r0, Z+
 698:	0d 92       	st	X+, r0
 69a:	8a 95       	dec	r24
 69c:	e1 f7       	brne	.-8      	; 0x696 <main+0xd4>
 69e:	8f e0       	ldi	r24, 0x0F	; 15
 6a0:	ec e3       	ldi	r30, 0x3C	; 60
 6a2:	f1 e0       	ldi	r31, 0x01	; 1
 6a4:	a2 ed       	ldi	r26, 0xD2	; 210
 6a6:	b2 e0       	ldi	r27, 0x02	; 2
 6a8:	01 90       	ld	r0, Z+
 6aa:	0d 92       	st	X+, r0
 6ac:	8a 95       	dec	r24
 6ae:	e1 f7       	brne	.-8      	; 0x6a8 <main+0xe6>
 6b0:	82 ed       	ldi	r24, 0xD2	; 210
 6b2:	92 e0       	ldi	r25, 0x02	; 2
 6b4:	2b dd       	rcall	.-1450   	; 0x10c <send_str>
 6b6:	21 c1       	rjmp	.+578    	; 0x8fa <main+0x338>
 6b8:	5a de       	rcall	.-844    	; 0x36e <relax_stepper>
 6ba:	88 e0       	ldi	r24, 0x08	; 8
 6bc:	e3 e2       	ldi	r30, 0x23	; 35
 6be:	f1 e0       	ldi	r31, 0x01	; 1
 6c0:	d7 01       	movw	r26, r14
 6c2:	01 90       	ld	r0, Z+
 6c4:	0d 92       	st	X+, r0
 6c6:	8a 95       	dec	r24
 6c8:	e1 f7       	brne	.-8      	; 0x6c2 <main+0x100>
 6ca:	80 e1       	ldi	r24, 0x10	; 16
 6cc:	eb e4       	ldi	r30, 0x4B	; 75
 6ce:	f1 e0       	ldi	r31, 0x01	; 1
 6d0:	a2 ed       	ldi	r26, 0xD2	; 210
 6d2:	b2 e0       	ldi	r27, 0x02	; 2
 6d4:	01 90       	ld	r0, Z+
 6d6:	0d 92       	st	X+, r0
 6d8:	8a 95       	dec	r24
 6da:	e1 f7       	brne	.-8      	; 0x6d4 <main+0x112>
 6dc:	82 ed       	ldi	r24, 0xD2	; 210
 6de:	92 e0       	ldi	r25, 0x02	; 2
 6e0:	15 dd       	rcall	.-1494   	; 0x10c <send_str>
 6e2:	0b c1       	rjmp	.+534    	; 0x8fa <main+0x338>
 6e4:	8a e0       	ldi	r24, 0x0A	; 10
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	45 de       	rcall	.-886    	; 0x374 <full_step_forward>
 6ea:	82 e1       	ldi	r24, 0x12	; 18
 6ec:	eb e5       	ldi	r30, 0x5B	; 91
 6ee:	f1 e0       	ldi	r31, 0x01	; 1
 6f0:	d7 01       	movw	r26, r14
 6f2:	01 90       	ld	r0, Z+
 6f4:	0d 92       	st	X+, r0
 6f6:	8a 95       	dec	r24
 6f8:	e1 f7       	brne	.-8      	; 0x6f2 <main+0x130>
 6fa:	89 e1       	ldi	r24, 0x19	; 25
 6fc:	ed e6       	ldi	r30, 0x6D	; 109
 6fe:	f1 e0       	ldi	r31, 0x01	; 1
 700:	a2 ed       	ldi	r26, 0xD2	; 210
 702:	b2 e0       	ldi	r27, 0x02	; 2
 704:	01 90       	ld	r0, Z+
 706:	0d 92       	st	X+, r0
 708:	8a 95       	dec	r24
 70a:	e1 f7       	brne	.-8      	; 0x704 <main+0x142>
 70c:	82 ed       	ldi	r24, 0xD2	; 210
 70e:	92 e0       	ldi	r25, 0x02	; 2
 710:	fd dc       	rcall	.-1542   	; 0x10c <send_str>
 712:	f3 c0       	rjmp	.+486    	; 0x8fa <main+0x338>
 714:	8a e0       	ldi	r24, 0x0A	; 10
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	7d de       	rcall	.-774    	; 0x414 <full_step_back>
 71a:	83 e1       	ldi	r24, 0x13	; 19
 71c:	e6 e8       	ldi	r30, 0x86	; 134
 71e:	f1 e0       	ldi	r31, 0x01	; 1
 720:	d7 01       	movw	r26, r14
 722:	01 90       	ld	r0, Z+
 724:	0d 92       	st	X+, r0
 726:	8a 95       	dec	r24
 728:	e1 f7       	brne	.-8      	; 0x722 <main+0x160>
 72a:	8b e1       	ldi	r24, 0x1B	; 27
 72c:	e9 e9       	ldi	r30, 0x99	; 153
 72e:	f1 e0       	ldi	r31, 0x01	; 1
 730:	a2 ed       	ldi	r26, 0xD2	; 210
 732:	b2 e0       	ldi	r27, 0x02	; 2
 734:	01 90       	ld	r0, Z+
 736:	0d 92       	st	X+, r0
 738:	8a 95       	dec	r24
 73a:	e1 f7       	brne	.-8      	; 0x734 <main+0x172>
 73c:	82 ed       	ldi	r24, 0xD2	; 210
 73e:	92 e0       	ldi	r25, 0x02	; 2
 740:	e5 dc       	rcall	.-1590   	; 0x10c <send_str>
 742:	db c0       	rjmp	.+438    	; 0x8fa <main+0x338>
 744:	f6 e9       	ldi	r31, 0x96	; 150
 746:	cf 16       	cp	r12, r31
 748:	d1 04       	cpc	r13, r1
 74a:	1c f4       	brge	.+6      	; 0x752 <main+0x190>
 74c:	85 e0       	ldi	r24, 0x05	; 5
 74e:	c8 0e       	add	r12, r24
 750:	d1 1c       	adc	r13, r1
 752:	c6 01       	movw	r24, r12
 754:	bb dd       	rcall	.-1162   	; 0x2cc <move_servo1>
 756:	df 92       	push	r13
 758:	cf 92       	push	r12
 75a:	3f 92       	push	r3
 75c:	2f 92       	push	r2
 75e:	82 ed       	ldi	r24, 0xD2	; 210
 760:	92 e0       	ldi	r25, 0x02	; 2
 762:	9f 93       	push	r25
 764:	8f 93       	push	r24
 766:	fc d0       	rcall	.+504    	; 0x960 <sprintf>
 768:	82 ed       	ldi	r24, 0xD2	; 210
 76a:	92 e0       	ldi	r25, 0x02	; 2
 76c:	cf dc       	rcall	.-1634   	; 0x10c <send_str>
 76e:	0f 90       	pop	r0
 770:	0f 90       	pop	r0
 772:	0f 90       	pop	r0
 774:	0f 90       	pop	r0
 776:	0f 90       	pop	r0
 778:	0f 90       	pop	r0
 77a:	bf c0       	rjmp	.+382    	; 0x8fa <main+0x338>
 77c:	1c 14       	cp	r1, r12
 77e:	1d 04       	cpc	r1, r13
 780:	1c f4       	brge	.+6      	; 0x788 <main+0x1c6>
 782:	95 e0       	ldi	r25, 0x05	; 5
 784:	c9 1a       	sub	r12, r25
 786:	d1 08       	sbc	r13, r1
 788:	c6 01       	movw	r24, r12
 78a:	a0 dd       	rcall	.-1216   	; 0x2cc <move_servo1>
 78c:	df 92       	push	r13
 78e:	cf 92       	push	r12
 790:	3f 92       	push	r3
 792:	2f 92       	push	r2
 794:	82 ed       	ldi	r24, 0xD2	; 210
 796:	92 e0       	ldi	r25, 0x02	; 2
 798:	9f 93       	push	r25
 79a:	8f 93       	push	r24
 79c:	e1 d0       	rcall	.+450    	; 0x960 <sprintf>
 79e:	82 ed       	ldi	r24, 0xD2	; 210
 7a0:	92 e0       	ldi	r25, 0x02	; 2
 7a2:	b4 dc       	rcall	.-1688   	; 0x10c <send_str>
 7a4:	0f 90       	pop	r0
 7a6:	0f 90       	pop	r0
 7a8:	0f 90       	pop	r0
 7aa:	0f 90       	pop	r0
 7ac:	0f 90       	pop	r0
 7ae:	0f 90       	pop	r0
 7b0:	a4 c0       	rjmp	.+328    	; 0x8fa <main+0x338>
 7b2:	e6 e9       	ldi	r30, 0x96	; 150
 7b4:	ae 16       	cp	r10, r30
 7b6:	b1 04       	cpc	r11, r1
 7b8:	1c f4       	brge	.+6      	; 0x7c0 <main+0x1fe>
 7ba:	f5 e0       	ldi	r31, 0x05	; 5
 7bc:	af 0e       	add	r10, r31
 7be:	b1 1c       	adc	r11, r1
 7c0:	c5 01       	movw	r24, r10
 7c2:	a1 dd       	rcall	.-1214   	; 0x306 <move_servo2>
 7c4:	bf 92       	push	r11
 7c6:	af 92       	push	r10
 7c8:	5f 92       	push	r5
 7ca:	4f 92       	push	r4
 7cc:	82 ed       	ldi	r24, 0xD2	; 210
 7ce:	92 e0       	ldi	r25, 0x02	; 2
 7d0:	9f 93       	push	r25
 7d2:	8f 93       	push	r24
 7d4:	c5 d0       	rcall	.+394    	; 0x960 <sprintf>
 7d6:	82 ed       	ldi	r24, 0xD2	; 210
 7d8:	92 e0       	ldi	r25, 0x02	; 2
 7da:	98 dc       	rcall	.-1744   	; 0x10c <send_str>
 7dc:	0f 90       	pop	r0
 7de:	0f 90       	pop	r0
 7e0:	0f 90       	pop	r0
 7e2:	0f 90       	pop	r0
 7e4:	0f 90       	pop	r0
 7e6:	0f 90       	pop	r0
 7e8:	88 c0       	rjmp	.+272    	; 0x8fa <main+0x338>
 7ea:	1a 14       	cp	r1, r10
 7ec:	1b 04       	cpc	r1, r11
 7ee:	1c f4       	brge	.+6      	; 0x7f6 <main+0x234>
 7f0:	85 e0       	ldi	r24, 0x05	; 5
 7f2:	a8 1a       	sub	r10, r24
 7f4:	b1 08       	sbc	r11, r1
 7f6:	c5 01       	movw	r24, r10
 7f8:	86 dd       	rcall	.-1268   	; 0x306 <move_servo2>
 7fa:	bf 92       	push	r11
 7fc:	af 92       	push	r10
 7fe:	5f 92       	push	r5
 800:	4f 92       	push	r4
 802:	82 ed       	ldi	r24, 0xD2	; 210
 804:	92 e0       	ldi	r25, 0x02	; 2
 806:	9f 93       	push	r25
 808:	8f 93       	push	r24
 80a:	aa d0       	rcall	.+340    	; 0x960 <sprintf>
 80c:	82 ed       	ldi	r24, 0xD2	; 210
 80e:	92 e0       	ldi	r25, 0x02	; 2
 810:	7d dc       	rcall	.-1798   	; 0x10c <send_str>
 812:	0f 90       	pop	r0
 814:	0f 90       	pop	r0
 816:	0f 90       	pop	r0
 818:	0f 90       	pop	r0
 81a:	0f 90       	pop	r0
 81c:	0f 90       	pop	r0
 81e:	6d c0       	rjmp	.+218    	; 0x8fa <main+0x338>
 820:	84 de       	rcall	.-760    	; 0x52a <forwards>
 822:	87 e0       	ldi	r24, 0x07	; 7
 824:	e2 ef       	ldi	r30, 0xF2	; 242
 826:	f1 e0       	ldi	r31, 0x01	; 1
 828:	d4 01       	movw	r26, r8
 82a:	01 90       	ld	r0, Z+
 82c:	0d 92       	st	X+, r0
 82e:	8a 95       	dec	r24
 830:	e1 f7       	brne	.-8      	; 0x82a <main+0x268>
 832:	88 e1       	ldi	r24, 0x18	; 24
 834:	e9 ef       	ldi	r30, 0xF9	; 249
 836:	f1 e0       	ldi	r31, 0x01	; 1
 838:	a2 ed       	ldi	r26, 0xD2	; 210
 83a:	b2 e0       	ldi	r27, 0x02	; 2
 83c:	01 90       	ld	r0, Z+
 83e:	0d 92       	st	X+, r0
 840:	8a 95       	dec	r24
 842:	e1 f7       	brne	.-8      	; 0x83c <main+0x27a>
 844:	82 ed       	ldi	r24, 0xD2	; 210
 846:	92 e0       	ldi	r25, 0x02	; 2
 848:	61 dc       	rcall	.-1854   	; 0x10c <send_str>
 84a:	57 c0       	rjmp	.+174    	; 0x8fa <main+0x338>
 84c:	7e de       	rcall	.-772    	; 0x54a <reverse>
 84e:	8a e0       	ldi	r24, 0x0A	; 10
 850:	e1 e1       	ldi	r30, 0x11	; 17
 852:	f2 e0       	ldi	r31, 0x02	; 2
 854:	d4 01       	movw	r26, r8
 856:	01 90       	ld	r0, Z+
 858:	0d 92       	st	X+, r0
 85a:	8a 95       	dec	r24
 85c:	e1 f7       	brne	.-8      	; 0x856 <main+0x294>
 85e:	89 e1       	ldi	r24, 0x19	; 25
 860:	eb e1       	ldi	r30, 0x1B	; 27
 862:	f2 e0       	ldi	r31, 0x02	; 2
 864:	a2 ed       	ldi	r26, 0xD2	; 210
 866:	b2 e0       	ldi	r27, 0x02	; 2
 868:	01 90       	ld	r0, Z+
 86a:	0d 92       	st	X+, r0
 86c:	8a 95       	dec	r24
 86e:	e1 f7       	brne	.-8      	; 0x868 <main+0x2a6>
 870:	82 ed       	ldi	r24, 0xD2	; 210
 872:	92 e0       	ldi	r25, 0x02	; 2
 874:	4b dc       	rcall	.-1898   	; 0x10c <send_str>
 876:	41 c0       	rjmp	.+130    	; 0x8fa <main+0x338>
 878:	88 de       	rcall	.-752    	; 0x58a <right>
 87a:	8e e0       	ldi	r24, 0x0E	; 14
 87c:	e4 e3       	ldi	r30, 0x34	; 52
 87e:	f2 e0       	ldi	r31, 0x02	; 2
 880:	d4 01       	movw	r26, r8
 882:	01 90       	ld	r0, Z+
 884:	0d 92       	st	X+, r0
 886:	8a 95       	dec	r24
 888:	e1 f7       	brne	.-8      	; 0x882 <main+0x2c0>
 88a:	8c e1       	ldi	r24, 0x1C	; 28
 88c:	e2 e4       	ldi	r30, 0x42	; 66
 88e:	f2 e0       	ldi	r31, 0x02	; 2
 890:	a2 ed       	ldi	r26, 0xD2	; 210
 892:	b2 e0       	ldi	r27, 0x02	; 2
 894:	01 90       	ld	r0, Z+
 896:	0d 92       	st	X+, r0
 898:	8a 95       	dec	r24
 89a:	e1 f7       	brne	.-8      	; 0x894 <main+0x2d2>
 89c:	82 ed       	ldi	r24, 0xD2	; 210
 89e:	92 e0       	ldi	r25, 0x02	; 2
 8a0:	35 dc       	rcall	.-1942   	; 0x10c <send_str>
 8a2:	2b c0       	rjmp	.+86     	; 0x8fa <main+0x338>
 8a4:	62 de       	rcall	.-828    	; 0x56a <left>
 8a6:	8d e0       	ldi	r24, 0x0D	; 13
 8a8:	ee e5       	ldi	r30, 0x5E	; 94
 8aa:	f2 e0       	ldi	r31, 0x02	; 2
 8ac:	d4 01       	movw	r26, r8
 8ae:	01 90       	ld	r0, Z+
 8b0:	0d 92       	st	X+, r0
 8b2:	8a 95       	dec	r24
 8b4:	e1 f7       	brne	.-8      	; 0x8ae <main+0x2ec>
 8b6:	8b e1       	ldi	r24, 0x1B	; 27
 8b8:	eb e6       	ldi	r30, 0x6B	; 107
 8ba:	f2 e0       	ldi	r31, 0x02	; 2
 8bc:	a2 ed       	ldi	r26, 0xD2	; 210
 8be:	b2 e0       	ldi	r27, 0x02	; 2
 8c0:	01 90       	ld	r0, Z+
 8c2:	0d 92       	st	X+, r0
 8c4:	8a 95       	dec	r24
 8c6:	e1 f7       	brne	.-8      	; 0x8c0 <main+0x2fe>
 8c8:	82 ed       	ldi	r24, 0xD2	; 210
 8ca:	92 e0       	ldi	r25, 0x02	; 2
 8cc:	1f dc       	rcall	.-1986   	; 0x10c <send_str>
 8ce:	15 c0       	rjmp	.+42     	; 0x8fa <main+0x338>
 8d0:	6c de       	rcall	.-808    	; 0x5aa <stop>
 8d2:	88 e0       	ldi	r24, 0x08	; 8
 8d4:	eb e1       	ldi	r30, 0x1B	; 27
 8d6:	f1 e0       	ldi	r31, 0x01	; 1
 8d8:	d4 01       	movw	r26, r8
 8da:	01 90       	ld	r0, Z+
 8dc:	0d 92       	st	X+, r0
 8de:	8a 95       	dec	r24
 8e0:	e1 f7       	brne	.-8      	; 0x8da <main+0x318>
 8e2:	8d e0       	ldi	r24, 0x0D	; 13
 8e4:	e6 e8       	ldi	r30, 0x86	; 134
 8e6:	f2 e0       	ldi	r31, 0x02	; 2
 8e8:	a2 ed       	ldi	r26, 0xD2	; 210
 8ea:	b2 e0       	ldi	r27, 0x02	; 2
 8ec:	01 90       	ld	r0, Z+
 8ee:	0d 92       	st	X+, r0
 8f0:	8a 95       	dec	r24
 8f2:	e1 f7       	brne	.-8      	; 0x8ec <main+0x32a>
 8f4:	82 ed       	ldi	r24, 0xD2	; 210
 8f6:	92 e0       	ldi	r25, 0x02	; 2
 8f8:	09 dc       	rcall	.-2030   	; 0x10c <send_str>
 8fa:	ff 92       	push	r15
 8fc:	ef 92       	push	r14
 8fe:	9f 92       	push	r9
 900:	8f 92       	push	r8
 902:	bf 92       	push	r11
 904:	af 92       	push	r10
 906:	df 92       	push	r13
 908:	cf 92       	push	r12
 90a:	7f 92       	push	r7
 90c:	6f 92       	push	r6
 90e:	02 ed       	ldi	r16, 0xD2	; 210
 910:	12 e0       	ldi	r17, 0x02	; 2
 912:	1f 93       	push	r17
 914:	0f 93       	push	r16
 916:	24 d0       	rcall	.+72     	; 0x960 <sprintf>
 918:	c8 01       	movw	r24, r16
 91a:	f8 db       	rcall	.-2064   	; 0x10c <send_str>
 91c:	8a e0       	ldi	r24, 0x0A	; 10
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	f8 01       	movw	r30, r16
 922:	91 83       	std	Z+1, r25	; 0x01
 924:	80 83       	st	Z, r24
 926:	c8 01       	movw	r24, r16
 928:	f1 db       	rcall	.-2078   	; 0x10c <send_str>
 92a:	0f b6       	in	r0, 0x3f	; 63
 92c:	f8 94       	cli
 92e:	de bf       	out	0x3e, r29	; 62
 930:	0f be       	out	0x3f, r0	; 63
 932:	cd bf       	out	0x3d, r28	; 61
 934:	97 ce       	rjmp	.-722    	; 0x664 <main+0xa2>

00000936 <__tablejump2__>:
 936:	ee 0f       	add	r30, r30
 938:	ff 1f       	adc	r31, r31
 93a:	05 90       	lpm	r0, Z+
 93c:	f4 91       	lpm	r31, Z
 93e:	e0 2d       	mov	r30, r0
 940:	09 94       	ijmp

00000942 <__umulhisi3>:
 942:	a2 9f       	mul	r26, r18
 944:	b0 01       	movw	r22, r0
 946:	b3 9f       	mul	r27, r19
 948:	c0 01       	movw	r24, r0
 94a:	a3 9f       	mul	r26, r19
 94c:	70 0d       	add	r23, r0
 94e:	81 1d       	adc	r24, r1
 950:	11 24       	eor	r1, r1
 952:	91 1d       	adc	r25, r1
 954:	b2 9f       	mul	r27, r18
 956:	70 0d       	add	r23, r0
 958:	81 1d       	adc	r24, r1
 95a:	11 24       	eor	r1, r1
 95c:	91 1d       	adc	r25, r1
 95e:	08 95       	ret

00000960 <sprintf>:
 960:	ae e0       	ldi	r26, 0x0E	; 14
 962:	b0 e0       	ldi	r27, 0x00	; 0
 964:	e5 eb       	ldi	r30, 0xB5	; 181
 966:	f4 e0       	ldi	r31, 0x04	; 4
 968:	aa c2       	rjmp	.+1364   	; 0xebe <__prologue_saves__+0x1c>
 96a:	0d 89       	ldd	r16, Y+21	; 0x15
 96c:	1e 89       	ldd	r17, Y+22	; 0x16
 96e:	86 e0       	ldi	r24, 0x06	; 6
 970:	8c 83       	std	Y+4, r24	; 0x04
 972:	1a 83       	std	Y+2, r17	; 0x02
 974:	09 83       	std	Y+1, r16	; 0x01
 976:	8f ef       	ldi	r24, 0xFF	; 255
 978:	9f e7       	ldi	r25, 0x7F	; 127
 97a:	9e 83       	std	Y+6, r25	; 0x06
 97c:	8d 83       	std	Y+5, r24	; 0x05
 97e:	ae 01       	movw	r20, r28
 980:	47 5e       	subi	r20, 0xE7	; 231
 982:	5f 4f       	sbci	r21, 0xFF	; 255
 984:	6f 89       	ldd	r22, Y+23	; 0x17
 986:	78 8d       	ldd	r23, Y+24	; 0x18
 988:	ce 01       	movw	r24, r28
 98a:	01 96       	adiw	r24, 0x01	; 1
 98c:	08 d0       	rcall	.+16     	; 0x99e <vfprintf>
 98e:	ef 81       	ldd	r30, Y+7	; 0x07
 990:	f8 85       	ldd	r31, Y+8	; 0x08
 992:	e0 0f       	add	r30, r16
 994:	f1 1f       	adc	r31, r17
 996:	10 82       	st	Z, r1
 998:	2e 96       	adiw	r28, 0x0e	; 14
 99a:	e4 e0       	ldi	r30, 0x04	; 4
 99c:	ac c2       	rjmp	.+1368   	; 0xef6 <__epilogue_restores__+0x1c>

0000099e <vfprintf>:
 99e:	ab e0       	ldi	r26, 0x0B	; 11
 9a0:	b0 e0       	ldi	r27, 0x00	; 0
 9a2:	e4 ed       	ldi	r30, 0xD4	; 212
 9a4:	f4 e0       	ldi	r31, 0x04	; 4
 9a6:	7d c2       	rjmp	.+1274   	; 0xea2 <__prologue_saves__>
 9a8:	6c 01       	movw	r12, r24
 9aa:	7b 01       	movw	r14, r22
 9ac:	8a 01       	movw	r16, r20
 9ae:	fc 01       	movw	r30, r24
 9b0:	17 82       	std	Z+7, r1	; 0x07
 9b2:	16 82       	std	Z+6, r1	; 0x06
 9b4:	83 81       	ldd	r24, Z+3	; 0x03
 9b6:	81 ff       	sbrs	r24, 1
 9b8:	bf c1       	rjmp	.+894    	; 0xd38 <vfprintf+0x39a>
 9ba:	ce 01       	movw	r24, r28
 9bc:	01 96       	adiw	r24, 0x01	; 1
 9be:	3c 01       	movw	r6, r24
 9c0:	f6 01       	movw	r30, r12
 9c2:	93 81       	ldd	r25, Z+3	; 0x03
 9c4:	f7 01       	movw	r30, r14
 9c6:	93 fd       	sbrc	r25, 3
 9c8:	85 91       	lpm	r24, Z+
 9ca:	93 ff       	sbrs	r25, 3
 9cc:	81 91       	ld	r24, Z+
 9ce:	7f 01       	movw	r14, r30
 9d0:	88 23       	and	r24, r24
 9d2:	09 f4       	brne	.+2      	; 0x9d6 <vfprintf+0x38>
 9d4:	ad c1       	rjmp	.+858    	; 0xd30 <vfprintf+0x392>
 9d6:	85 32       	cpi	r24, 0x25	; 37
 9d8:	39 f4       	brne	.+14     	; 0x9e8 <vfprintf+0x4a>
 9da:	93 fd       	sbrc	r25, 3
 9dc:	85 91       	lpm	r24, Z+
 9de:	93 ff       	sbrs	r25, 3
 9e0:	81 91       	ld	r24, Z+
 9e2:	7f 01       	movw	r14, r30
 9e4:	85 32       	cpi	r24, 0x25	; 37
 9e6:	21 f4       	brne	.+8      	; 0x9f0 <vfprintf+0x52>
 9e8:	b6 01       	movw	r22, r12
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	c0 d1       	rcall	.+896    	; 0xd6e <fputc>
 9ee:	e8 cf       	rjmp	.-48     	; 0x9c0 <vfprintf+0x22>
 9f0:	91 2c       	mov	r9, r1
 9f2:	21 2c       	mov	r2, r1
 9f4:	31 2c       	mov	r3, r1
 9f6:	ff e1       	ldi	r31, 0x1F	; 31
 9f8:	f3 15       	cp	r31, r3
 9fa:	d8 f0       	brcs	.+54     	; 0xa32 <vfprintf+0x94>
 9fc:	8b 32       	cpi	r24, 0x2B	; 43
 9fe:	79 f0       	breq	.+30     	; 0xa1e <vfprintf+0x80>
 a00:	38 f4       	brcc	.+14     	; 0xa10 <vfprintf+0x72>
 a02:	80 32       	cpi	r24, 0x20	; 32
 a04:	79 f0       	breq	.+30     	; 0xa24 <vfprintf+0x86>
 a06:	83 32       	cpi	r24, 0x23	; 35
 a08:	a1 f4       	brne	.+40     	; 0xa32 <vfprintf+0x94>
 a0a:	23 2d       	mov	r18, r3
 a0c:	20 61       	ori	r18, 0x10	; 16
 a0e:	1d c0       	rjmp	.+58     	; 0xa4a <vfprintf+0xac>
 a10:	8d 32       	cpi	r24, 0x2D	; 45
 a12:	61 f0       	breq	.+24     	; 0xa2c <vfprintf+0x8e>
 a14:	80 33       	cpi	r24, 0x30	; 48
 a16:	69 f4       	brne	.+26     	; 0xa32 <vfprintf+0x94>
 a18:	23 2d       	mov	r18, r3
 a1a:	21 60       	ori	r18, 0x01	; 1
 a1c:	16 c0       	rjmp	.+44     	; 0xa4a <vfprintf+0xac>
 a1e:	83 2d       	mov	r24, r3
 a20:	82 60       	ori	r24, 0x02	; 2
 a22:	38 2e       	mov	r3, r24
 a24:	e3 2d       	mov	r30, r3
 a26:	e4 60       	ori	r30, 0x04	; 4
 a28:	3e 2e       	mov	r3, r30
 a2a:	2a c0       	rjmp	.+84     	; 0xa80 <vfprintf+0xe2>
 a2c:	f3 2d       	mov	r31, r3
 a2e:	f8 60       	ori	r31, 0x08	; 8
 a30:	1d c0       	rjmp	.+58     	; 0xa6c <vfprintf+0xce>
 a32:	37 fc       	sbrc	r3, 7
 a34:	2d c0       	rjmp	.+90     	; 0xa90 <vfprintf+0xf2>
 a36:	20 ed       	ldi	r18, 0xD0	; 208
 a38:	28 0f       	add	r18, r24
 a3a:	2a 30       	cpi	r18, 0x0A	; 10
 a3c:	40 f0       	brcs	.+16     	; 0xa4e <vfprintf+0xb0>
 a3e:	8e 32       	cpi	r24, 0x2E	; 46
 a40:	b9 f4       	brne	.+46     	; 0xa70 <vfprintf+0xd2>
 a42:	36 fc       	sbrc	r3, 6
 a44:	75 c1       	rjmp	.+746    	; 0xd30 <vfprintf+0x392>
 a46:	23 2d       	mov	r18, r3
 a48:	20 64       	ori	r18, 0x40	; 64
 a4a:	32 2e       	mov	r3, r18
 a4c:	19 c0       	rjmp	.+50     	; 0xa80 <vfprintf+0xe2>
 a4e:	36 fe       	sbrs	r3, 6
 a50:	06 c0       	rjmp	.+12     	; 0xa5e <vfprintf+0xc0>
 a52:	8a e0       	ldi	r24, 0x0A	; 10
 a54:	98 9e       	mul	r9, r24
 a56:	20 0d       	add	r18, r0
 a58:	11 24       	eor	r1, r1
 a5a:	92 2e       	mov	r9, r18
 a5c:	11 c0       	rjmp	.+34     	; 0xa80 <vfprintf+0xe2>
 a5e:	ea e0       	ldi	r30, 0x0A	; 10
 a60:	2e 9e       	mul	r2, r30
 a62:	20 0d       	add	r18, r0
 a64:	11 24       	eor	r1, r1
 a66:	22 2e       	mov	r2, r18
 a68:	f3 2d       	mov	r31, r3
 a6a:	f0 62       	ori	r31, 0x20	; 32
 a6c:	3f 2e       	mov	r3, r31
 a6e:	08 c0       	rjmp	.+16     	; 0xa80 <vfprintf+0xe2>
 a70:	8c 36       	cpi	r24, 0x6C	; 108
 a72:	21 f4       	brne	.+8      	; 0xa7c <vfprintf+0xde>
 a74:	83 2d       	mov	r24, r3
 a76:	80 68       	ori	r24, 0x80	; 128
 a78:	38 2e       	mov	r3, r24
 a7a:	02 c0       	rjmp	.+4      	; 0xa80 <vfprintf+0xe2>
 a7c:	88 36       	cpi	r24, 0x68	; 104
 a7e:	41 f4       	brne	.+16     	; 0xa90 <vfprintf+0xf2>
 a80:	f7 01       	movw	r30, r14
 a82:	93 fd       	sbrc	r25, 3
 a84:	85 91       	lpm	r24, Z+
 a86:	93 ff       	sbrs	r25, 3
 a88:	81 91       	ld	r24, Z+
 a8a:	7f 01       	movw	r14, r30
 a8c:	81 11       	cpse	r24, r1
 a8e:	b3 cf       	rjmp	.-154    	; 0x9f6 <vfprintf+0x58>
 a90:	98 2f       	mov	r25, r24
 a92:	9f 7d       	andi	r25, 0xDF	; 223
 a94:	95 54       	subi	r25, 0x45	; 69
 a96:	93 30       	cpi	r25, 0x03	; 3
 a98:	28 f4       	brcc	.+10     	; 0xaa4 <vfprintf+0x106>
 a9a:	0c 5f       	subi	r16, 0xFC	; 252
 a9c:	1f 4f       	sbci	r17, 0xFF	; 255
 a9e:	9f e3       	ldi	r25, 0x3F	; 63
 aa0:	99 83       	std	Y+1, r25	; 0x01
 aa2:	0d c0       	rjmp	.+26     	; 0xabe <vfprintf+0x120>
 aa4:	83 36       	cpi	r24, 0x63	; 99
 aa6:	31 f0       	breq	.+12     	; 0xab4 <vfprintf+0x116>
 aa8:	83 37       	cpi	r24, 0x73	; 115
 aaa:	71 f0       	breq	.+28     	; 0xac8 <vfprintf+0x12a>
 aac:	83 35       	cpi	r24, 0x53	; 83
 aae:	09 f0       	breq	.+2      	; 0xab2 <vfprintf+0x114>
 ab0:	55 c0       	rjmp	.+170    	; 0xb5c <vfprintf+0x1be>
 ab2:	20 c0       	rjmp	.+64     	; 0xaf4 <vfprintf+0x156>
 ab4:	f8 01       	movw	r30, r16
 ab6:	80 81       	ld	r24, Z
 ab8:	89 83       	std	Y+1, r24	; 0x01
 aba:	0e 5f       	subi	r16, 0xFE	; 254
 abc:	1f 4f       	sbci	r17, 0xFF	; 255
 abe:	88 24       	eor	r8, r8
 ac0:	83 94       	inc	r8
 ac2:	91 2c       	mov	r9, r1
 ac4:	53 01       	movw	r10, r6
 ac6:	12 c0       	rjmp	.+36     	; 0xaec <vfprintf+0x14e>
 ac8:	28 01       	movw	r4, r16
 aca:	f2 e0       	ldi	r31, 0x02	; 2
 acc:	4f 0e       	add	r4, r31
 ace:	51 1c       	adc	r5, r1
 ad0:	f8 01       	movw	r30, r16
 ad2:	a0 80       	ld	r10, Z
 ad4:	b1 80       	ldd	r11, Z+1	; 0x01
 ad6:	36 fe       	sbrs	r3, 6
 ad8:	03 c0       	rjmp	.+6      	; 0xae0 <vfprintf+0x142>
 ada:	69 2d       	mov	r22, r9
 adc:	70 e0       	ldi	r23, 0x00	; 0
 ade:	02 c0       	rjmp	.+4      	; 0xae4 <vfprintf+0x146>
 ae0:	6f ef       	ldi	r22, 0xFF	; 255
 ae2:	7f ef       	ldi	r23, 0xFF	; 255
 ae4:	c5 01       	movw	r24, r10
 ae6:	38 d1       	rcall	.+624    	; 0xd58 <strnlen>
 ae8:	4c 01       	movw	r8, r24
 aea:	82 01       	movw	r16, r4
 aec:	f3 2d       	mov	r31, r3
 aee:	ff 77       	andi	r31, 0x7F	; 127
 af0:	3f 2e       	mov	r3, r31
 af2:	15 c0       	rjmp	.+42     	; 0xb1e <vfprintf+0x180>
 af4:	28 01       	movw	r4, r16
 af6:	22 e0       	ldi	r18, 0x02	; 2
 af8:	42 0e       	add	r4, r18
 afa:	51 1c       	adc	r5, r1
 afc:	f8 01       	movw	r30, r16
 afe:	a0 80       	ld	r10, Z
 b00:	b1 80       	ldd	r11, Z+1	; 0x01
 b02:	36 fe       	sbrs	r3, 6
 b04:	03 c0       	rjmp	.+6      	; 0xb0c <vfprintf+0x16e>
 b06:	69 2d       	mov	r22, r9
 b08:	70 e0       	ldi	r23, 0x00	; 0
 b0a:	02 c0       	rjmp	.+4      	; 0xb10 <vfprintf+0x172>
 b0c:	6f ef       	ldi	r22, 0xFF	; 255
 b0e:	7f ef       	ldi	r23, 0xFF	; 255
 b10:	c5 01       	movw	r24, r10
 b12:	17 d1       	rcall	.+558    	; 0xd42 <strnlen_P>
 b14:	4c 01       	movw	r8, r24
 b16:	f3 2d       	mov	r31, r3
 b18:	f0 68       	ori	r31, 0x80	; 128
 b1a:	3f 2e       	mov	r3, r31
 b1c:	82 01       	movw	r16, r4
 b1e:	33 fc       	sbrc	r3, 3
 b20:	19 c0       	rjmp	.+50     	; 0xb54 <vfprintf+0x1b6>
 b22:	82 2d       	mov	r24, r2
 b24:	90 e0       	ldi	r25, 0x00	; 0
 b26:	88 16       	cp	r8, r24
 b28:	99 06       	cpc	r9, r25
 b2a:	a0 f4       	brcc	.+40     	; 0xb54 <vfprintf+0x1b6>
 b2c:	b6 01       	movw	r22, r12
 b2e:	80 e2       	ldi	r24, 0x20	; 32
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	1d d1       	rcall	.+570    	; 0xd6e <fputc>
 b34:	2a 94       	dec	r2
 b36:	f5 cf       	rjmp	.-22     	; 0xb22 <vfprintf+0x184>
 b38:	f5 01       	movw	r30, r10
 b3a:	37 fc       	sbrc	r3, 7
 b3c:	85 91       	lpm	r24, Z+
 b3e:	37 fe       	sbrs	r3, 7
 b40:	81 91       	ld	r24, Z+
 b42:	5f 01       	movw	r10, r30
 b44:	b6 01       	movw	r22, r12
 b46:	90 e0       	ldi	r25, 0x00	; 0
 b48:	12 d1       	rcall	.+548    	; 0xd6e <fputc>
 b4a:	21 10       	cpse	r2, r1
 b4c:	2a 94       	dec	r2
 b4e:	21 e0       	ldi	r18, 0x01	; 1
 b50:	82 1a       	sub	r8, r18
 b52:	91 08       	sbc	r9, r1
 b54:	81 14       	cp	r8, r1
 b56:	91 04       	cpc	r9, r1
 b58:	79 f7       	brne	.-34     	; 0xb38 <vfprintf+0x19a>
 b5a:	e1 c0       	rjmp	.+450    	; 0xd1e <vfprintf+0x380>
 b5c:	84 36       	cpi	r24, 0x64	; 100
 b5e:	11 f0       	breq	.+4      	; 0xb64 <vfprintf+0x1c6>
 b60:	89 36       	cpi	r24, 0x69	; 105
 b62:	39 f5       	brne	.+78     	; 0xbb2 <vfprintf+0x214>
 b64:	f8 01       	movw	r30, r16
 b66:	37 fe       	sbrs	r3, 7
 b68:	07 c0       	rjmp	.+14     	; 0xb78 <vfprintf+0x1da>
 b6a:	60 81       	ld	r22, Z
 b6c:	71 81       	ldd	r23, Z+1	; 0x01
 b6e:	82 81       	ldd	r24, Z+2	; 0x02
 b70:	93 81       	ldd	r25, Z+3	; 0x03
 b72:	0c 5f       	subi	r16, 0xFC	; 252
 b74:	1f 4f       	sbci	r17, 0xFF	; 255
 b76:	08 c0       	rjmp	.+16     	; 0xb88 <vfprintf+0x1ea>
 b78:	60 81       	ld	r22, Z
 b7a:	71 81       	ldd	r23, Z+1	; 0x01
 b7c:	07 2e       	mov	r0, r23
 b7e:	00 0c       	add	r0, r0
 b80:	88 0b       	sbc	r24, r24
 b82:	99 0b       	sbc	r25, r25
 b84:	0e 5f       	subi	r16, 0xFE	; 254
 b86:	1f 4f       	sbci	r17, 0xFF	; 255
 b88:	f3 2d       	mov	r31, r3
 b8a:	ff 76       	andi	r31, 0x6F	; 111
 b8c:	3f 2e       	mov	r3, r31
 b8e:	97 ff       	sbrs	r25, 7
 b90:	09 c0       	rjmp	.+18     	; 0xba4 <vfprintf+0x206>
 b92:	90 95       	com	r25
 b94:	80 95       	com	r24
 b96:	70 95       	com	r23
 b98:	61 95       	neg	r22
 b9a:	7f 4f       	sbci	r23, 0xFF	; 255
 b9c:	8f 4f       	sbci	r24, 0xFF	; 255
 b9e:	9f 4f       	sbci	r25, 0xFF	; 255
 ba0:	f0 68       	ori	r31, 0x80	; 128
 ba2:	3f 2e       	mov	r3, r31
 ba4:	2a e0       	ldi	r18, 0x0A	; 10
 ba6:	30 e0       	ldi	r19, 0x00	; 0
 ba8:	a3 01       	movw	r20, r6
 baa:	1d d1       	rcall	.+570    	; 0xde6 <__ultoa_invert>
 bac:	88 2e       	mov	r8, r24
 bae:	86 18       	sub	r8, r6
 bb0:	44 c0       	rjmp	.+136    	; 0xc3a <vfprintf+0x29c>
 bb2:	85 37       	cpi	r24, 0x75	; 117
 bb4:	31 f4       	brne	.+12     	; 0xbc2 <vfprintf+0x224>
 bb6:	23 2d       	mov	r18, r3
 bb8:	2f 7e       	andi	r18, 0xEF	; 239
 bba:	b2 2e       	mov	r11, r18
 bbc:	2a e0       	ldi	r18, 0x0A	; 10
 bbe:	30 e0       	ldi	r19, 0x00	; 0
 bc0:	25 c0       	rjmp	.+74     	; 0xc0c <vfprintf+0x26e>
 bc2:	93 2d       	mov	r25, r3
 bc4:	99 7f       	andi	r25, 0xF9	; 249
 bc6:	b9 2e       	mov	r11, r25
 bc8:	8f 36       	cpi	r24, 0x6F	; 111
 bca:	c1 f0       	breq	.+48     	; 0xbfc <vfprintf+0x25e>
 bcc:	18 f4       	brcc	.+6      	; 0xbd4 <vfprintf+0x236>
 bce:	88 35       	cpi	r24, 0x58	; 88
 bd0:	79 f0       	breq	.+30     	; 0xbf0 <vfprintf+0x252>
 bd2:	ae c0       	rjmp	.+348    	; 0xd30 <vfprintf+0x392>
 bd4:	80 37       	cpi	r24, 0x70	; 112
 bd6:	19 f0       	breq	.+6      	; 0xbde <vfprintf+0x240>
 bd8:	88 37       	cpi	r24, 0x78	; 120
 bda:	21 f0       	breq	.+8      	; 0xbe4 <vfprintf+0x246>
 bdc:	a9 c0       	rjmp	.+338    	; 0xd30 <vfprintf+0x392>
 bde:	e9 2f       	mov	r30, r25
 be0:	e0 61       	ori	r30, 0x10	; 16
 be2:	be 2e       	mov	r11, r30
 be4:	b4 fe       	sbrs	r11, 4
 be6:	0d c0       	rjmp	.+26     	; 0xc02 <vfprintf+0x264>
 be8:	fb 2d       	mov	r31, r11
 bea:	f4 60       	ori	r31, 0x04	; 4
 bec:	bf 2e       	mov	r11, r31
 bee:	09 c0       	rjmp	.+18     	; 0xc02 <vfprintf+0x264>
 bf0:	34 fe       	sbrs	r3, 4
 bf2:	0a c0       	rjmp	.+20     	; 0xc08 <vfprintf+0x26a>
 bf4:	29 2f       	mov	r18, r25
 bf6:	26 60       	ori	r18, 0x06	; 6
 bf8:	b2 2e       	mov	r11, r18
 bfa:	06 c0       	rjmp	.+12     	; 0xc08 <vfprintf+0x26a>
 bfc:	28 e0       	ldi	r18, 0x08	; 8
 bfe:	30 e0       	ldi	r19, 0x00	; 0
 c00:	05 c0       	rjmp	.+10     	; 0xc0c <vfprintf+0x26e>
 c02:	20 e1       	ldi	r18, 0x10	; 16
 c04:	30 e0       	ldi	r19, 0x00	; 0
 c06:	02 c0       	rjmp	.+4      	; 0xc0c <vfprintf+0x26e>
 c08:	20 e1       	ldi	r18, 0x10	; 16
 c0a:	32 e0       	ldi	r19, 0x02	; 2
 c0c:	f8 01       	movw	r30, r16
 c0e:	b7 fe       	sbrs	r11, 7
 c10:	07 c0       	rjmp	.+14     	; 0xc20 <vfprintf+0x282>
 c12:	60 81       	ld	r22, Z
 c14:	71 81       	ldd	r23, Z+1	; 0x01
 c16:	82 81       	ldd	r24, Z+2	; 0x02
 c18:	93 81       	ldd	r25, Z+3	; 0x03
 c1a:	0c 5f       	subi	r16, 0xFC	; 252
 c1c:	1f 4f       	sbci	r17, 0xFF	; 255
 c1e:	06 c0       	rjmp	.+12     	; 0xc2c <vfprintf+0x28e>
 c20:	60 81       	ld	r22, Z
 c22:	71 81       	ldd	r23, Z+1	; 0x01
 c24:	80 e0       	ldi	r24, 0x00	; 0
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	0e 5f       	subi	r16, 0xFE	; 254
 c2a:	1f 4f       	sbci	r17, 0xFF	; 255
 c2c:	a3 01       	movw	r20, r6
 c2e:	db d0       	rcall	.+438    	; 0xde6 <__ultoa_invert>
 c30:	88 2e       	mov	r8, r24
 c32:	86 18       	sub	r8, r6
 c34:	fb 2d       	mov	r31, r11
 c36:	ff 77       	andi	r31, 0x7F	; 127
 c38:	3f 2e       	mov	r3, r31
 c3a:	36 fe       	sbrs	r3, 6
 c3c:	0d c0       	rjmp	.+26     	; 0xc58 <vfprintf+0x2ba>
 c3e:	23 2d       	mov	r18, r3
 c40:	2e 7f       	andi	r18, 0xFE	; 254
 c42:	a2 2e       	mov	r10, r18
 c44:	89 14       	cp	r8, r9
 c46:	58 f4       	brcc	.+22     	; 0xc5e <vfprintf+0x2c0>
 c48:	34 fe       	sbrs	r3, 4
 c4a:	0b c0       	rjmp	.+22     	; 0xc62 <vfprintf+0x2c4>
 c4c:	32 fc       	sbrc	r3, 2
 c4e:	09 c0       	rjmp	.+18     	; 0xc62 <vfprintf+0x2c4>
 c50:	83 2d       	mov	r24, r3
 c52:	8e 7e       	andi	r24, 0xEE	; 238
 c54:	a8 2e       	mov	r10, r24
 c56:	05 c0       	rjmp	.+10     	; 0xc62 <vfprintf+0x2c4>
 c58:	b8 2c       	mov	r11, r8
 c5a:	a3 2c       	mov	r10, r3
 c5c:	03 c0       	rjmp	.+6      	; 0xc64 <vfprintf+0x2c6>
 c5e:	b8 2c       	mov	r11, r8
 c60:	01 c0       	rjmp	.+2      	; 0xc64 <vfprintf+0x2c6>
 c62:	b9 2c       	mov	r11, r9
 c64:	a4 fe       	sbrs	r10, 4
 c66:	0f c0       	rjmp	.+30     	; 0xc86 <vfprintf+0x2e8>
 c68:	fe 01       	movw	r30, r28
 c6a:	e8 0d       	add	r30, r8
 c6c:	f1 1d       	adc	r31, r1
 c6e:	80 81       	ld	r24, Z
 c70:	80 33       	cpi	r24, 0x30	; 48
 c72:	21 f4       	brne	.+8      	; 0xc7c <vfprintf+0x2de>
 c74:	9a 2d       	mov	r25, r10
 c76:	99 7e       	andi	r25, 0xE9	; 233
 c78:	a9 2e       	mov	r10, r25
 c7a:	09 c0       	rjmp	.+18     	; 0xc8e <vfprintf+0x2f0>
 c7c:	a2 fe       	sbrs	r10, 2
 c7e:	06 c0       	rjmp	.+12     	; 0xc8c <vfprintf+0x2ee>
 c80:	b3 94       	inc	r11
 c82:	b3 94       	inc	r11
 c84:	04 c0       	rjmp	.+8      	; 0xc8e <vfprintf+0x2f0>
 c86:	8a 2d       	mov	r24, r10
 c88:	86 78       	andi	r24, 0x86	; 134
 c8a:	09 f0       	breq	.+2      	; 0xc8e <vfprintf+0x2f0>
 c8c:	b3 94       	inc	r11
 c8e:	a3 fc       	sbrc	r10, 3
 c90:	10 c0       	rjmp	.+32     	; 0xcb2 <vfprintf+0x314>
 c92:	a0 fe       	sbrs	r10, 0
 c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0x304>
 c96:	b2 14       	cp	r11, r2
 c98:	80 f4       	brcc	.+32     	; 0xcba <vfprintf+0x31c>
 c9a:	28 0c       	add	r2, r8
 c9c:	92 2c       	mov	r9, r2
 c9e:	9b 18       	sub	r9, r11
 ca0:	0d c0       	rjmp	.+26     	; 0xcbc <vfprintf+0x31e>
 ca2:	b2 14       	cp	r11, r2
 ca4:	58 f4       	brcc	.+22     	; 0xcbc <vfprintf+0x31e>
 ca6:	b6 01       	movw	r22, r12
 ca8:	80 e2       	ldi	r24, 0x20	; 32
 caa:	90 e0       	ldi	r25, 0x00	; 0
 cac:	60 d0       	rcall	.+192    	; 0xd6e <fputc>
 cae:	b3 94       	inc	r11
 cb0:	f8 cf       	rjmp	.-16     	; 0xca2 <vfprintf+0x304>
 cb2:	b2 14       	cp	r11, r2
 cb4:	18 f4       	brcc	.+6      	; 0xcbc <vfprintf+0x31e>
 cb6:	2b 18       	sub	r2, r11
 cb8:	02 c0       	rjmp	.+4      	; 0xcbe <vfprintf+0x320>
 cba:	98 2c       	mov	r9, r8
 cbc:	21 2c       	mov	r2, r1
 cbe:	a4 fe       	sbrs	r10, 4
 cc0:	0f c0       	rjmp	.+30     	; 0xce0 <vfprintf+0x342>
 cc2:	b6 01       	movw	r22, r12
 cc4:	80 e3       	ldi	r24, 0x30	; 48
 cc6:	90 e0       	ldi	r25, 0x00	; 0
 cc8:	52 d0       	rcall	.+164    	; 0xd6e <fputc>
 cca:	a2 fe       	sbrs	r10, 2
 ccc:	16 c0       	rjmp	.+44     	; 0xcfa <vfprintf+0x35c>
 cce:	a1 fc       	sbrc	r10, 1
 cd0:	03 c0       	rjmp	.+6      	; 0xcd8 <vfprintf+0x33a>
 cd2:	88 e7       	ldi	r24, 0x78	; 120
 cd4:	90 e0       	ldi	r25, 0x00	; 0
 cd6:	02 c0       	rjmp	.+4      	; 0xcdc <vfprintf+0x33e>
 cd8:	88 e5       	ldi	r24, 0x58	; 88
 cda:	90 e0       	ldi	r25, 0x00	; 0
 cdc:	b6 01       	movw	r22, r12
 cde:	0c c0       	rjmp	.+24     	; 0xcf8 <vfprintf+0x35a>
 ce0:	8a 2d       	mov	r24, r10
 ce2:	86 78       	andi	r24, 0x86	; 134
 ce4:	51 f0       	breq	.+20     	; 0xcfa <vfprintf+0x35c>
 ce6:	a1 fe       	sbrs	r10, 1
 ce8:	02 c0       	rjmp	.+4      	; 0xcee <vfprintf+0x350>
 cea:	8b e2       	ldi	r24, 0x2B	; 43
 cec:	01 c0       	rjmp	.+2      	; 0xcf0 <vfprintf+0x352>
 cee:	80 e2       	ldi	r24, 0x20	; 32
 cf0:	a7 fc       	sbrc	r10, 7
 cf2:	8d e2       	ldi	r24, 0x2D	; 45
 cf4:	b6 01       	movw	r22, r12
 cf6:	90 e0       	ldi	r25, 0x00	; 0
 cf8:	3a d0       	rcall	.+116    	; 0xd6e <fputc>
 cfa:	89 14       	cp	r8, r9
 cfc:	30 f4       	brcc	.+12     	; 0xd0a <vfprintf+0x36c>
 cfe:	b6 01       	movw	r22, r12
 d00:	80 e3       	ldi	r24, 0x30	; 48
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	34 d0       	rcall	.+104    	; 0xd6e <fputc>
 d06:	9a 94       	dec	r9
 d08:	f8 cf       	rjmp	.-16     	; 0xcfa <vfprintf+0x35c>
 d0a:	8a 94       	dec	r8
 d0c:	f3 01       	movw	r30, r6
 d0e:	e8 0d       	add	r30, r8
 d10:	f1 1d       	adc	r31, r1
 d12:	80 81       	ld	r24, Z
 d14:	b6 01       	movw	r22, r12
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	2a d0       	rcall	.+84     	; 0xd6e <fputc>
 d1a:	81 10       	cpse	r8, r1
 d1c:	f6 cf       	rjmp	.-20     	; 0xd0a <vfprintf+0x36c>
 d1e:	22 20       	and	r2, r2
 d20:	09 f4       	brne	.+2      	; 0xd24 <vfprintf+0x386>
 d22:	4e ce       	rjmp	.-868    	; 0x9c0 <vfprintf+0x22>
 d24:	b6 01       	movw	r22, r12
 d26:	80 e2       	ldi	r24, 0x20	; 32
 d28:	90 e0       	ldi	r25, 0x00	; 0
 d2a:	21 d0       	rcall	.+66     	; 0xd6e <fputc>
 d2c:	2a 94       	dec	r2
 d2e:	f7 cf       	rjmp	.-18     	; 0xd1e <vfprintf+0x380>
 d30:	f6 01       	movw	r30, r12
 d32:	86 81       	ldd	r24, Z+6	; 0x06
 d34:	97 81       	ldd	r25, Z+7	; 0x07
 d36:	02 c0       	rjmp	.+4      	; 0xd3c <vfprintf+0x39e>
 d38:	8f ef       	ldi	r24, 0xFF	; 255
 d3a:	9f ef       	ldi	r25, 0xFF	; 255
 d3c:	2b 96       	adiw	r28, 0x0b	; 11
 d3e:	e2 e1       	ldi	r30, 0x12	; 18
 d40:	cc c0       	rjmp	.+408    	; 0xeda <__epilogue_restores__>

00000d42 <strnlen_P>:
 d42:	fc 01       	movw	r30, r24
 d44:	05 90       	lpm	r0, Z+
 d46:	61 50       	subi	r22, 0x01	; 1
 d48:	70 40       	sbci	r23, 0x00	; 0
 d4a:	01 10       	cpse	r0, r1
 d4c:	d8 f7       	brcc	.-10     	; 0xd44 <strnlen_P+0x2>
 d4e:	80 95       	com	r24
 d50:	90 95       	com	r25
 d52:	8e 0f       	add	r24, r30
 d54:	9f 1f       	adc	r25, r31
 d56:	08 95       	ret

00000d58 <strnlen>:
 d58:	fc 01       	movw	r30, r24
 d5a:	61 50       	subi	r22, 0x01	; 1
 d5c:	70 40       	sbci	r23, 0x00	; 0
 d5e:	01 90       	ld	r0, Z+
 d60:	01 10       	cpse	r0, r1
 d62:	d8 f7       	brcc	.-10     	; 0xd5a <strnlen+0x2>
 d64:	80 95       	com	r24
 d66:	90 95       	com	r25
 d68:	8e 0f       	add	r24, r30
 d6a:	9f 1f       	adc	r25, r31
 d6c:	08 95       	ret

00000d6e <fputc>:
 d6e:	0f 93       	push	r16
 d70:	1f 93       	push	r17
 d72:	cf 93       	push	r28
 d74:	df 93       	push	r29
 d76:	fb 01       	movw	r30, r22
 d78:	23 81       	ldd	r18, Z+3	; 0x03
 d7a:	21 fd       	sbrc	r18, 1
 d7c:	03 c0       	rjmp	.+6      	; 0xd84 <fputc+0x16>
 d7e:	8f ef       	ldi	r24, 0xFF	; 255
 d80:	9f ef       	ldi	r25, 0xFF	; 255
 d82:	2c c0       	rjmp	.+88     	; 0xddc <fputc+0x6e>
 d84:	22 ff       	sbrs	r18, 2
 d86:	16 c0       	rjmp	.+44     	; 0xdb4 <fputc+0x46>
 d88:	46 81       	ldd	r20, Z+6	; 0x06
 d8a:	57 81       	ldd	r21, Z+7	; 0x07
 d8c:	24 81       	ldd	r18, Z+4	; 0x04
 d8e:	35 81       	ldd	r19, Z+5	; 0x05
 d90:	42 17       	cp	r20, r18
 d92:	53 07       	cpc	r21, r19
 d94:	44 f4       	brge	.+16     	; 0xda6 <fputc+0x38>
 d96:	a0 81       	ld	r26, Z
 d98:	b1 81       	ldd	r27, Z+1	; 0x01
 d9a:	9d 01       	movw	r18, r26
 d9c:	2f 5f       	subi	r18, 0xFF	; 255
 d9e:	3f 4f       	sbci	r19, 0xFF	; 255
 da0:	31 83       	std	Z+1, r19	; 0x01
 da2:	20 83       	st	Z, r18
 da4:	8c 93       	st	X, r24
 da6:	26 81       	ldd	r18, Z+6	; 0x06
 da8:	37 81       	ldd	r19, Z+7	; 0x07
 daa:	2f 5f       	subi	r18, 0xFF	; 255
 dac:	3f 4f       	sbci	r19, 0xFF	; 255
 dae:	37 83       	std	Z+7, r19	; 0x07
 db0:	26 83       	std	Z+6, r18	; 0x06
 db2:	14 c0       	rjmp	.+40     	; 0xddc <fputc+0x6e>
 db4:	8b 01       	movw	r16, r22
 db6:	ec 01       	movw	r28, r24
 db8:	fb 01       	movw	r30, r22
 dba:	00 84       	ldd	r0, Z+8	; 0x08
 dbc:	f1 85       	ldd	r31, Z+9	; 0x09
 dbe:	e0 2d       	mov	r30, r0
 dc0:	09 95       	icall
 dc2:	89 2b       	or	r24, r25
 dc4:	e1 f6       	brne	.-72     	; 0xd7e <fputc+0x10>
 dc6:	d8 01       	movw	r26, r16
 dc8:	16 96       	adiw	r26, 0x06	; 6
 dca:	8d 91       	ld	r24, X+
 dcc:	9c 91       	ld	r25, X
 dce:	17 97       	sbiw	r26, 0x07	; 7
 dd0:	01 96       	adiw	r24, 0x01	; 1
 dd2:	17 96       	adiw	r26, 0x07	; 7
 dd4:	9c 93       	st	X, r25
 dd6:	8e 93       	st	-X, r24
 dd8:	16 97       	sbiw	r26, 0x06	; 6
 dda:	ce 01       	movw	r24, r28
 ddc:	df 91       	pop	r29
 dde:	cf 91       	pop	r28
 de0:	1f 91       	pop	r17
 de2:	0f 91       	pop	r16
 de4:	08 95       	ret

00000de6 <__ultoa_invert>:
 de6:	fa 01       	movw	r30, r20
 de8:	aa 27       	eor	r26, r26
 dea:	28 30       	cpi	r18, 0x08	; 8
 dec:	51 f1       	breq	.+84     	; 0xe42 <__ultoa_invert+0x5c>
 dee:	20 31       	cpi	r18, 0x10	; 16
 df0:	81 f1       	breq	.+96     	; 0xe52 <__ultoa_invert+0x6c>
 df2:	e8 94       	clt
 df4:	6f 93       	push	r22
 df6:	6e 7f       	andi	r22, 0xFE	; 254
 df8:	6e 5f       	subi	r22, 0xFE	; 254
 dfa:	7f 4f       	sbci	r23, 0xFF	; 255
 dfc:	8f 4f       	sbci	r24, 0xFF	; 255
 dfe:	9f 4f       	sbci	r25, 0xFF	; 255
 e00:	af 4f       	sbci	r26, 0xFF	; 255
 e02:	b1 e0       	ldi	r27, 0x01	; 1
 e04:	3e d0       	rcall	.+124    	; 0xe82 <__ultoa_invert+0x9c>
 e06:	b4 e0       	ldi	r27, 0x04	; 4
 e08:	3c d0       	rcall	.+120    	; 0xe82 <__ultoa_invert+0x9c>
 e0a:	67 0f       	add	r22, r23
 e0c:	78 1f       	adc	r23, r24
 e0e:	89 1f       	adc	r24, r25
 e10:	9a 1f       	adc	r25, r26
 e12:	a1 1d       	adc	r26, r1
 e14:	68 0f       	add	r22, r24
 e16:	79 1f       	adc	r23, r25
 e18:	8a 1f       	adc	r24, r26
 e1a:	91 1d       	adc	r25, r1
 e1c:	a1 1d       	adc	r26, r1
 e1e:	6a 0f       	add	r22, r26
 e20:	71 1d       	adc	r23, r1
 e22:	81 1d       	adc	r24, r1
 e24:	91 1d       	adc	r25, r1
 e26:	a1 1d       	adc	r26, r1
 e28:	20 d0       	rcall	.+64     	; 0xe6a <__ultoa_invert+0x84>
 e2a:	09 f4       	brne	.+2      	; 0xe2e <__ultoa_invert+0x48>
 e2c:	68 94       	set
 e2e:	3f 91       	pop	r19
 e30:	2a e0       	ldi	r18, 0x0A	; 10
 e32:	26 9f       	mul	r18, r22
 e34:	11 24       	eor	r1, r1
 e36:	30 19       	sub	r19, r0
 e38:	30 5d       	subi	r19, 0xD0	; 208
 e3a:	31 93       	st	Z+, r19
 e3c:	de f6       	brtc	.-74     	; 0xdf4 <__ultoa_invert+0xe>
 e3e:	cf 01       	movw	r24, r30
 e40:	08 95       	ret
 e42:	46 2f       	mov	r20, r22
 e44:	47 70       	andi	r20, 0x07	; 7
 e46:	40 5d       	subi	r20, 0xD0	; 208
 e48:	41 93       	st	Z+, r20
 e4a:	b3 e0       	ldi	r27, 0x03	; 3
 e4c:	0f d0       	rcall	.+30     	; 0xe6c <__ultoa_invert+0x86>
 e4e:	c9 f7       	brne	.-14     	; 0xe42 <__ultoa_invert+0x5c>
 e50:	f6 cf       	rjmp	.-20     	; 0xe3e <__ultoa_invert+0x58>
 e52:	46 2f       	mov	r20, r22
 e54:	4f 70       	andi	r20, 0x0F	; 15
 e56:	40 5d       	subi	r20, 0xD0	; 208
 e58:	4a 33       	cpi	r20, 0x3A	; 58
 e5a:	18 f0       	brcs	.+6      	; 0xe62 <__ultoa_invert+0x7c>
 e5c:	49 5d       	subi	r20, 0xD9	; 217
 e5e:	31 fd       	sbrc	r19, 1
 e60:	40 52       	subi	r20, 0x20	; 32
 e62:	41 93       	st	Z+, r20
 e64:	02 d0       	rcall	.+4      	; 0xe6a <__ultoa_invert+0x84>
 e66:	a9 f7       	brne	.-22     	; 0xe52 <__ultoa_invert+0x6c>
 e68:	ea cf       	rjmp	.-44     	; 0xe3e <__ultoa_invert+0x58>
 e6a:	b4 e0       	ldi	r27, 0x04	; 4
 e6c:	a6 95       	lsr	r26
 e6e:	97 95       	ror	r25
 e70:	87 95       	ror	r24
 e72:	77 95       	ror	r23
 e74:	67 95       	ror	r22
 e76:	ba 95       	dec	r27
 e78:	c9 f7       	brne	.-14     	; 0xe6c <__ultoa_invert+0x86>
 e7a:	00 97       	sbiw	r24, 0x00	; 0
 e7c:	61 05       	cpc	r22, r1
 e7e:	71 05       	cpc	r23, r1
 e80:	08 95       	ret
 e82:	9b 01       	movw	r18, r22
 e84:	ac 01       	movw	r20, r24
 e86:	0a 2e       	mov	r0, r26
 e88:	06 94       	lsr	r0
 e8a:	57 95       	ror	r21
 e8c:	47 95       	ror	r20
 e8e:	37 95       	ror	r19
 e90:	27 95       	ror	r18
 e92:	ba 95       	dec	r27
 e94:	c9 f7       	brne	.-14     	; 0xe88 <__ultoa_invert+0xa2>
 e96:	62 0f       	add	r22, r18
 e98:	73 1f       	adc	r23, r19
 e9a:	84 1f       	adc	r24, r20
 e9c:	95 1f       	adc	r25, r21
 e9e:	a0 1d       	adc	r26, r0
 ea0:	08 95       	ret

00000ea2 <__prologue_saves__>:
 ea2:	2f 92       	push	r2
 ea4:	3f 92       	push	r3
 ea6:	4f 92       	push	r4
 ea8:	5f 92       	push	r5
 eaa:	6f 92       	push	r6
 eac:	7f 92       	push	r7
 eae:	8f 92       	push	r8
 eb0:	9f 92       	push	r9
 eb2:	af 92       	push	r10
 eb4:	bf 92       	push	r11
 eb6:	cf 92       	push	r12
 eb8:	df 92       	push	r13
 eba:	ef 92       	push	r14
 ebc:	ff 92       	push	r15
 ebe:	0f 93       	push	r16
 ec0:	1f 93       	push	r17
 ec2:	cf 93       	push	r28
 ec4:	df 93       	push	r29
 ec6:	cd b7       	in	r28, 0x3d	; 61
 ec8:	de b7       	in	r29, 0x3e	; 62
 eca:	ca 1b       	sub	r28, r26
 ecc:	db 0b       	sbc	r29, r27
 ece:	0f b6       	in	r0, 0x3f	; 63
 ed0:	f8 94       	cli
 ed2:	de bf       	out	0x3e, r29	; 62
 ed4:	0f be       	out	0x3f, r0	; 63
 ed6:	cd bf       	out	0x3d, r28	; 61
 ed8:	09 94       	ijmp

00000eda <__epilogue_restores__>:
 eda:	2a 88       	ldd	r2, Y+18	; 0x12
 edc:	39 88       	ldd	r3, Y+17	; 0x11
 ede:	48 88       	ldd	r4, Y+16	; 0x10
 ee0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ee2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ee4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ee6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ee8:	9b 84       	ldd	r9, Y+11	; 0x0b
 eea:	aa 84       	ldd	r10, Y+10	; 0x0a
 eec:	b9 84       	ldd	r11, Y+9	; 0x09
 eee:	c8 84       	ldd	r12, Y+8	; 0x08
 ef0:	df 80       	ldd	r13, Y+7	; 0x07
 ef2:	ee 80       	ldd	r14, Y+6	; 0x06
 ef4:	fd 80       	ldd	r15, Y+5	; 0x05
 ef6:	0c 81       	ldd	r16, Y+4	; 0x04
 ef8:	1b 81       	ldd	r17, Y+3	; 0x03
 efa:	aa 81       	ldd	r26, Y+2	; 0x02
 efc:	b9 81       	ldd	r27, Y+1	; 0x01
 efe:	ce 0f       	add	r28, r30
 f00:	d1 1d       	adc	r29, r1
 f02:	0f b6       	in	r0, 0x3f	; 63
 f04:	f8 94       	cli
 f06:	de bf       	out	0x3e, r29	; 62
 f08:	0f be       	out	0x3f, r0	; 63
 f0a:	cd bf       	out	0x3d, r28	; 61
 f0c:	ed 01       	movw	r28, r26
 f0e:	08 95       	ret

00000f10 <_exit>:
 f10:	f8 94       	cli

00000f12 <__stop_program>:
 f12:	ff cf       	rjmp	.-2      	; 0xf12 <__stop_program>
